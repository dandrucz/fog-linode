---
http_interactions:
- request:
    method: get
    uri: https://api.linode.com/v4/linode/stackscripts
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <LINODE_TOKEN>
      User-Agent:
      - fog-linode/0.0.1.pre fog-core/1.45.0
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Mon, 06 May 2019 18:45:30 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '464834'
      Connection:
      - keep-alive
      Cache-Control:
      - private, max-age=0, s-maxage=0, no-cache, no-store, private, max-age=60, s-maxage=60
      X-Oauth-Scopes:
      - "*"
      X-Accepted-Oauth-Scopes:
      - stackscripts:read_only
      X-Frame-Options:
      - DENY, DENY
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - HEAD, GET, OPTIONS, POST, PUT, DELETE
      Access-Control-Allow-Headers:
      - Authorization, Origin, X-Requested-With, Content-Type, Accept, X-Filter
      X-Spec-Version:
      - 4.0.22
      Vary:
      - Authorization, X-Filter, Authorization, X-Filter
      X-Ratelimit-Limit:
      - '400'
      X-Ratelimit-Remaining:
      - '399'
      X-Ratelimit-Reset:
      - '1557168448'
      Retry-After:
      - '117'
      Access-Control-Allow-Credentials:
      - 'true'
      Access-Control-Expose-Headers:
      - X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Status
      Content-Security-Policy:
      - default-src 'none'
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: '{"pages": 12, "data": [{"description": "SiteDove Free is a powerful
        tool for beefing up the security of your website at NO COST. It includes a
        unique Burglar Alarm that shows you when changes are made to files on your
        site. If you''re not sure who made those changes, you will want to investigate
        to see if your site has been hacked.\r\n\r\nIn this way, SiteDove Free acts
        as an early warning system that can detect malicious attacks long before search
        engines and your readers encounter them. \r\n\t\t\t\r\nWebuzo is a Single
        User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        SiteDove and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:25:49", "id": 9217, "updated":
        "2014-06-10T09:58:58", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install SiteDove and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About SiteDove :\n#   SiteDove
        Free is a powerful tool for beefing up the security of your website at NO
        COST.\n#   It includes a unique Burglar Alarm that shows you when changes
        are made to files on your site.\n#   If you''re not sure who made those changes,
        you will want to investigate to see if your site has been hacked.\n###########################################################################################################\n\n#
        Install SiteDove Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=466&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        SiteDove and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, SiteDove has been successfully installed\"\necho \" \"\necho
        \"You can now configure SiteDove and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "SiteDove powered by Webuzo", "deployments_total": 0, "label":
        "SiteDove powered by Webuzo"}, {"description": "Basic lib of bash functions",
        "deployments_active": 0, "created": "2013-02-22T12:00:51", "id": 6146, "updated":
        "2013-02-25T11:31:30", "script": "#!/bin/bash\n\n# <udf name=\"ubuntu_mirror\"
        label=\"ubuntu mirror url\" default=\"http://archive.ubuntu.com/ubuntu/\">\n#
        <udf name=\"hostname\" label=\"hostname\">\n\n# Set software sources\nfunction
        set_sources_list() {\n  echo \"Adjusting sources.list (destructively)\" >>
        $logfile\n  CODENAME=$(lsb_release -sc)\n\n  cat >/etc/apt/sources.list <<EOF\ndeb
        $UBUNTU_MIRROR $CODENAME main restricted universe multiverse\ndeb-src $UBUNTU_MIRROR
        $CODENAME main restricted universe multiverse\n\ndeb $UBUNTU_MIRROR $CODENAME-updates
        main restricted universe multiverse\ndeb-src $UBUNTU_MIRROR $CODENAME-updates
        main restricted universe multiverse\n\ndeb http://security.ubuntu.com/ubuntu
        $CODENAME-security main restricted universe multiverse\ndeb-src http://security.ubuntu.com/ubuntu
        $CODENAME-security main restricted universe multiverse\nEOF\n}\n\n# Set hostname\nfunction
        set_hostname() {\n  echo \"Setting Hostname to ${HOSTNAME}\" >> $logfile\n  echo
        ${HOSTNAME} > /etc/hostname\n  hostname -F /etc/hostname\n  short=$(hostname
        -s)\n  echo \"127.0.1.1 ${short} ${short}\" >> /etc/hosts\n}\n\n# Update software
        repositories and perform upgrade\nfunction system_upgrade() {\n  echo \"Update
        system packages\" >> $logfile\n  apt-get -y update\n  apt-get -y upgrade\n}\n\n#
        Clean system packages\nfunction system_clean() {\n  apt-get -y autoremove\n  apt-get
        -y clean  \n}\n\n# Install north5 common packages\nfunction north5_packages()
        {\n  apt-get -y install build-essential\n  apt-get -y install curl htop\n\n  apt-get
        -y remove apparmor\n\n  RELEASE=$(lsb_release -sr)\n\n  # Ubuntu 12.04 already
        has these scripts integrated\n  if [[ ${RELEASE} == \"10.04\" ]]; then\n    apt-get
        -y install python-software-properties\n  fi\n}\n\n# Default log file\nlogfile=${logfile:-\"/root/stackscript.log\"}",
        "user_defined_fields": [], "ordinal": 0, "username": "north5", "images": ["linode/ubuntu10.04lts32bit",
        "linode/ubuntu10.04lts", "linode/ubuntu12.04lts32bit", null, "linode/ubuntu12.1032bit",
        "linode/ubuntu12.10"], "user_gravatar_id": "4719cf3a5ab3123f9ee536c796788b68",
        "logo_url": "", "is_public": true, "rev_note": "short hostname recoord added
        to /etc/hosts", "deployments_total": 0, "label": "north5_ubuntu_basic"}, {"description":
        "Openbiz Cubi Platform is a fast application development platform designed
        for business applications. It is built on top of the excellent Openbiz framework.
        It provides easy and intelligent development tools and implements almost all
        commonly used components, developers just need to work on their core business
        logic development. Openbiz Cubi makes application development so quick. \r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        OpenBiz Cubi and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:26:46", "id": 9218, "updated":
        "2014-06-10T09:59:03", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install OpenBiz Cubi and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About OpenBiz Cubi :\n#   Openbiz Cubi Platform is a fast application development
        platform designed for business applications.\n#   It is built on top of the
        excellent Openbiz framework. It provides easy and intelligent development
        \n#   tools and implements almost all commonly used components, developers
        just need to work on their core\n#   business logic development. Openbiz Cubi
        makes application development so quick. \n###########################################################################################################\n\n#
        Install OpenBiz Cubi Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=243&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        OpenBiz Cubi and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, OpenBiz Cubi has been successfully installed\"\necho \"
        \"\necho \"You can now configure OpenBiz Cubi and Softaculous Webuzo at the
        following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you
        for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [],
        "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "OpenBiz Cubi powered by Webuzo", "deployments_total": 0,
        "label": "OpenBiz Cubi powered by Webuzo"}, {"description": "Does nothing
        on its own. Do not deploy directly.\r\n\r\nA collection of useful Python functions
        to be included in other StackScripts.", "deployments_active": 0, "created":
        "2010-01-12T23:08:19", "id": 3, "updated": "2015-09-14T20:52:25", "script":
        "#!/usr/bin/env python\n\n\"\"\"\nPython Library StackScript\n\n\tAuthor:
        Ricardo N Feliciano <rfeliciano@linode.com>\n\tVersion: 1.0.0.0\n\tRequirements:\n\t\t-
        n/a\n\nThis StackScript is not meant to be directly deployed. Includes a host
        of\nfunctions to do very common task on a distro, as implemented in Python.
        The\nfunctions in this library are designed to be run accross the Linode Core\nDistributions:\n\t-
        Ubuntu\n\t- CentOS\n\t- Debian\n\t- Fedora\n\"\"\"\n\n\nimport crypt\nimport
        fcntl\nimport logging\nimport os\nimport platform\nimport pwd\nimport socket\nimport
        subprocess\nimport sys\nimport time\ntry:\n\timport apt\nexcept:\n\ttry:\n\t\timport
        yum\n\texcept:\n\t\ttry:\n\t\t\timport dnf\n\t\texcept ImportError:\n\t\t\tprint(\"Package
        manager support was not found.\")\n\t\t\t\n\ndistro = None\n\"\"\"String list:
        Contains details of the distribution.\"\"\"\n\n\ndef end():\n\t\"\"\"End the
        StackScript cleanly.\"\"\"\n\t\n\t# Should the StackScripts themselves be
        removed here at some point?\n\tlogging.info(\"The StackScript has been completed.\")\n\tsubprocess.check_output(''echo
        \"The StackScript has completed. Press enter to continue.\" | wall -n'', shell=True)\n\n\ndef
        init():\n\t\"\"\"Start features we consider StackScript standard.\"\"\"\n\t\n\t#
        Sanity check for CentOS 7 & Fedora 22\n\tif os.path.exists(\"/var/log/stackscript.log\"):\n\t\tsys.exit(1)
        # StackScript already started once, bail\n\t\n\twith open(\"/etc/profile.d/stackscript.sh\",
        \"w\") as f:\n\t\tf.write(\"\"\"#!/bin/bash\nif pgrep -f \"python /root/StackScript\"
        &>/dev/null\nthen\n\techo \"####################################################################\"\n\techo
        \"#####\"\n\techo \"#####  Warning: Your StackScript is still running\"\n\techo
        \"#####\"\n\techo \"#####\"\n\techo \"#####  Please do not make any system
        changes until it \"\n\techo \"#####  completes. Log file is located at: \"\n\techo
        \"#####    /var/log/stackscript.log\"\n\techo \"####################################################################\"\n\techo
        \" \"\nelse\n\techo \"####################################################################\"\n\techo
        \"#####\"\n\techo \"#####  The StackScript has completed. Enjoy your system.\"\n\techo
        \"#####\"\n\techo \"#####\"\n\techo \"#####  For reference, the logfile is
        located at: \"\n\techo \"#####    /var/log/stackscript.log\"\n\techo \"####################################################################\"\n\techo
        \" \"\n\trm /etc/profile.d/stackscript.sh\nfi\"\"\")\n\t\n\tlogging_start()\n\n\ndef
        logging_start(the_file=\"/var/log/stackscript.log\", the_level=logging.INFO):\n\t\"\"\"Turn
        on logging.\"\"\"\n\t\n\tlogging.basicConfig(filename=the_file, level=the_level)\n\tlogging.info(\"Logging
        has started. \" + str(time.time()))\n\n\ndef system_detect_distro():\n\t\"\"\"Prepares
        distro information.\n\t\n\tThis is critical to support the Linode Core Distributions
        with a single\n\tscript.\n\t\"\"\"\n\tglobal distro\n\n\t# add support for
        logging\n\t\n\tdistro = dict(zip((''distname'', ''version'', ''codename''),\n\tplatform.linux_distribution(full_distribution_name=0)))\n\t\n\tdistro[''distname'']
        = distro[''distname''].lower()\n\n\tif distro[''distname''] in (''debian'',
        ''ubuntu''):\n\t\tdistro[''family''] = \"debian\"\n\telif distro[''distname'']
        in (''fedora'', ''centos''):\n\t\tdistro[''family''] = \"redhat\"\n\telse:\n\t\traise
        NotImplementedError(\"This distribution is not supported.\")\n\n\ndef system_IP_get():\n\t\"\"\"Return
        IPv4 address configured on eth0.\n\t\n\tThis basically is a disgusting hack.
        Please let me know if you find a\n\tcleaner way to do this.\"\"\"\n\t# add
        support for logging\n\n\ts = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\treturn
        socket.inet_ntoa(fcntl.ioctl(\n\t\ts.fileno(),\n\t\t0x8915, # SIOCGIFADDR\n\t\tstruct.pack(''256s'',
        \"eth0\")\n\t)[20:24])\n\n\ndef system_IP_rdns(IP):\n\t\"\"\"Get PTR for given
        IP address.\"\"\"\n\t# add support for logging\n\n\treturn socket.gethostbyaddr(IP)[0]\n\n\ndef
        system_package_install(package, update_first=True):\n\t\"\"\"Install a package
        with the appropriate package manager.\"\"\"\n\t# add support for logging\n\n\tif
        distro is None:\n\t\tsystem_detect_distro()\n\n\tsystem_update() if update_first
        else None\n\t\n\tif distro[''family''] == \"debian\":\n\t\tos.environ[''DEBIAN_FRONTEND'']
        = \"noninteractive\"\n\t\tcache = apt.Cache()\n\t\tpkg = cache[package]\n\t\tpkg.mark_install()\n\t\tcache.commit()\n\telif
        distro[''distname''] == \"centos\":\n\t\tyb = yum.YumBase()\n\t\tyb.conf.assumeyes
        = True\n\t\tyb.install(name=package)\n\t\tyb.resolveDeps()\n\t\tyb.processTransaction()\n\t\tyb.close()\n\telif
        distro[''distname''] == \"fedora\":\n\t\tdnfb = dnf.Base()\n\t\tdnfb.conf.assumeyes
        = True\n\t\tdnfb.read_all_repos()\n\t\tdnfb.fill_sack()\n\t\tdnfb.install(package)\n\t\tdnfb.resolve()\n\t\tdnfb.download_packages(dnfb.transaction.install_set)\n\t\tdnfb.do_transaction()\n\t\tdnfb.close()\n\n\ndef
        system_update():\n\t\"\"\"Uses the distro''s package manager to update packages.\"\"\"\n\t#add
        support for logging\n\t\n\tif distro is None:\n\t\tsystem_detect_distro()\n\t\n\tif
        distro[''family''] == \"debian\":\n\t\tcache = apt.Cache()\n\t\tcache.update()\n\t\tcache.open(None)\n\t\tcache.upgrade()\n\t\tcache.commit()\n\telif
        distro[''distname''] == \"centos\":\n\t\tyb = yum.YumBase()\n\t\tyb.conf.assumeyes
        = True\n\t\tyb.update()\n\t\tyb.resolveDeps()\n\t\tyb.processTransaction()\n\t\tyb.close()\n\telif
        distro[''distname''] == \"fedora\":\n\t\tdnfb = dnf.Base()\n\t\tdnfb.conf.assumeyes
        = True\n\t\t#dnfb.read_all_repos() #updates were failing with this line\n\t\tdnfb.fill_sack()\n\t\tdnfb.upgrade_all()\n\t\tdnfb.resolve()\n\t\tdnfb.do_transaction()\n\t\tdnfb.close()\n\n\ndef
        user_add(username, password, groups):\n\t\"\"\"Creates a Linux user account.\n\t\n\tArgs:\n\t\tusername
        (String): A Linux username.\n\t\tpassword (String): Password for the user.\n\t\tgroups
        (tuple): Groups that the user should be added to.\n\t\n\tReturns:\n\t\tbool:
        True if successful, False otherwise.\n\t\"\"\"\n\n\t# need to implement logging\n\t#
        need to implement group functionality\n\n\treturn subprocess.call([''useradd'',
        ''-m'', ''-p'', crypt.crypt(password, \"22\"), ''-s'', ''/bin/bash'', username])\n\n\ndef
        user_add_pubkey(username, key):\n\t\"\"\"Adds the public SSH key to the specified
        user.\"\"\"\n\t# need to implement logging\n\t\n\tif username != \"root\":\n\t\tos.seteuid(pwd.getpwnam(username).pw_uid)\n\t\tos.setegid(pwd.getpwnam(username).pw_gid)\n\t\n\tpubkey_dir
        = os.path.join(os.getenv(\"HOME\"), \".ssh\")\n\t\n\tif not os.path.isdir(pubkey_dir):\n\t\tos.makedirs(pubkey_dir)\n\t\n\twith
        open(os.path.join(pubkey_dir, \"authorized_keys\")) as f:\n\t\tf.write(key)\n\t\n\tif
        username != \"root\":\n\t\tos.seteuid(0)\n\t\tos.setegid(0)", "user_defined_fields":
        [], "ordinal": 0, "username": "linode", "images": ["linode/centos7", "linode/debian7",
        "linode/debian8", "linode/fedora22", "linode/ubuntu14.04lts"], "user_gravatar_id":
        "ead4da00f4fe6a4bd0b4f11a510c031d", "logo_url": "", "is_public": true, "rev_note":
        "Initial import.", "deployments_total": 0, "label": "StackScript Python Library"},
        {"description": "PRADO is a component-based and event-driven programming framework
        for developing Web applications in PHP 5.\r\nPRADO stands for PHP Rapid Application
        Development Object-oriented.\r\n\t\t\t\r\nWebuzo is a Single User Control
        Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
        System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
        or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        PRADO and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:27:42", "id": 9219, "updated":
        "2014-06-10T09:59:10", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install PRADO and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About PRADO :\n#   PRADO
        is a component-based and event-driven programming framework for developing
        Web \n#   applications in PHP 5. PRADO stands for PHP Rapid Application Development
        Object-oriented.\n###########################################################################################################\n\n#
        Install PRADO Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=221&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        PRADO and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, PRADO has been successfully installed\"\necho \" \"\necho
        \"You can now configure PRADO and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "PRADO powered by Webuzo", "deployments_total": 0, "label":
        "PRADO powered by Webuzo"}, {"description": "BIGACE is a free and professional
        grade software package that allows you to set up your own website within minutes.\r\n\r\nIts
        powerful backend puts you in full control of the layout and content of your
        pages. And when you need more, you can choose from many Plugins and Themes
        to extend it.\r\n\r\nBigace is designed to provide you with all the features
        you need from a CMS while having complete freedom to customize it the way
        you want. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps
        users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
        NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        BIGACE and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:28:31", "id": 9220, "updated":
        "2014-06-10T09:59:39", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install BIGACE and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About BIGACE :\n#   BIGACE
        is a free and professional grade software package that allows you to set up
        your own website within minutes.\n#   Its powerful backend puts you in full
        control of the layout and content of your pages.\n#   And when you need more,
        you can choose from many Plugins and Themes to extend it.\n###########################################################################################################\n\n#
        Install BIGACE Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=400&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        BIGACE and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, BIGACE has been successfully installed\"\necho \" \"\necho
        \"You can now configure BIGACE and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "BIGACE powered by Webuzo", "deployments_total": 0, "label":
        "BIGACE powered by Webuzo"}, {"description": "Bash Library for StackScripts\r\n**
        FUNCTIONS ONLY **", "deployments_active": 0, "created": "2017-04-24T23:09:27",
        "id": 84996, "updated": "2018-07-25T21:17:40", "script": "#!/bin/bash\n\n#
        Complete Bash Library\n# v0.5.0\n\n# Supported Distributions\n#########################\n#
        Debian 8\n# Ubuntu 16.04\n# Ubuntu 12.04\n# CentOS 7\n#########################\n\n#
        Notes\n#########################\n# Add function_restart_services\n# Add goodstuff\n#
        Deeper fail2ban configuration\n# Percentage based service tuning\n# Incorperate
        deprecated functions into new distros\n#########################\n\n# System
        Ubuntu\n###############\n\nfunction ubuntu1604_set_hostname {\n\t# Sets hostname
        and updates /etc/hosts file\n\n\tHOSTNAME=\"$1\"  \n    if [ ! -n \"$HOSTNAME\"
        ]; then\n        echo \"Hostname Not Defined.\"\n        return 1;\n    fi\n    \n    hostnamectl
        set-hostname $1\n    sed -i \"s/ubuntu/$1/g\" /etc/hosts\n}\n\nfunction ubuntu1604_update
        {\n\t# Configures Apt, disables interactive prompt, updates repositories and
        upgrades system packages.\n\n\t# Forces Apt to use IPv4\n\techo ''Acquire::ForceIPv4
        \"true\";'' > /etc/apt/apt.conf.d/99force-ipv4\n\t# Disables interactive prompts\n\texport
        DEBIAN_FRONTEND=noninteractive\n\t# Updates Repositories and Upgrades Packages\n\tapt-get
        update && apt-get upgrade -y\n}\n\nfunction ubuntu1604_install_additional
        {\n\t# Install additional system packages\n\t\n\tapt-get install -y fail2ban
        vim screen\n}\n\nfunction ubuntu1604_restart_lamp {\n\tsystemctl restart apache2\n\tsystemctl
        restart mysql\n}\n\n# Users Ubuntu and Authentication\n#################################\n\nfunction
        ubuntu1604_user_add_sudo {\n    # Installs sudo, creates non-root user and
        adds the user to the sudo group\n\n    USERNAME=\"$1\"\n    USERPASS=\"$2\"\n    if
        [ ! -n \"$USERNAME\" ] || [ ! -n \"$USERPASS\" ]; then\n        echo \"No
        username and/or password entered.\"\n        return 1;\n    fi\n    \n    apt-get
        -y install sudo\n    adduser $USERNAME --disabled-password --gecos \"\"\n    echo
        \"$USERNAME:$USERPASS\" | chpasswd\n    usermod -aG sudo $USERNAME\n}\n\nfunction
        ubuntu1604_key_user {\n\t# Adds public SSH key to non-root user\n\n\tUSERNAME=\"$1\"\n    KEY=\"$2\"\n    if
        [ ! -n \"$USERNAME\" ] || [ ! -n \"$KEY\" ];\tthen\n        echo \"No username
        and/or public key entered.\"\n        return 1;\n    fi\n\n\tmkdir /home/$1/.ssh\n\techo
        $2 > /home/$1/.ssh/authorized_keys\n\tchown -R $1:$1 /home/$1/*\n\tchown -R
        $1:$1 /home/$1/.*\n}\n\nfunction ubuntu1604_ssh_disable_root {\n\t# Disables
        Root SSH Access and restarts SSH\n\n    sed -i -e ''s/PermitRootLogin\\ yes/PermitRootLogin\\
        no/g'' /etc/ssh/sshd_config\n    systemctl restart ssh  \n}\n\nfunction ubuntu1604_secure_apache
        {\n\t# Updates /etc/apache2/conf-available/security.conf with restrictive
        settings\n\n\tsed -i -e ''s/\\#ServerSignature\\ Off/ServerSignature\\ Off/g''
        /etc/apache2/conf-available/security.conf\n\tsed -i -e ''s/ServerSignature\\
        On/\\#ServerSignature\\ On/g'' /etc/apache2/conf-available/security.conf\n\tsed
        -i -e ''s/\\#ServerTokens\\ Minimal/ServerTokens\\ Minimal/g'' /etc/apache2/conf-available/security.conf\n\tsed
        -i -e ''s/ServerTokens\\ OS/\\#ServerTokens\\ OS/g'' /etc/apache2/conf-available/security.conf\n}\n\n#
        System Debian 8\n#################\n\nfunction debian8_set_hostname {\n\t#
        Sets hostname and updates /etc/hosts file\n\n\tHOSTNAME=\"$1\"  \n    if [
        ! -n \"$HOSTNAME\" ]; then\n        echo \"Hostname Not Defined.\"\n        return
        1;\n    fi\n    \n    hostnamectl set-hostname $1\n    sed -i \"s/debian/$1/g\"
        /etc/hosts\n}\n\nfunction debian8_update {\n\t# Configures Apt, disables interactive
        prompt, updates repositories and upgrades system packages.\n\n\t# Forces Apt
        to use IPv4\n\techo ''Acquire::ForceIPv4 \"true\";'' > /etc/apt/apt.conf.d/99force-ipv4\n\t#
        Disables interactive prompts\n\texport DEBIAN_FRONTEND=noninteractive\n\t#
        Updates Repositories and Upgrades Packages\n\tapt-get update && apt-get upgrade
        -y\n}\n\nfunction debian8_install_additional {\n\t# Install additional system
        packages\n\t\n\tapt-get install -y fail2ban vim screen\n}\n\nfunction debian8_restart_lamp
        {\n\tsystemctl restart apache2\n\tsystemctl restart mysql\n}\n\n# Debian 8
        Users and Authentication\n###################################\n\nfunction
        debian8_user_add_sudo {\n    # Installs sudo, creates non-root user and adds
        the user to the sudo group\n\n    USERNAME=\"$1\"\n    USERPASS=\"$2\"\n    if
        [ ! -n \"$USERNAME\" ] || [ ! -n \"$USERPASS\" ]; then\n        echo \"No
        username and/or password entered.\"\n        return 1;\n    fi\n    \n    apt-get
        -y install sudo\n    adduser $USERNAME --disabled-password --gecos \"\"\n    echo
        \"$USERNAME:$USERPASS\" | chpasswd\n    usermod -aG sudo $USERNAME\n}\n\nfunction
        debian8_key_user {\n\t# Adds public SSH key to non-root user\n\n\tUSERNAME=\"$1\"\n    KEY=\"$2\"\n    if
        [ ! -n \"$USERNAME\" ] || [ ! -n \"$KEY\" ];\tthen\n        echo \"No username
        and/or public key entered.\"\n        return 1;\n    fi\n\n\tmkdir /home/$1/.ssh\n\techo
        $2 > /home/$1/.ssh/authorized_keys\n\tchown -R $1:$1 /home/$1/*\n\tchown -R
        $1:$1 /home/$1/.*\n}\n\nfunction debian8_ssh_disable_root {\n\t# Disables
        Root SSH Access and restarts SSH\n\n    sed -i -e ''s/PermitRootLogin\\ yes/PermitRootLogin\\
        no/g'' /etc/ssh/sshd_config\n    systemctl restart ssh  \n}\n\nfunction debian8_secure_apache
        {\n\t# Updates /etc/apache2/conf-available/security.conf with restrictive
        settings\n\n\tsed -i -e ''s/\\#ServerSignature\\ Off/ServerSignature\\ Off/g''
        /etc/apache2/conf-available/security.conf\n\tsed -i -e ''s/ServerSignature\\
        On/\\#ServerSignature\\ On/g'' /etc/apache2/conf-available/security.conf\n\tsed
        -i -e ''s/\\#ServerTokens\\ Minimal/ServerTokens\\ Minimal/g'' /etc/apache2/conf-available/security.conf\n\tsed
        -i -e ''s/ServerTokens\\ OS/\\#ServerTokens\\ OS/g'' /etc/apache2/conf-available/security.conf\n}\n\n#
        System CentOS 7\n#################\n\nfunction centos7_set_hostname {\n\t#
        Sets hostname and updates /etc/hosts file\n\n\tHOSTNAME=\"$1\"       \n    if
        [ ! -n \"$HOSTNAME\" ]; then\n        echo \"Hostname undefined\"\n        return
        1;\n    fi\n    \n    hostnamectl set-hostname $1\n    sed -i \"s/localhost/$1/g\"
        /etc/hosts\n}\n\nfunction centos7_update {\n\t# Full system update\n\n\tyum
        update -y\n}\n\nfunction centos7_install_epel-release {\n\tyum install epel-release
        -y\n}\n\nfunction centos7_system_primary_ip {\n    # returns the primary IP
        assigned to eth0\n    echo $(ifconfig eth0 | awk -F: ''/inet addr:/ {print
        $2}'' | awk ''{ print $1 }'')\n}\n\nfunction centos7_get_rdns {\n    # calls
        host on an IP address and returns its reverse dns\n\n    if [ ! -e /usr/bin/host
        ]; then\n        aptitude -y install dnsutils > /dev/null\n    fi\n    echo
        $(host $1 | awk ''/pointer/ {print $5}'' | sed ''s/\\.$//'')\n}\n\nfunction
        centos7_get_rdns_primary_ip {\n    # returns the reverse dns of the primary
        IP assigned to this system\n    echo $(get_rdns $(system_primary_ip))\n}\n\nfunction
        centos7_install_additional {\n\t# Installs additional system packages and
        enabled Mariadb to start on boot.\n\n\tyum install -y fail2ban vim screen\n\tsystemctl
        enable mariadb\n}\n\nfunction centos7_restart_lamp {\n\tsystemctl restart
        httpd\n\tsystemctl restart mariadb\n}\n\n# Users CentOS 7\n################\n\nfunction
        centos7_user_add_sudo {\n\t# Installs Sudo, adds non-root user and adds non-root
        user to wheel group.\n\n    USERNAME=\"$1\"\n    USERPASS=\"$2\"\n    if [
        ! -n \"$USERNAME\" ] || [ ! -n \"$USERPASS\" ]; then\n        echo \"No new
        username and/or password entered\"\n        return 1;\n    fi\n    \n    yum
        install -y sudo\n    adduser $USERNAME\n    echo \"$USERNAME:$USERPASS\" |
        chpasswd\n    usermod -aG wheel $USERNAME\n}\n\nfunction centos7_key_user
        {\n\t# Adds public SSH key to non-root user\n\n\tUSERNAME=\"$1\"\n    KEY=\"$2\"\n    if
        [ ! -n \"$USERNAME\" ] || [ ! -n \"$KEY\" ]; then\n        echo \"No username
        and/or public key entered.\"\n        return 1;\n    fi\n\n\tmkdir /home/$1/.ssh\n\techo
        $2 > /home/$1/.ssh/authorized_keys\n\tchown -R $1:$1 /home/$1/*\n\tchown -R
        $1:$1 /home/$1/.*\n}\n\nfunction centos7_ssh_disable_root {\n\t# Disables
        root SSH login and restarts SSH\n\n    sed -i -e ''s/PermitRootLogin\\ yes/PermitRootLogin\\
        no/g'' /etc/ssh/sshd_config\n    systemctl restart sshd  \n}\n\n# MySQL\n#######\n\nfunction
        ubuntu1604_install_mysql {\n\techo \"mysql-server mysql-server/root_password
        password $1\" | debconf-set-selections\n\techo \"mysql-server mysql-server/root_password_again
        password $1\" | debconf-set-selections\n\tapt-get install -y mysql-server\n\tsystemctl
        enable mysql\n}\n\nfunction debian8_install_mysql {\n\techo \"mysql-server
        mysql-server/root_password password $1\" | debconf-set-selections\n\techo
        \"mysql-server mysql-server/root_password_again password $1\" | debconf-set-selections\n\tapt-get
        install -y mysql-server\n\tsystemctl enable mysql\n}\n\nfunction centos7_install_mysql
        {\n\tyum install mariadb-server -y\n\tsystemctl enable mariadb\n}\n\nfunction
        mysql_create_database {\n\t# Creates MySQL Database with user-determined name\n\t\n\tDBPASS=\"$1\"\n\tDBNAME=\"$2\"\n\tif
        [ ! -n \"$DBPASS\" ] || [ ! -n \"$DBNAME\" ]; then\n\t\techo \"No Database
        Name and/or MySQL Password entered.\"\n\t\treturn 1;\n\tfi\n\n\techo \"CREATE
        DATABASE $2;\" | mysql -u root -p$1\n}\n\nfunction mysql_create_user {\n\t#
        Creates non-root MySQL\n\n\tDBPASS=\"$1\"\n\tUSER=\"$2\"\n\tUSERPASS=\"$3\"\n\tif
        [ ! -n \"$DBPASS\" ] || [ ! -n \"$USER\" ] || [ ! -n \"$USERPASS\" ]; then\n\t\techo
        \"MySQL Username, Username Password and MySQL Root Password are Required.\"\n\t\treturn
        1;\n\tfi\n\n\techo \"CREATE USER ''$2''@''localhost'' IDENTIFIED BY ''$3'';\"
        | mysql -u root -p$1\n}\n\nfunction mysql_grant_user {\n\t# Grants privileges
        for non-root MySQL user on user-defined database.\n\n\tDBPASS=\"$1\"\n\tUSER=\"$2\"\n\tDB=\"$3\"\n\tif
        [ ! -n \"$DBPASS\" ] || [ ! -n \"$USER\" ] || [ ! -n \"$DB\" ]; then\n\t\techo
        \"MySQL Username, Database and MySQL Root Password are Required.\"\n\t\treturn
        1;\n\tfi\n\n\techo \"GRANT ALL PRIVILEGES ON $3.* TO ''$2''@''localhost'';\"
        | mysql -u root -p$1\n    echo \"FLUSH PRIVILEGES;\" | mysql -u root -p$1\n}\n\nfunction
        centos7_mysql_setpass {\n\t# Sets root password for MariaDB\n\n\tDBPASS=\"$1\"\n\tif
        [ ! -n \"$DBPASS\"]; then\n\t\techo \"No Database Password Set\"\n\t\treturn
        1;\n\tfi\n\n\techo \"SET PASSWORD FOR ''root''@''localhost'' = PASSWORD(''$1'');\"
        | mysql -u root\n}\n\nfunction ubuntu1604_mysql_secure_installation {\n\t#
        Installs expect, runs mysql_secure_installation then uninstall expect \n\n\tapt-get
        install -y expect\n\tSECURE_MYSQL=$(expect -c \"\n\tset timeout 10\n\tspawn
        mysql_secure_installation\n\texpect \\\"Enter current password for root (enter
        for none):\\\"\n\tsend \\\"$MYSQL\\r\\\"\n\texpect \\\"Change the root password?\\\"\n\tsend
        \\\"n\\r\\\"\n\texpect \\\"Remove anonymous users?\\\"\n\tsend \\\"y\\r\\\"\n\texpect
        \\\"Disallow root login remotely?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Remove
        test database and access to it?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Reload
        privilege tables now?\\\"\n\tsend \\\"y\\r\\\"\n\texpect eof\n\t\")\n\n\techo
        \"$SECURE_MYSQL\"\n\n\tapt-get purge -y expect\n}\n\nfunction debian8_mysql_secure_installation
        {\n\t# Installs expect, runs mysql_secure_installation then uninstall expect
        \n\n\tapt-get install -y expect\n\tSECURE_MYSQL=$(expect -c \"\n\tset timeout
        10\n\tspawn mysql_secure_installation\n\texpect \\\"Enter current password
        for root (enter for none):\\\"\n\tsend \\\"$MYSQL\\r\\\"\n\texpect \\\"Change
        the root password?\\\"\n\tsend \\\"n\\r\\\"\n\texpect \\\"Remove anonymous
        users?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Disallow root login remotely?\\\"\n\tsend
        \\\"y\\r\\\"\n\texpect \\\"Remove test database and access to it?\\\"\n\tsend
        \\\"y\\r\\\"\n\texpect \\\"Reload privilege tables now?\\\"\n\tsend \\\"y\\r\\\"\n\texpect
        eof\n\t\")\n\n\techo \"$SECURE_MYSQL\"\n\n\tapt-get purge -y expect\n}\n\nfunction
        centos7_mysql_secure_installation {\n\t# Installs expect, runs mysql_secure_installation
        then uninstall expect \n\n\tyum install -y expect\n\tSECURE_MYSQL=$(expect
        -c \"\n\tset timeout 10\n\tspawn mysql_secure_installation\n\texpect \\\"Enter
        current password for root (enter for none):\\\"\n\tsend \\\"$1\\r\\\"\n\texpect
        \\\"Change the root password?\\\"\n\tsend \\\"n\\r\\\"\n\texpect \\\"Remove
        anonymous users?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Disallow root login
        remotely?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Remove test database and
        access to it?\\\"\n\tsend \\\"y\\r\\\"\n\texpect \\\"Reload privilege tables
        now?\\\"\n\tsend \\\"y\\r\\\"\n\texpect eof\n\t\")\n\n\techo \"$SECURE_MYSQL\"\n\n\tyum
        remove -y expect\n}\n\n# Apache\n########\n\nfunction ubuntu1604_install_apache
        {\n\tapt-get install -y apache2\n\tsystemctl enable apache2\n}\n\nfunction
        debian8_install_apache {\n\tapt-get install -y apache2\n\tsystemctl enable
        apache2\n}\n\nfunction ubuntu1604_apache_create_virtualhost {\n\t# Creates
        Apache2 VirtualHost for user-defined domain.\n\n\tDOMAIN=\"$1\"\n\tif [ !
        -n \"$DOMAIN\" ]; then\n\t\techo \"No FQDN Defined.\"\n\t\treturn 1;\n\tfi\n\n\t#
        Creates webroot directory and log directory\n    mkdir -p /var/www/$1/{public_html,logs}\n    #
        Creates VirtualHost file\n    touch /etc/apache2/sites-available/$1.conf\n    echo
        \"<VirtualHost *:80>\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerAdmin
        webmaster@$1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerName
        $1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerAlias
        www.$1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     DocumentRoot
        /var/www/$1/public_html/\" >> /etc/apache2/sites-available/$1.conf\n    echo
        \"     ErrorLog /var/www/$1/logs/$1-error.log\" >> /etc/apache2/sites-available/$1.conf\n    echo
        \"     CustomLog /var/www/$1/logs/$1-access.log combined\" >> /etc/apache2/sites-available/$1.conf\n    echo
        \"</VirtualHost>\" >> /etc/apache2/sites-available/$1.conf\n    # Enables
        the VirtualHost\n    a2ensite $1.conf\n    # Creates temporary index.html
        file with the FQDN\n   \techo \"<html><head><title>$1</title></head><body><h1>$1</h1></body></html>\"
        > /var/www/$1/public_html/index.html\n   \t# Enables Apache2 to start on boot
        and restarts Apache2.\n    systemctl enable apache2\n    systemctl restart
        apache2\n}\n\nfunction debian8_apache_create_virtualhost {\n\t# Creates Apache2
        VirtualHost for user-defined domain.\n\n\tDOMAIN=\"$1\"\n\tif [ ! -n \"$DOMAIN\"
        ]; then\n\t\techo \"No FQDN Defined.\"\n\t\treturn 1;\n\tfi\n\n\t# Creates
        webroot directory and log directory\n    mkdir -p /var/www/$1/{public_html,logs}\n    #
        Creates VirtualHost file\n    touch /etc/apache2/sites-available/$1.conf\n    echo
        \"<VirtualHost *:80>\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerAdmin
        webmaster@$1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerName
        $1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     ServerAlias
        www.$1\" >> /etc/apache2/sites-available/$1.conf\n    echo \"     DocumentRoot
        /var/www/$1/public_html/\" >> /etc/apache2/sites-available/$1.conf\n    echo
        \"     ErrorLog /var/www/$1/logs/$1-error.log\" >> /etc/apache2/sites-available/$1.conf\n    echo
        \"     CustomLog /var/www/$1/logs/$1-access.log combined\" >> /etc/apache2/sites-available/$1.conf\n    echo
        \"</VirtualHost>\" >> /etc/apache2/sites-available/$1.conf\n    # Enables
        the VirtualHost\n    a2ensite $1.conf\n    # Creates temporary index.html
        file with the FQDN\n   \techo \"<html><head><title>$1</title></head><body><h1>$1</h1></body></html>\"
        > /var/www/$1/public_html/index.html\n   \t# Enables Apache2 to start on boot
        and restarts Apache2.\n    systemctl enable apache2\n    systemctl restart
        apache2\n}\n\nfunction ubuntu1604_apache_tune {\n\t# Disables KeepAlive, tunes
        Apache2 variables in mpm-prefork and switches to mpm-prefork module.\n\n\techo
        \"<IfModule mpm_prefork_module>\" > /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        StartServers            4\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        MinSpareServers         20\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        MaxSpareServers         40\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        MaxRequestWorkers       200\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        MaxConnectionsPerChild  4500\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"</IfModule>\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\ta2dismod
        mpm_event\n\ta2enmod mpm_prefork\n}\n\nfunction debian8_apache_tune {\n\t#
        Disables KeepAlive, tunes Apache2 variables in mpm-prefork and switches to
        mpm-prefork module.\n\n\techo \"<IfModule mpm_prefork_module>\" > /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        StartServers            4\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        MinSpareServers         20\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        MaxSpareServers         40\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        MaxRequestWorkers       200\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"        MaxConnectionsPerChild  4500\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\techo
        \"</IfModule>\" >> /etc/apache2/mods-available/mpm-prefork.conf\n\ta2dismod
        mpm_event\n\ta2enmod mpm_prefork\n}\n\nfunction centos7_install_apache {\n\tyum
        install httpd -y\n\tsystemctl enable httpd\n}\n\nfunction centos7_apache_create_virtualhost
        {\n\t# Creates httpd VirtualHost for user-defined domain.\t\n\n\tDOMAIN=\"$1\"\n\tif
        [ ! -n \"$DOMAIN\" ]; then\n\t\techo \"No FQDN Defined.\"\n\t\treturn 1;\n\tfi\n\n\t#
        Creates webroot directory and log directory\n\tmkdir -p /var/www/$1/{public_html,logs}\n\t#
        Creates VirtualHost file\n\ttouch /etc/httpd/conf.d/vhost.conf\n\techo \"NameVirtualHost
        *:80\" >> /etc/httpd/conf.d/vhost.conf\n\techo \"<VirtualHost *:80>\" >> /etc/httpd/conf.d/vhost.conf\n\techo
        \"     ServerAdmin webmaster@$1\" >> /etc/httpd/conf.d/vhost.conf\n\techo
        \"     ServerAlias www.$1\" >> /etc/httpd/conf.d/vhost.conf\n\techo \"     DocumentRoot
        /var/www/$1/public_html/\" >> /etc/httpd/conf.d/vhost.conf\n\techo \"     ErrorLog
        /var/www/$1/logs/$1-error.log\" >> /etc/httpd/conf.d/vhost.conf\n\techo \"     CustomLog
        /var/www/$1/logs/$1-access.log combined\" >> /etc/httpd/conf.d/vhost.conf\n\techo
        \"</VirtualHost>\" >> /etc/httpd/conf.d/vhost.conf\n\t# Creates temporary
        index.html file with the FQDN\n\techo \"<html><head><title>$1</title></head><body><h1>$1</h1></body></html>\"
        > /var/www/$1/public_html/index.html\n\t# Enables httpd to start on boot and
        restarts httpd.\n\tsystemctl enable httpd\n\tsystemctl restart httpd\n}\n\nfunction
        centos7_apache_tune {\n\t# Disables KeepAlive and tunes variables for prefork
        module.\n\n\techo \"KeepAlive Off\" >> /etc/httpd/conf/httpd.conf\n\techo
        \"<IfModule prefork.c>\" >> /etc/httpd/conf/httpd.conf\n\techo \"    StartServers        4\"
        >> /etc/httpd/conf/httpd.conf\n\techo \"    MinSpareServers     20\" >> /etc/httpd/conf/httpd.conf\n\techo
        \"    MaxSpareServers     40\" >> /etc/httpd/conf/httpd.conf\n\techo \"    MaxClients          200\"
        >> /etc/httpd/conf/httpd.conf\n\techo \"    MaxRequestsPerChild 4500\" >>
        /etc/httpd/conf/httpd.conf\n\techo \"</IfModule>\" >> /etc/httpd/conf/httpd.conf\n}\n\nfunction
        ubuntu1604_apache_virtualhost_get_docroot {\n    if [ ! -n \"$1\" ]; then\n        echo
        \"apache_virtualhost_get_docroot() requires the hostname as the first argument\"\n        return
        1;\n    fi\n\n    if [ -e /etc/apache2/sites-available/$1 ];\n        then
        echo $(awk ''/DocumentRoot/ {print $2}'' /etc/apache2/sites-available/$1 )\n    fi\n}\n\nfunction
        debian8_apache_virtualhost_get_docroot {\n    if [ ! -n \"$1\" ]; then\n        echo
        \"apache_virtualhost_get_docroot() requires the hostname as the first argument\"\n        return
        1;\n    fi\n\n    if [ -e /etc/apache2/sites-available/$1 ];\n        then
        echo $(awk ''/DocumentRoot/ {print $2}'' /etc/apache2/sites-available/$1 )\n    fi\n}\n\n#
        PHP\n#####\n\nfunction ubuntu1604_install_php {\n\tapt-get install -y php7.0
        php-pear libapache2-mod-php7.0 php7.0-mysql php7.0-curl php7.0-json php7.0-cgi\n}\n\nfunction
        debian8_install_php {\n\tapt-get install -y php7.0 php-pear libapache2-mod-php7.0
        php7.0-mysql php7.0-curl php7.0-json php7.0-cgi\n}\n\nfunction centos7_install_php
        {\n\tyum install php php-pear php-mysql -y\n}\n\nfunction ubuntu1604_php_tune
        {\n\t# Tunes PHP for optimal values and enabled logging.\n\n\tsed -i -e ''s/max_input_time\\
        \\=\\ 60/max_input_time\\ \\=\\ 30/g'' /etc/php/7.0/apache2/php.ini\n\tsed
        -i -e ''s/error_reporting\\ \\=\\ E_ALL\\ \\&\\ ~E_DEPRECATED\\ \\&\\ ~E_STRICT/error_reporting\\
        \\=\\ E_COMPILE_ERROR\\ \\|\\ E_RECOVERABLE_ERROR\\ \\|\\ E_ERROR\\ \\|\\
        E_CORE_ERROR/g'' /etc/php/7.0/apache2/php.ini\n\tsed -i -e ''s/\\;error_log\\
        \\=\\ php_errors.log/error_log\\ \\=\\ \\/var\\/log\\/php\\/error.log/g''
        /etc/php/7.0/apache2/php.ini\n\tmkdir /var/log/php\n\tchown www-data /var/log/php\n\tsystemctl
        restart apache2\n}\n\nfunction debian8_php_tune {\n\t# Tunes PHP for optimal
        values and enabled logging.\n\n\tsed -i -e ''s/max_input_time\\ \\=\\ 60/max_input_time\\
        \\=\\ 30/g'' /etc/php/7.0/apache2/php.ini\n\tsed -i -e ''s/error_reporting\\
        \\=\\ E_ALL\\ \\&\\ ~E_DEPRECATED\\ \\&\\ ~E_STRICT/error_reporting\\ \\=\\
        E_COMPILE_ERROR\\ \\|\\ E_RECOVERABLE_ERROR\\ \\|\\ E_ERROR\\ \\|\\ E_CORE_ERROR/g''
        /etc/php/7.0/apache2/php.ini\n\tsed -i -e ''s/\\;error_log\\ \\=\\ php_errors.log/error_log\\
        \\=\\ \\/var\\/log\\/php\\/error.log/g'' /etc/php/7.0/apache2/php.ini\n\tmkdir
        /var/log/php\n\tchown www-data /var/log/php\n\tsystemctl restart apache2\n}\n\nfunction
        centos7_php_tune {\n\t# Tunes PHP for optimal values and enabled logging.\n\n\tsed
        -i -e ''s/max_input_time\\ \\=\\ 60/max_input_time\\ \\=\\ 30/g'' /etc/php.ini\n\tsed
        -i -e ''s/error_reporting\\ \\=\\ E_ALL\\ \\&\\ ~E_DEPRECATED\\ \\&\\ ~E_STRICT/error_reporting\\
        \\=\\ E_COMPILE_ERROR\\ \\|\\ E_RECOVERABLE_ERROR\\ \\|\\ E_ERROR\\ \\|\\
        E_CORE_ERROR/g'' /etc/php.ini\n\tsed -i -e ''s/\\;error_log\\ \\=\\ php_errors.log/error_log\\
        \\=\\ \\/var\\/log\\/php\\/error.log/g'' /etc/php.ini\n\tmkdir /var/log/php\n\tchown
        apache /var/log/php\n\tsystemctl reload httpd\n}\n\n# Fail2Ban\n##########\n\nfunction
        ubuntu1604_install_fail2ban {\n\tapt-get install -y fail2ban\n\tsystemctl
        enable fail2ban\n\tsystemctl start fail2ban\n}\n\nfunction debian8_install_fail2ban
        {\n\tapt-get install -y fail2ban\n\tsystemctl enable fail2ban\n\tsystemctl
        start fail2ban\n}\n\nfunction centos7_install_fail2ban {\n\tyum install fail2ban
        -y\n\tsystemctl enable fail2ban\n\tsystemctl start fail2ban\n}\n\n# iptables\n##########\n\nfunction
        ubuntu1604_iptables_lamp {\n\t# Configures optimal iptables/ip6tables rules
        for a LAMP stack.\n\t# Installs/configures iptables-persistent.\n\n\tiptables
        -A INPUT -i lo -j ACCEPT\n\tiptables -A INPUT ! -i lo -s 127.0.0.0/8 -j REJECT\n\tiptables
        -A INPUT -p icmp -m state --state NEW --icmp-type 8 -j ACCEPT\n\tiptables
        -A INPUT -p tcp --dport 22 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT
        -p tcp --dport 80 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT -p tcp
        --dport 443 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT -m state --state
        ESTABLISHED,RELATED -j ACCEPT\n\tiptables -A INPUT -m limit --limit 5/min
        -j LOG --log-prefix \"iptables_INPUT_denied: \" --log-level 7\n\tiptables
        -A INPUT -j REJECT\n\tiptables -A FORWARD -m limit --limit 5/min -j LOG --log-prefix
        \"iptables_FORWARD_denied: \" --log-level 7\n\tiptables -A FORWARD -j REJECT\n\tip6tables
        -A INPUT -i lo -j ACCEPT\n\tip6tables -A INPUT ! -i lo -s ::1/128 -j REJECT\n\tip6tables
        -A INPUT -p icmpv6 -j ACCEPT\n\tip6tables -A INPUT -p tcp --dport 80 -m state
        --state NEW -j ACCEPT\n\tip6tables -A INPUT -p tcp --dport 443 -m state --state
        NEW -j ACCEPT\n\tip6tables -A INPUT -m state --state ESTABLISHED,RELATED -j
        ACCEPT\n\tip6tables -A INPUT -m limit --limit 5/min -j LOG --log-prefix \"ip6tables_INPUT_denied:
        \" --log-level 7\n\tip6tables -A INPUT -j REJECT\n\tip6tables -A FORWARD -m
        limit --limit 5/min -j LOG --log-prefix \"ip6tables_FORWARD_denied: \" --log-level
        7\n\tip6tables -A FORWARD -j REJECT\n\techo \"iptables-persistent iptables-persistent/autosave_v4
        boolean true\" | debconf-set-selections\n\techo \"iptables-persistent iptables-persistent/autosave_v6
        boolean true\" | debconf-set-selections\n\tapt-get install -y iptables-persistent\n}\n\nfunction
        debian8_iptables_lamp {\n\t# Configures optimal iptables/ip6tables rules for
        a LAMP stack.\n\t# Installs/configures iptables-persistent.\n\n\tiptables
        -A INPUT -i lo -j ACCEPT\n\tiptables -A INPUT ! -i lo -s 127.0.0.0/8 -j REJECT\n\tiptables
        -A INPUT -p icmp -m state --state NEW --icmp-type 8 -j ACCEPT\n\tiptables
        -A INPUT -p tcp --dport 22 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT
        -p tcp --dport 80 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT -p tcp
        --dport 443 -m state --state NEW -j ACCEPT\n\tiptables -A INPUT -m state --state
        ESTABLISHED,RELATED -j ACCEPT\n\tiptables -A INPUT -m limit --limit 5/min
        -j LOG --log-prefix \"iptables_INPUT_denied: \" --log-level 7\n\tiptables
        -A INPUT -j REJECT\n\tiptables -A FORWARD -m limit --limit 5/min -j LOG --log-prefix
        \"iptables_FORWARD_denied: \" --log-level 7\n\tiptables -A FORWARD -j REJECT\n\tip6tables
        -A INPUT -i lo -j ACCEPT\n\tip6tables -A INPUT ! -i lo -s ::1/128 -j REJECT\n\tip6tables
        -A INPUT -p icmpv6 -j ACCEPT\n\tip6tables -A INPUT -p tcp --dport 80 -m state
        --state NEW -j ACCEPT\n\tip6tables -A INPUT -p tcp --dport 443 -m state --state
        NEW -j ACCEPT\n\tip6tables -A INPUT -m state --state ESTABLISHED,RELATED -j
        ACCEPT\n\tip6tables -A INPUT -m limit --limit 5/min -j LOG --log-prefix \"ip6tables_INPUT_denied:
        \" --log-level 7\n\tip6tables -A INPUT -j REJECT\n\tip6tables -A FORWARD -m
        limit --limit 5/min -j LOG --log-prefix \"ip6tables_FORWARD_denied: \" --log-level
        7\n\tip6tables -A FORWARD -j REJECT\n\techo \"iptables-persistent iptables-persistent/autosave_v4
        boolean true\" | debconf-set-selections\n\techo \"iptables-persistent iptables-persistent/autosave_v6
        boolean true\" | debconf-set-selections\n\tapt-get install -y iptables-persistent\n}\n\nfunction
        centos7_iptables_lamp {\n\t# Stops and Disables firewalld.\n\t# Installs iptables-services,
        configures optimal iptables/ip6tables rules for a LAMP stack.\n\t# Saves iptables/ip6tables
        rules, enables iptables-services to start on boot and starts iptables-services.\n\n\tsystemctl
        stop firewalld.service && systemctl disable firewalld.service\n\tyum install
        -y iptables-services\n\tiptables -A INPUT -i lo -j ACCEPT\n\tiptables -A INPUT
        ! -i lo -s 127.0.0.0/8 -j REJECT\n\tiptables -A INPUT -p icmp -m state --state
        NEW --icmp-type 8 -j ACCEPT\n\tiptables -A INPUT -p tcp --dport 22 -m state
        --state NEW -j ACCEPT\n\tiptables -A INPUT -p tcp --dport 80 -m state --state
        NEW -j ACCEPT\n\tiptables -A INPUT -p tcp --dport 443 -m state --state NEW
        -j ACCEPT\n\tiptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\tiptables
        -A INPUT -m limit --limit 5/min -j LOG --log-prefix \"iptables_INPUT_denied:
        \" --log-level 7\n\tiptables -A INPUT -j REJECT\n\tiptables -A FORWARD -m
        limit --limit 5/min -j LOG --log-prefix \"iptables_FORWARD_denied: \" --log-level
        7\n\tiptables -A FORWARD -j REJECT\n\tip6tables -A INPUT -i lo -j ACCEPT\n\tip6tables
        -A INPUT ! -i lo -s ::1/128 -j REJECT\n\tip6tables -A INPUT -p icmpv6 -j ACCEPT\n\tip6tables
        -A INPUT -p tcp --dport 80 -m state --state NEW -j ACCEPT\n\tip6tables -A
        INPUT -p tcp --dport 443 -m state --state NEW -j ACCEPT\n\tip6tables -A INPUT
        -m state --state ESTABLISHED,RELATED -j ACCEPT\n\tip6tables -A INPUT -m limit
        --limit 5/min -j LOG --log-prefix \"ip6tables_INPUT_denied: \" --log-level
        7\n\tip6tables -A INPUT -j REJECT\n\tip6tables -A FORWARD -m limit --limit
        5/min -j LOG --log-prefix \"ip6tables_FORWARD_denied: \" --log-level 7\n\tip6tables
        -A FORWARD -j REJECT\n\tservice iptables save\n\tservice ip6tables save\n\tsystemctl
        enable iptables && systemctl enable ip6tables\n\tsystemctl start iptables
        && systemctl start ip6tables\n}\n\n# Crons\n#######\n\nfunction ubuntu1604_update_cron
        {\n\t# Configures a cron job to update the system every day at 1AM. \n\n\techo
        \"00 1 * * * apt-get update && apt-get upgrade -y\" > /root/.cron\n\tcrontab
        -u root /root/.cron\n}\n\nfunction debian8_update_cron {\n\t# Configures a
        cron job to update the system every day at 1AM. \n\n\techo \"00 1 * * * apt-get
        update && apt-get upgrade -y\" > /root/.cron\n\tcrontab -u root /root/.cron\n}\n\nfunction
        centos7_update_cron {\n\t# Configures a cron job to update the system every
        day at 1AM. \n\n\techo \"00 1 * * * yum update -y\" > /root/.cron\n\tcrontab
        -u root /root/.cron\n}\n\n\n#########################\n# Deprecated Ubuntu
        12.04\n#########################\n\nfunction system_update {\n    apt-get
        update\n    apt-get -y install aptitude\n    aptitude -y full-upgrade\n}\n\nfunction
        system_primary_ip {\n    # returns the primary IP assigned to eth0\n    echo
        $(ifconfig eth0 | awk -F: ''/inet addr:/ {print $2}'' | awk ''{ print $1 }'')\n}\n\nfunction
        get_rdns {\n    # calls host on an IP address and returns its reverse dns\n\n    if
        [ ! -e /usr/bin/host ]; then\n        aptitude -y install dnsutils > /dev/null\n    fi\n    echo
        $(host $1 | awk ''/pointer/ {print $5}'' | sed ''s/\\.$//'')\n}\n\nfunction
        get_rdns_primary_ip {\n    # returns the reverse dns of the primary IP assigned
        to this system\n    echo $(get_rdns $(system_primary_ip))\n}\n\nfunction system_set_hostname
        {\n    # $1 - The hostname to define\n    HOSTNAME=\"$1\"\n        \n    if
        [ ! -n \"$HOSTNAME\" ]; then\n        echo \"Hostname undefined\"\n        return
        1;\n    fi\n    \n    echo \"$HOSTNAME\" > /etc/hostname\n    hostname -F
        /etc/hostname\n}\n\nfunction system_add_host_entry {\n    # $1 - The IP address
        to set a hosts entry for\n    # $2 - The FQDN to set to the IP\n    IPADDR=\"$1\"\n    FQDN=\"$2\"\n\n    if
        [ -z \"$IPADDR\" -o -z \"$FQDN\" ]; then\n        echo \"IP address and/or
        FQDN Undefined\"\n        return 1;\n    fi\n    \n    echo $IPADDR $FQDN  >>
        /etc/hosts\n}\n\n\n###########################################################\n#
        Users and Authentication\n###########################################################\n\nfunction
        user_add_sudo {\n    # Installs sudo if needed and creates a user in the sudo
        group.\n    #\n    # $1 - Required - username\n    # $2 - Required - password\n    USERNAME=\"$1\"\n    USERPASS=\"$2\"\n\n    if
        [ ! -n \"$USERNAME\" ] || [ ! -n \"$USERPASS\" ]; then\n        echo \"No
        new username and/or password entered\"\n        return 1;\n    fi\n    \n    aptitude
        -y install sudo\n    adduser $USERNAME --disabled-password --gecos \"\"\n    echo
        \"$USERNAME:$USERPASS\" | chpasswd\n    usermod -aG sudo $USERNAME\n}\n\nfunction
        user_add_pubkey {\n    # Adds the users public key to authorized_keys for
        the specified user. Make sure you wrap your input variables in double quotes,
        or the key may not load properly.\n    #\n    #\n    # $1 - Required - username\n    #
        $2 - Required - public key\n    USERNAME=\"$1\"\n    USERPUBKEY=\"$2\"\n    \n    if
        [ ! -n \"$USERNAME\" ] || [ ! -n \"$USERPUBKEY\" ]; then\n        echo \"Must
        provide a username and the location of a pubkey\"\n        return 1;\n    fi\n    \n    if
        [ \"$USERNAME\" == \"root\" ]; then\n        mkdir /root/.ssh\n        echo
        \"$USERPUBKEY\" >> /root/.ssh/authorized_keys\n        return 1;\n    fi\n    \n    mkdir
        -p /home/$USERNAME/.ssh\n    echo \"$USERPUBKEY\" >> /home/$USERNAME/.ssh/authorized_keys\n    chown
        -R \"$USERNAME\":\"$USERNAME\" /home/$USERNAME/.ssh\n}\n\nfunction ssh_disable_root
        {\n    # Disables root SSH access.\n    sed -i ''s/PermitRootLogin yes/PermitRootLogin
        no/'' /etc/ssh/sshd_config\n    touch /tmp/restart-ssh\n    \n}\n\n###########################################################\n#
        Postfix\n###########################################################\n\nfunction
        postfix_install_loopback_only {\n    # Installs postfix and configure to listen
        only on the local interface. Also\n    # allows for local mail delivery\n\n    echo
        \"postfix postfix/main_mailer_type select Internet Site\" | debconf-set-selections\n    echo
        \"postfix postfix/mailname string localhost\" | debconf-set-selections\n    echo
        \"postfix postfix/destinations string localhost.localdomain, localhost\" |
        debconf-set-selections\n    aptitude -y install postfix\n    /usr/sbin/postconf
        -e \"inet_interfaces = loopback-only\"\n    #/usr/sbin/postconf -e \"local_transport
        = error:local delivery is disabled\"\n\n    touch /tmp/restart-postfix\n}\n\n\n###########################################################\n#
        Apache\n###########################################################\n\nfunction
        apache_install {\n    # installs the system default apache2 MPM\n    aptitude
        -y install apache2\n\n    a2dissite default # disable the interfering default
        virtualhost\n\n    # clean up, or add the NameVirtualHost line to ports.conf\n    sed
        -i -e ''s/^NameVirtualHost \\*$/NameVirtualHost *:80/'' /etc/apache2/ports.conf\n    if
        ! grep -q NameVirtualHost /etc/apache2/ports.conf; then\n        echo ''NameVirtualHost
        *:80'' > /etc/apache2/ports.conf.tmp\n        cat /etc/apache2/ports.conf
        >> /etc/apache2/ports.conf.tmp\n        mv -f /etc/apache2/ports.conf.tmp
        /etc/apache2/ports.conf\n    fi\n}\n\nfunction apache_tune {\n    # Tunes
        Apache''s memory to use the percentage of RAM you specify, defaulting to 40%\n\n    #
        $1 - the percent of system memory to allocate towards Apache\n\n    if [ !
        -n \"$1\" ];\n        then PERCENT=40\n        else PERCENT=\"$1\"\n    fi\n\n    aptitude
        -y install apache2-mpm-prefork\n    PERPROCMEM=10 # the amount of memory in
        MB each apache process is likely to utilize\n    MEM=$(grep MemTotal /proc/meminfo
        | awk ''{ print int($2/1024) }'') # how much memory in MB this system has\n    MAXCLIENTS=$((MEM*PERCENT/100/PERPROCMEM))
        # calculate MaxClients\n    MAXCLIENTS=${MAXCLIENTS/.*} # cast to an integer\n    sed
        -i -e \"s/\\(^[ \\t]*MaxClients[ \\t]*\\)[0-9]*/\\1$MAXCLIENTS/\" /etc/apache2/apache2.conf\n\n    touch
        /tmp/restart-apache2\n}\n\nfunction apache_virtualhost {\n    # Configures
        a VirtualHost\n\n    # $1 - required - the hostname of the virtualhost to
        create \n\n    if [ ! -n \"$1\" ]; then\n        echo \"apache_virtualhost()
        requires the hostname as the first argument\"\n        return 1;\n    fi\n\n    if
        [ -e \"/etc/apache2/sites-available/$1\" ]; then\n        echo /etc/apache2/sites-available/$1
        already exists\n        return;\n    fi\n\n    mkdir -p /srv/www/$1/public_html
        /srv/www/$1/logs\n\n    echo \"<VirtualHost *:80>\" > /etc/apache2/sites-available/$1\n    echo
        \"    ServerName $1\" >> /etc/apache2/sites-available/$1\n    echo \"    DocumentRoot
        /srv/www/$1/public_html/\" >> /etc/apache2/sites-available/$1\n    echo \"    ErrorLog
        /srv/www/$1/logs/error.log\" >> /etc/apache2/sites-available/$1\n    echo
        \"    CustomLog /srv/www/$1/logs/access.log combined\" >> /etc/apache2/sites-available/$1\n    echo
        \"</VirtualHost>\" >> /etc/apache2/sites-available/$1\n\n    a2ensite $1\n\n    touch
        /tmp/restart-apache2\n}\n\nfunction apache_virtualhost_from_rdns {\n    #
        Configures a VirtualHost using the rdns of the first IP as the ServerName\n\n    apache_virtualhost
        $(get_rdns_primary_ip)\n}\n\n\nfunction apache_virtualhost_get_docroot {\n    if
        [ ! -n \"$1\" ]; then\n        echo \"apache_virtualhost_get_docroot() requires
        the hostname as the first argument\"\n        return 1;\n    fi\n\n    if
        [ -e /etc/apache2/sites-available/$1 ];\n        then echo $(awk ''/DocumentRoot/
        {print $2}'' /etc/apache2/sites-available/$1 )\n    fi\n}\n\n###########################################################\n#
        mysql-server\n###########################################################\n\nfunction
        mysql_install {\n    # $1 - the mysql root password\n\n    if [ ! -n \"$1\"
        ]; then\n        echo \"mysql_install() requires the root pass as its first
        argument\"\n        return 1;\n    fi\n\n    echo \"mysql-server mysql-server/root_password
        password $1\" | debconf-set-selections\n    echo \"mysql-server mysql-server/root_password_again
        password $1\" | debconf-set-selections\n    apt-get -y install mysql-server
        mysql-client\n\n    echo \"Sleeping while MySQL starts up for the first time...\"\n    sleep
        5\n}\n\nfunction mysql_tune {\n    # Tunes MySQL''s memory usage to utilize
        the percentage of memory you specify, defaulting to 40%\n\n    # $1 - the
        percent of system memory to allocate towards MySQL\n\n    if [ ! -n \"$1\"
        ];\n        then PERCENT=40\n        else PERCENT=\"$1\"\n    fi\n\n    sed
        -i -e ''s/^#skip-innodb/skip-innodb/'' /etc/mysql/my.cnf # disable innodb
        - saves about 100M\n\n    MEM=$(awk ''/MemTotal/ {print int($2/1024)}'' /proc/meminfo)
        # how much memory in MB this system has\n    MYMEM=$((MEM*PERCENT/100)) #
        how much memory we''d like to tune mysql with\n    MYMEMCHUNKS=$((MYMEM/4))
        # how many 4MB chunks we have to play with\n\n    # mysql config options we
        want to set to the percentages in the second list, respectively\n    OPTLIST=(key_buffer
        sort_buffer_size read_buffer_size read_rnd_buffer_size myisam_sort_buffer_size
        query_cache_size)\n    DISTLIST=(75 1 1 1 5 15)\n\n    for opt in ${OPTLIST[@]};
        do\n        sed -i -e \"/\\[mysqld\\]/,/\\[.*\\]/s/^$opt/#$opt/\" /etc/mysql/my.cnf\n    done\n\n    for
        i in ${!OPTLIST[*]}; do\n        val=$(echo | awk \"{print int((${DISTLIST[$i]}
        * $MYMEMCHUNKS/100))*4}\")\n        if [ $val -lt 4 ]\n            then val=4\n        fi\n        config=\"${config}\\n${OPTLIST[$i]}
        = ${val}M\"\n    done\n\n    sed -i -e \"s/\\(\\[mysqld\\]\\)/\\1\\n$config\\n/\"
        /etc/mysql/my.cnf\n\n    touch /tmp/restart-mysql\n}\n\nfunction mysql_create_database
        {\n    # $1 - the mysql root password\n    # $2 - the db name to create\n\n    if
        [ ! -n \"$1\" ]; then\n        echo \"mysql_create_database() requires the
        root pass as its first argument\"\n        return 1;\n    fi\n    if [ ! -n
        \"$2\" ]; then\n        echo \"mysql_create_database() requires the name of
        the database as the second argument\"\n        return 1;\n    fi\n\n    echo
        \"CREATE DATABASE $2;\" | mysql -u root -p$1\n}\n\nfunction mysql_create_user
        {\n    # $1 - the mysql root password\n    # $2 - the user to create\n    #
        $3 - their password\n\n    if [ ! -n \"$1\" ]; then\n        echo \"mysql_create_user()
        requires the root pass as its first argument\"\n        return 1;\n    fi\n    if
        [ ! -n \"$2\" ]; then\n        echo \"mysql_create_user() requires username
        as the second argument\"\n        return 1;\n    fi\n    if [ ! -n \"$3\"
        ]; then\n        echo \"mysql_create_user() requires a password as the third
        argument\"\n        return 1;\n    fi\n\n    echo \"CREATE USER ''$2''@''localhost''
        IDENTIFIED BY ''$3'';\" | mysql -u root -p$1\n}\n\nfunction mysql_grant_user
        {\n    # $1 - the mysql root password\n    # $2 - the user to bestow privileges
        \n    # $3 - the database\n\n    if [ ! -n \"$1\" ]; then\n        echo \"mysql_create_user()
        requires the root pass as its first argument\"\n        return 1;\n    fi\n    if
        [ ! -n \"$2\" ]; then\n        echo \"mysql_create_user() requires username
        as the second argument\"\n        return 1;\n    fi\n    if [ ! -n \"$3\"
        ]; then\n        echo \"mysql_create_user() requires a database as the third
        argument\"\n        return 1;\n    fi\n\n    echo \"GRANT ALL PRIVILEGES ON
        $3.* TO ''$2''@''localhost'';\" | mysql -u root -p$1\n    echo \"FLUSH PRIVILEGES;\"
        | mysql -u root -p$1\n\n}\n\n###########################################################\n#
        PHP functions\n###########################################################\n\nfunction
        php_install_with_apache {\n    aptitude -y install php5 php5-mysql libapache2-mod-php5\n    touch
        /tmp/restart-apache2\n}\n\nfunction php_tune {\n    # Tunes PHP to utilize
        up to 32M per process\n\n    sed -i''-orig'' ''s/memory_limit = [0-9]\\+M/memory_limit
        = 32M/'' /etc/php5/apache2/php.ini\n    touch /tmp/restart-apache2\n}\n\n###########################################################\n#
        Wordpress functions\n###########################################################\n\nfunction
        wordpress_install {\n    # installs the latest wordpress tarball from wordpress.org\n\n    #
        $1 - required - The existing virtualhost to install into\n\n    if [ ! -n
        \"$1\" ]; then\n        echo \"wordpress_install() requires the vitualhost
        as its first argument\"\n        return 1;\n    fi\n\n    if [ ! -e /usr/bin/wget
        ]; then\n        aptitude -y install wget\n    fi\n\n    VPATH=$(apache_virtualhost_get_docroot
        $1)\n\n    if [ ! -n \"$VPATH\" ]; then\n        echo \"Could not determine
        DocumentRoot for $1\"\n        return 1;\n    fi\n\n    # download, extract,
        chown, and get our config file started\n    cd $VPATH\n    wget http://wordpress.org/latest.tar.gz\n    tar
        xfz latest.tar.gz\n    chown -R www-data: wordpress/\n    cd $VPATH/wordpress\n    cp
        wp-config-sample.php wp-config.php\n    chown www-data wp-config.php\n    chmod
        640 wp-config.php\n\n    # database configuration\n    WPPASS=$(randomString
        20)\n    mysql_create_database \"$DB_PASSWORD\" wordpress\n    mysql_create_user
        \"$DB_PASSWORD\" wordpress \"$WPPASS\"\n    mysql_grant_user \"$DB_PASSWORD\"
        wordpress wordpress\n\n    # configuration file updates\n    for i in {1..4}\n        do
        sed -i \"0,/put your unique phrase here/s/put your unique phrase here/$(randomString
        50)/\" wp-config.php\n    done\n\n    sed -i ''s/database_name_here/wordpress/''
        wp-config.php\n    sed -i ''s/username_here/wordpress/'' wp-config.php\n    sed
        -i \"s/password_here/$WPPASS/\" wp-config.php\n\n    # http://downloads.wordpress.org/plugin/wp-super-cache.0.9.8.zip\n}\n\n###########################################################\n#
        Other niceties!\n###########################################################\n\nfunction
        goodstuff {\n    # Installs the REAL vim, wget, less, and enables color root
        prompt and the \"ll\" list long alias\n\n    aptitude -y install wget vim
        less\n    sed -i -e ''s/^#PS1=/PS1=/'' /root/.bashrc # enable the colorful
        root bash prompt\n    sed -i -e \"s/^#alias ll=''ls -l''/alias ll=''ls -al''/\"
        /root/.bashrc # enable ll list long alias <3\n}\n\n\n###########################################################\n#
        utility functions\n###########################################################\n\nfunction
        restartServices {\n    # restarts services that have a file in /tmp/needs-restart/\n\n    for
        service in $(ls /tmp/restart-* | cut -d- -f2-10); do\n        /etc/init.d/$service
        restart\n        rm -f /tmp/restart-$service\n    done\n}\n\nfunction randomString
        {\n    if [ ! -n \"$1\" ];\n        then LEN=20\n        else LEN=\"$1\"\n    fi\n\n    echo
        $(</dev/urandom tr -dc A-Za-z0-9 | head -c $LEN) # generate a random string\n}",
        "user_defined_fields": [], "ordinal": 0, "username": "tkelso", "images": ["linode/centos7",
        "linode/debian8", "linode/ubuntu16.04lts"], "user_gravatar_id": "a94e5434345409282c17b253f3d2a72d",
        "logo_url": "", "is_public": true, "rev_note": "v0.5.0", "deployments_total":
        0, "label": "Library_Bash"}, {"description": "", "deployments_active": 0,
        "created": "2011-06-28T15:16:50", "id": 2822, "updated": "2011-06-28T15:35:19",
        "script": "#!/bin/bash\n#<UDF name=\"db_password\" Label=\"MySQL root Password\"
        />\n#<UDF name=\"db_name\" Label=\"Create Database\" default=\"\" example=\"Optionally
        create this database\" />\n#<UDF name=\"db_user\" Label=\"Create MySQL User\"
        default=\"\" example=\"Optionally create this user\" />\n#<UDF name=\"db_user_password\"
        Label=\"MySQL User''s Password\" default=\"\" example=\"User''s password\"
        />\n\nsource <ssinclude StackScriptID=\"1\">\n\nsystem_update\npostfix_install_loopback_only\nmysql_install
        \"$DB_PASSWORD\" && mysql_tune 40\nmysql_create_database \"$DB_PASSWORD\"
        \"$DB_NAME\"\nmysql_create_user \"$DB_PASSWORD\" \"$DB_USER\" \"$DB_USER_PASSWORD\"\nmysql_grant_user
        \"$DB_PASSWORD\" \"$DB_USER\" \"$DB_NAME\"\nphp_install_with_apache && php_tune\napache_install
        && apache_tune 40 && apache_virtualhost_from_rdns\ngoodstuff\nrestartServices",
        "user_defined_fields": [{"name": "db_password", "label": "MySQL root Password"},
        {"example": "Optionally create this database", "name": "db_name", "label":
        "Create Database", "default": ""}, {"example": "Optionally create this user",
        "name": "db_user", "label": "Create MySQL User", "default": ""}, {"example":
        "User''s password", "name": "db_user_password", "label": "MySQL User''s Password",
        "default": ""}], "ordinal": 0, "username": "smartjones", "images": ["linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "0b874d2362ffd16a2178ba9339c40798", "logo_url": "", "is_public":
        true, "rev_note": "Initial import", "deployments_total": 0, "label": "Smartweb"},
        {"description": "CS-Cart is the best shopping cart solution for building an
        ecommerce website of any size: from a small web store to a virtual shopping
        mall. A ready storefront, support for many payment and shipping options, full
        inventory control, unlimited products, promotional tools, and other ecommerce
        software features out-of-the-box.\r\n\r\nCS-Cart shopping cart software offers
        a search engine friendly environment that involves the tableless layout, customizable
        META tags, friendly URLs and Google sitemap. This all contributes well to
        the proper indexing of your web store and generally improves its ranking among
        the popular search engines like Google, Yahoo! Search and Bing.\r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        CS-Cart and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:30:40", "id": 9222, "updated":
        "2014-06-10T09:59:50", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install CS-Cart and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About CS-Cart :\n#   CS-Cart
        is the best shopping cart solution for building an ecommerce website of any
        size: from a small \n#   web store to a virtual shopping mall. \n#   A ready
        storefront, support for many payment and shipping options, full inventory
        control, \n#   unlimited products, promotional tools, and other ecommerce
        software features out-of-the-box.\n###########################################################################################################\n\n#
        Install CS-Cart Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=479&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        CS-Cart and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, CS-Cart has been successfully installed\"\necho \" \"\necho
        \"You can now configure CS-Cart and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "CS-Cart powered by Webuzo", "deployments_total": 0, "label":
        "CS-Cart powered by Webuzo"}, {"description": "Chive is a modern Open-Source
        MySQL Data Management tool. With it''s fast and elaborate user interface it
        is getting very popular especially by web engineers. Chive was created because
        of an disaffection with existing tools. They usually were hard to handle and
        very time-consuming while the daily use of an web engineer.\r\n\r\nChive is
        a free, open source, web-based database management tool, designed to bring
        joy to web developers - with easy administration, super fast UI and state
        of the art web technologies. Based on top of the current version of the Yii
        framework, Chive takes advantage of the MVC design pattern and unit testing.
        \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users deploy
        Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
        Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Chive and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:31:29", "id": 9223, "updated":
        "2014-06-10T09:59:54", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Chive and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Chive :\n#   Chive
        is a modern Open-Source MySQL Data Management tool.\n#   With it''s fast and
        elaborate user interface it is getting very popular especially by web engineers.\n#   Chive
        was created because of an disaffection with existing tools.\n#   They usually
        were hard to handle and very time-consuming while the daily use of an web
        engineer.\n###########################################################################################################\n\n#
        Install Chive Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=398&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Chive and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Chive has been successfully installed\"\necho \" \"\necho
        \"You can now configure Chive and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Chive powered by Webuzo", "deployments_total": 0, "label":
        "Chive powered by Webuzo"}, {"description": "Commentics is a free, advanced
        PHP comment script with many features. Professionally written and with open
        source code, its main aims are to be integrable, customizable and secure.
        \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users deploy
        Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
        Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Commentics and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:32:01", "id": 9224, "updated":
        "2014-06-10T10:00:01", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Commentics and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Commentics :\n#   Commentics is a free, advanced PHP comment script
        with many features.\n#   Professionally written and with open source code,
        its main aims are to be integrable, customizable and secure. \n###########################################################################################################\n\n#
        Install Commentics Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=446&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Commentics and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Commentics has been successfully installed\"\necho \" \"\necho
        \"You can now configure Commentics and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Commentics powered by Webuzo", "deployments_total": 0,
        "label": "Commentics powered by Webuzo"}, {"description": "functions.sh from
        sys-apps/openrc, exports and contains various helpful functions.", "deployments_active":
        0, "created": "2014-09-10T09:29:11", "id": 10248, "updated": "2017-03-27T09:50:35",
        "script": "#!/bin/bash\n# Copyright (c) 2007-2009 Roy Marples <roy@marples.name>\n#
        Released under the 2-clause BSD license.\n\n# Allow any sh script to work
        with einfo functions and friends\n# We also provide a few helpful functions
        for other programs to use\n\nRC_GOT_FUNCTIONS=\"yes\"\n\neindent()\n{\n        :
        $(( EINFO_INDENT = ${EINFO_INDENT:-0} + 2 ))\n        [ \"$EINFO_INDENT\"
        -gt 40 ] && EINFO_INDENT=40\n        export EINFO_INDENT\n}\n\neoutdent()\n{\n        :
        $(( EINFO_INDENT = ${EINFO_INDENT:-0} - 2 ))\n        [ \"$EINFO_INDENT\"
        -lt 0 ] && EINFO_INDENT=0\n        return 0\n}\n\nyesno()\n{\n        [ -z
        \"$1\" ] && return 1\n\n        case \"$1\" in\n                [Yy][Ee][Ss]|[Tt][Rr][Uu][Ee]|[Oo][Nn]|1)
        return 0;;\n                [Nn][Oo]|[Ff][Aa][Ll][Ss][Ee]|[Oo][Ff][Ff]|0)
        return 1;;\n        esac\n\n        local value=\n        eval value=\\$${1}\n        case
        \"$value\" in\n                [Yy][Ee][Ss]|[Tt][Rr][Uu][Ee]|[Oo][Nn]|1) return
        0;;\n                [Nn][Oo]|[Ff][Aa][Ll][Ss][Ee]|[Oo][Ff][Ff]|0) return
        1;;\n                *) vewarn \"\\$$1 is not set properly\"; return 1;;\n        esac\n}\n\nrc_runlevel()\n{\n    rc-status
        --runlevel\n}\n\n_sanitize_path()\n{\n        local IFS=\":\" p= path=\n        for
        p in $PATH; do\n                case \"$p\" in\n                        /lib64/rc/bin|/lib64/rc/sbin);;\n                        /bin|/sbin|/usr/bin|/usr/sbin);;\n                        /usr/bin|/usr/sbin);;\n                        /usr/local/bin|/usr/local/sbin);;\n                        *)
        path=\"$path${path:+:}$p\";;\n                esac\n        done\n        echo
        \"$path\"\n}\n\n# Allow our scripts to support zsh\nif [ -n \"$ZSH_VERSION\"
        ]; then\n        emulate sh\n        NULLCMD=:\n        alias -g ''${1+\"$@\"}''=''\"$@\"''\n        setopt
        NO_GLOB_SUBST\nfi\n\n# Make a sane PATH\n_PREFIX=\n_PKG_PREFIX=/usr\n_LOCAL_PREFIX=/usr/local\n_LOCAL_PREFIX=${_LOCAL_PREFIX:-/usr/local}\n_PATH=/lib64/rc/bin\ncase
        \"$_PREFIX\" in\n        \"$_PKG_PREFIX\"|\"$_LOCAL_PREFIX\") ;;\n        *)
        _PATH=\"$_PATH:$_PREFIX/bin:$_PREFIX/sbin\";;\nesac\n_PATH=\"$_PATH\":/bin:/sbin:/usr/bin:/usr/sbin\n\nif
        [ -n \"$_PKG_PREFIX\" ]; then\n        _PATH=\"$_PATH:$_PKG_PREFIX/bin:$_PKG_PREFIX/sbin\"\nfi\nif
        [ -n \"$_LOCAL_PREFIX\" ]; then\n        _PATH=\"$_PATH:$_LOCAL_PREFIX/bin:$_LOCAL_PREFIX/sbin\"\nfi\n_path=\"$(_sanitize_path
        \"$PATH\")\"\nPATH=\"$_PATH${_path:+:}$_path\" ; export PATH\nunset _sanitize_path
        _PREFIX _PKG_PREFIX _LOCAL_PREFIX _PATH _path\n\nfor arg; do\n        case
        \"$arg\" in\n                --nocolor|--nocolour|-C)\n                        EINFO_COLOR=\"NO\"
        ; export EINFO_COLOR\n                        ;;\n        esac\ndone\n\nif
        [ -t 1 ] && yesno \"${EINFO_COLOR:-YES}\"; then\n        if [ -z \"$GOOD\"
        ]; then\n                eval $(eval_ecolors)\n        fi\nelse\n        #
        We need to have shell stub functions so our init scripts can remember\n        #
        the last ecmd\n        for _e in ebegin eend error errorn einfo einfon ewarn
        ewarnn ewend \\\n                vebegin veend veinfo vewarn vewend; do\n                eval
        \"$_e() { local _r; command $_e \\\"\\$@\\\"; _r=\\$?; \\\n                EINFO_LASTCMD=$_e;
        export EINFO_LASTCMD ; return \\$_r; }\"\n        done\n        unset _e\nfi",
        "user_defined_fields": [], "ordinal": 0, "username": "regna", "images": ["linode/gentoo"],
        "user_gravatar_id": "9761d400c1d16197a8aa3983039dd06d", "logo_url": "", "is_public":
        true, "rev_note": "openrc-0.12.4", "deployments_total": 0, "label": "functions.sh"},
        {"description": "XCloner is a professional website Backup and Restore application
        designed to allow you to create safe complete backups of any PHP/Mysql website
        and to be able to restore them anywhere. It works as a native Joomla backup
        component, as a native Wordpress backup plugin and also as standalone PHP/Mysql
        backup application. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which
        helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps
        (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the
        cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        XCloner and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:32:42", "id": 9225, "updated":
        "2014-06-10T10:00:07", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install XCloner and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About XCloner :\n#   XCloner
        is a professional website Backup and Restore application designed to allow
        you to create \n#   safe complete backups of any PHP/Mysql website and to
        be able to restore them anywhere.\n#   It works as a native Joomla backup
        component, as a native Wordpress backup plugin and also \n#   as standalone
        PHP/Mysql backup application.\n###########################################################################################################\n\n#
        Install XCloner Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=458&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        XCloner and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, XCloner has been successfully installed\"\necho \" \"\necho
        \"You can now configure XCloner and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "XCloner powered by Webuzo", "deployments_total": 0, "label":
        "XCloner powered by Webuzo"}, {"description": "", "deployments_active": 0,
        "created": "2017-04-19T09:06:23", "id": 83465, "updated": "2017-04-19T09:06:45",
        "script": "#!/bin/bash\n# <UDF name=\"db_password\" Label=\"MySQL root Password\"
        />\n# <UDF name=\"db_name\" Label=\"Create Database\" default=\"\" example=\"Optionally
        create this database\" />\n# <UDF name=\"db_user\" Label=\"Create MySQL User\"
        default=\"\" example=\"Optionally create this user\" />\n# <UDF name=\"db_user_password\"
        Label=\"MySQL User''s Password\" default=\"\" example=\"User''s password\"
        />\n\n\nsource <ssinclude StackScriptID=\"1\">\n\nsystem_update\npostfix_install_loopback_only\nmysql_install
        \"$DB_PASSWORD\" && mysql_tune 40\nmysql_create_database \"$DB_PASSWORD\"
        \"$DB_NAME\"\nmysql_create_user \"$DB_PASSWORD\" \"$DB_USER\" \"$DB_USER_PASSWORD\"\nmysql_grant_user
        \"$DB_PASSWORD\" \"$DB_USER\" \"$DB_NAME\"\nphp_install_with_apache && php_tune\napache_install
        && apache_tune 40 && apache_virtualhost_from_rdns\ngoodstuff\nrestartServices",
        "user_defined_fields": [{"name": "db_password", "label": "MySQL root Password"},
        {"example": "Optionally create this database", "name": "db_name", "label":
        "Create Database", "default": ""}, {"example": "Optionally create this user",
        "name": "db_user", "label": "Create MySQL User", "default": ""}, {"example":
        "User''s password", "name": "db_user_password", "label": "MySQL User''s Password",
        "default": ""}], "ordinal": 0, "username": "janelle_estelle", "images": ["linode/ubuntu16.04lts"],
        "user_gravatar_id": "58c5b6b3e7c996de84adf9c177085ae5", "logo_url": "", "is_public":
        true, "rev_note": "Initial import", "deployments_total": 0, "label": "Stack"},
        {"description": "Gallery is an open source web based photo album organizer.
        Gallery gives you an intuitive way to blend photo management seamlessly into
        your own website whether you''re running a small personal site or a large
        community site.\r\n\r\nServing millions worldwide, the Gallery project is
        the most widely used system of its kind. \r\n\t\t\t\r\nWebuzo is a Single
        User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Gallery 2 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:33:40", "id": 9226, "updated":
        "2014-06-10T10:00:15", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Gallery 2 and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Gallery 2 :\n#   Gallery is an open source web based photo album organizer.\n#   Gallery
        gives you an intuitive way to blend photo management seamlessly into your
        own website \n#   whether you''re running a small personal site or a large
        community site.\n#   Serving millions worldwide, the Gallery project is the
        most widely used system of its kind. \n###########################################################################################################\n\n#
        Install Gallery 2 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=383&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Gallery 2 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Gallery 2 has been successfully installed\"\necho \" \"\necho
        \"You can now configure Gallery 2 and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Gallery 2 powered by Webuzo", "deployments_total": 0, "label":
        "Gallery 2 powered by Webuzo"}, {"description": "Eventum is a user-friendly
        and flexible issue tracking system that can be used by a support department
        to track incoming technical support requests, or by a software development
        team to quickly organize tasks and bugs.\r\n\t\t\t\r\nWebuzo is a Single User
        Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Eventum and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:34:31", "id": 9227, "updated":
        "2014-06-10T10:00:20", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Eventum and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Eventum :\n#   Eventum
        is a user-friendly and flexible issue tracking system that can be used by
        a support \n#   department to track incoming technical support requests, or
        by a software development team to quickly\n#   organize tasks and bugs.\n###########################################################################################################\n\n#
        Install Eventum Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=394&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Eventum and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Eventum has been successfully installed\"\necho \" \"\necho
        \"You can now configure Eventum and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Eventum powered by Webuzo", "deployments_total": 0, "label":
        "Eventum powered by Webuzo"}, {"description": "", "deployments_active": 0,
        "created": "2017-02-28T00:11:36", "id": 73228, "updated": "2017-02-28T01:11:30",
        "script": "#!/bin/bash\n#\n# System related utilities\n#\n# Copyright (c)
        2010 Filip Wasilewski <en@ig.ma>.\n#\n# My ref: http://www.linode.com/?r=aadfce9845055011e00f0c6c9a5c01158c452deb\n\nfunction
        lower {\n    # helper function\n    echo $1 | tr ''[:upper:]'' ''[:lower:]''\n}\n\nfunction
        system_update {\n    apt-get update && apt-get upgrade -y\n}\n\nfunction system_add_user
        {\n    # system_add_user(username, password, groups, shell=/bin/bash)\n    USERNAME=`lower
        $1`\n    PASSWORD=$2\n    SUDO_GROUP=$3\n    SHELL=$4\n    if [ -z \"$4\"
        ]; then\n        SHELL=\"/bin/bash\"\n    fi\n    useradd --create-home --shell
        \"$SHELL\" --user-group --groups \"$SUDO_GROUP\" \"$USERNAME\"\n    echo \"$USERNAME:$PASSWORD\"
        | chpasswd\n}\n\nfunction system_add_system_user {\n    # system_add_system_user(username,
        home, shell=/bin/bash)\n    USERNAME=`lower $1`\n    HOME_DIR=$2\n    SHELL=$3\n    if
        [ -z \"$3\" ]; then\n        SHELL=\"/bin/bash\"\n    fi\n    useradd --system
        --create-home --home-dir \"$HOME_DIR\" --shell \"$SHELL\" --user-group $USERNAME\n}\n\nfunction
        system_lock_user {\n    # system_lock_user(username)\n    passwd -l \"$1\"\n}\n\nfunction
        system_get_user_home {\n    # system_get_user_home(username)\n    cat /etc/passwd
        | grep \"^$1:\" | cut --delimiter=\":\" -f6\n}\n\nfunction system_user_add_ssh_key
        {\n    # system_user_add_ssh_key(username, ssh_key)\n    USERNAME=`lower $1`\n    USER_HOME=`system_get_user_home
        \"$USERNAME\"`\n    sudo -u \"$USERNAME\" mkdir \"$USER_HOME/.ssh\"\n    sudo
        -u \"$USERNAME\" touch \"$USER_HOME/.ssh/authorized_keys\"\n    sudo -u \"$USERNAME\"
        echo \"$2\" >> \"$USER_HOME/.ssh/authorized_keys\"\n    chmod 0600 \"$USER_HOME/.ssh/authorized_keys\"\n}\n\nfunction
        system_sshd_edit_bool {\n    # system_sshd_edit_bool (param_name, \"Yes\"|\"No\")\n    VALUE=`lower
        $2`\n    if [ \"$VALUE\" == \"yes\" ] || [ \"$VALUE\" == \"no\" ]; then\n        sed
        -i \"s/^#*\\($1\\).*/\\1 $VALUE/\" /etc/ssh/sshd_config\n    fi\n}\n\nfunction
        system_sshd_permitrootlogin {\n    system_sshd_edit_bool \"PermitRootLogin\"
        \"$1\"\n}\n\nfunction system_sshd_passwordauthentication {\n    system_sshd_edit_bool
        \"PasswordAuthentication\" \"$1\"\n}\n\nfunction system_update_hostname {\n    #
        system_update_hostname(system hostname)\n    if [ -z \"$1\" ]; then\n        echo
        \"system_update_hostname() requires the system hostname as its first argument\"\n        return
        1;\n    fi\n    echo $1 > /etc/hostname\n    hostname -F /etc/hostname\n    echo
        -e \"\\n127.0.0.1 $1 $1.local\\n\" >> /etc/hosts\n}\n\nfunction system_security_logcheck
        {\n    aptitude -y install logcheck logcheck-database\n    # configure email\n    #
        start after setup\n}\n\nfunction system_security_fail2ban {\n    aptitude
        -y install fail2ban\n}\n\nfunction system_security_ufw_configure_basic {\n    #
        see https://help.ubuntu.com/community/UFW\n    ufw logging on\n\n    ufw default
        deny\n\n    ufw allow ssh/tcp\n    ufw limit ssh/tcp\n\n    ufw allow http/tcp\n    ufw
        allow https/tcp\n\n    ufw enable\n}\n\nfunction system_configure_private_network
        {\n    # system_configure_private_network(private_ip)\n    PRIVATE_IP=$1\n    NETMASK=\"255.255.128.0\"\n    cat
        >>/etc/network/interfaces <<EOF\nauto eth0:0\niface eth0:0 inet static\n address
        $PRIVATE_IP\n netmask $NETMASK\nEOF\n    touch /tmp/restart_initd-networking\n}\n\nfunction
        restart_services {\n    # restarts upstart services that have a file in /tmp/needs-restart/\n    for
        service_name in $(ls /tmp/ | grep restart-* | cut -d- -f2-10); do\n        service
        $service_name restart\n        rm -f /tmp/restart-$service_name\n    done\n}\n\nfunction
        restart_initd_services {\n    # restarts upstart services that have a file
        in /tmp/needs-restart/\n    for service_name in $(ls /tmp/ | grep restart_initd-*
        | cut -d- -f2-10); do\n        /etc/init.d/$service_name restart\n        rm
        -f /tmp/restart_initd-$service_name\n    done\n}\n\n# Maintain for compatibility
        with scripts using this library for Ubuntu 10.04\n\nfunction system_get_codename
        {\n    echo `lsb_release -sc`\n}\n\nfunction system_get_release {\n    echo
        `lsb_release -sr`\n}\n\nfunction system_sshd_pubkeyauthentication {\n    system_sshd_edit_bool
        \"PubkeyAuthentication\" \"$1\"\n}\n\nfunction system_update_locale_en_US_UTF_8
        {\n    # locale-gen en_US.UTF-8\n    dpkg-reconfigure locales\n    update-locale
        LANG=en_US.UTF-8\n}\n\nfunction system_enable_universe {\n    sed -i ''s/^#\\(.*deb.*\\)
        universe/\\1 universe/'' /etc/apt/sources.list\n    aptitude update\n}\n\nfunction
        system_security_ufw_install {\n    aptitude -y install ufw\n}", "user_defined_fields":
        [], "ordinal": 0, "username": "rizerapp", "images": ["linode/ubuntu16.04lts",
        "linode/ubuntu16.10", "linode/ubuntu14.04lts"], "user_gravatar_id": "dc70e4f46019425154b0a652de0657da",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "lib-system-ubuntu"}, {"description": "Magento is an Open Source
        ecommerce web application launched on March 31, 2008. It was created by Varien,
        building on components of the Zend Framework.\r\n\t\t\t\r\nWebuzo is a Single
        User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Magento 1.7 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:35:04", "id": 9228, "updated":
        "2014-06-10T10:00:25", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Magento 1.7 and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Magento 1.7 :\n#   Magento is an Open Source ecommerce web application
        launched on March 31, 2008.\n#   It was created by Varien, building on components
        of the Zend Framework.\n###########################################################################################################\n\n#
        Install Magento 1.7 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=465&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Magento 1.7 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Magento 1.7 has been successfully installed\"\necho \"
        \"\necho \"You can now configure Magento 1.7 and Softaculous Webuzo at the
        following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you
        for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [],
        "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Magento 1.7 powered by Webuzo", "deployments_total": 0,
        "label": "Magento 1.7 powered by Webuzo"}, {"description": "SVNManager is
        a PHP web based tool to administer a Apache Subversion repository server.
        \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users deploy
        Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
        Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        SVNManager and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:35:35", "id": 9229, "updated":
        "2014-06-10T10:00:30", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install SVNManager and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About SVNManager :\n#   SVNManager is a PHP web based tool to administer a
        Apache Subversion repository server. \n###########################################################################################################\n\n#
        Install SVNManager Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=380&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        SVNManager and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, SVNManager has been successfully installed\"\necho \" \"\necho
        \"You can now configure SVNManager and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "SVNManager powered by Webuzo", "deployments_total": 0,
        "label": "SVNManager powered by Webuzo"}, {"description": "Vty is a web-based
        database manager script written with Php. It''s for Mysql.\r\n\r\nYou can
        connect to Mysql and see and edit your databases and tables. \r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Vty and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:36:09", "id": 9230, "updated":
        "2014-06-10T10:00:54", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Vty and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Vty :\n#   Vty
        is a web-based database manager script written with Php. It''s for Mysql.\n#   You
        can connect to Mysql and see and edit your databases and tables. \n###########################################################################################################\n\n#
        Install Vty Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=327&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Vty and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Vty has been successfully installed\"\necho \" \"\necho
        \"You can now configure Vty and Softaculous Webuzo at the following URL :\"\necho
        \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
        Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal": 0, "username":
        "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts", "linode/ubuntu14.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Vty powered by Webuzo", "deployments_total": 0, "label":
        "Vty powered by Webuzo"}, {"description": "Plandora project was born to be
        a tool to help the software development process, from the customer requirement
        until the task conclusion, and consequently gather the \"history\" of project.\r\nThe
        Plandora system can be useful for teams that have problems with resource bottle-necks,
        parallel projects, critical dead lines, necessity for scope documentation
        of tasks and requirements, etc. \r\n\t\t\t\r\nWebuzo is a Single User Control
        Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
        System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
        or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Plandora and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:38:26", "id": 9233, "updated":
        "2014-06-10T10:01:09", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Plandora and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Plandora :\n#   Plandora
        project was born to be a tool to help the software development process, from
        the customer \n#   requirement until the task conclusion, and consequently
        gather the \"history\" of project.\n###########################################################################################################\n\n#
        Install Plandora Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=424&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Plandora and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Plandora has been successfully installed\"\necho \" \"\necho
        \"You can now configure Plandora and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Plandora powered by Webuzo", "deployments_total": 0, "label":
        "Plandora powered by Webuzo"}, {"description": "ClientExec offers online help
        desk software intended to enhance the ability of small and mid-sized hosting
        businesses to manage help and support issues. Because the online help desk
        software can be accessed from any web browser, managers and staff can increase
        the flexibility and effectiveness with which they address client support issues.\r\n\r\nClientExec''s
        software includes an easy-to-use interface that enhances communication between
        clients and staff. E-mail messages sent through the online help desk software
        are automatically routed and tracked, so you don''t have to spend time chasing
        after lost messages. Support tickets can be quickly sorted, filtered, and
        assigned to individual team members, ensuring that the tickets are addressed
        in the most efficient possible manner.\r\n\t\t\t\r\nWebuzo is a Single User
        Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        ClientExec and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:39:08", "id": 9234, "updated":
        "2014-06-10T10:01:16", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install ClientExec and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About ClientExec :\n#   ClientExec offers online help desk software intended
        to enhance the ability of small and mid-sized \n#   hosting businesses to
        manage help and support issues.\n#   Because the online help desk software
        can be accessed from any web browser, managers and \n#   staff can increase
        the flexibility and effectiveness with which they address client support issues.\n###########################################################################################################\n\n#
        Install ClientExec Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=478&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        ClientExec and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, ClientExec has been successfully installed\"\necho \" \"\necho
        \"You can now configure ClientExec and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "ClientExec powered by Webuzo", "deployments_total": 0,
        "label": "ClientExec powered by Webuzo"}, {"description": "Croogo is a free,
        open source, content management system for PHP. It is powered by CakePHP MVC
        framework. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps
        users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
        NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Croogo and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:39:32", "id": 9235, "updated":
        "2014-06-10T10:01:21", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Croogo and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Croogo :\n#   Croogo
        is a free, open source, content management system for PHP. It is powered by
        CakePHP MVC framework. \n###########################################################################################################\n\n#
        Install Croogo Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=443&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Croogo and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Croogo has been successfully installed\"\necho \" \"\necho
        \"You can now configure Croogo and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Croogo powered by Webuzo", "deployments_total": 0, "label":
        "Croogo powered by Webuzo"}, {"description": "", "deployments_active": 0,
        "created": "2010-01-29T23:10:50", "id": 20, "updated": "2010-02-01T02:45:20",
        "script": "#!/bin/bash\n\n###########################################################\n#
        System\n###########################################################\n\nfunction
        system_update {\n  yum -y update\n}\n\nfunction system_primary_ip {\n  # returns
        the primary IP assigned to eth0\n  echo $(ifconfig eth0 | awk -F: ''/inet
        addr:/ {print $2}'' | awk ''{ print $1 }'')\n}\n\nfunction get_rdns {\n  #
        calls host on an IP address and returns its reverse dns\n  if [ ! -e /usr/bin/host
        ]; then\n   yum -y install bind-utils > /dev/null\n  fi\n  echo $(host $1
        | awk ''/pointer/ {print $5}'' | sed ''s/\\.$//'')\n}\n\nfunction get_rdns_primary_ip
        {\n  # returns the reverse dns of the primary IP assigned to this system\n  echo
        $(get_rdns $(system_primary_ip))\n}\n\nfunction install_basics {\n  yum install
        -y jwhois rsync openssh-clients wget\n}", "user_defined_fields": [], "ordinal":
        0, "username": "nbebout", "images": ["linode/centos5.632bit", "linode/centos5.6",
        "linode/fedora1132bit"], "user_gravatar_id": "5dd8fb66331617dbbd6f90a10cdd47ac",
        "logo_url": "", "is_public": true, "rev_note": "", "deployments_total": 0,
        "label": "Fedora/CentOS Bash Library"}, {"description": "WideImage is an object-oriented
        library for image manipulation.\r\n\r\nThe library provides a simple way to
        loading, manipulating and saving images in the most common image formats.
        \r\n\r\nWebuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
        Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        WideImage and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:48:42", "id": 9236, "updated":
        "2014-06-10T10:01:28", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install WideImage and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About WideImage :\n#   WideImage is an object-oriented library for image manipulation.\n#   The
        library provides a simple way to loading, manipulating and saving images in
        the most common image formats.\n###########################################################################################################\n\n#
        Install WideImage Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=360&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        WideImage and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, WideImage has been successfully installed\"\necho \" \"\necho
        \"You can now configure WideImage and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "WideImage powered by Webuzo", "deployments_total": 0, "label":
        "WideImage powered by Webuzo"}, {"description": "HelpDEZk is a powerfull software
        that manages requests/incidents. It has all the needed requirements to an
        efficient workflow management of all processes involved in service execution.
        This control is done for internal demands and also for outsourced services.\r\n\r\nHelpDEZk
        can be used at any company''s area, serving as an support to the shared service
        center concept, beyond the ability to log all the processes and maintain the
        request''s history, it can pass it through many approval levels.\r\n\r\nHelpDEZk
        can put together advanced managing resources with an extremely easy use. Simple
        and intuitive screens make the day-by-day easier for your team, speeding up
        the procedures and saving up a lot of time. It is developped in objects oriented
        PHP language, with the MVC architecture and uses the templates system SMARTY.
        For the javascripts, JQUERY is used. \r\n\t\t\t\r\nWebuzo is a Single User
        Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        HelpDEZk and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:49:36", "id": 9237, "updated":
        "2014-06-10T10:01:33", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install HelpDEZk and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About HelpDEZk :\n#   HelpDEZk
        is a powerfull software that manages requests/incidents.\n#   It has all the
        needed requirements to an efficient workflow management of all processes \n#   involved
        in service execution. This control is done for internal demands and also for
        outsourced services.\n###########################################################################################################\n\n#
        Install HelpDEZk Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=457&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        HelpDEZk and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, HelpDEZk has been successfully installed\"\necho \" \"\necho
        \"You can now configure HelpDEZk and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "HelpDEZk powered by Webuzo", "deployments_total": 0, "label":
        "HelpDEZk powered by Webuzo"}, {"description": "SEOTOASTER is the most advanced
        SEO content management system out of the box, so your website or Ecommerce
        store performs to the maximum of its abilities when it comes to organic rankings.\r\n\r\nSEOTOASTER
        is the most advanced SEO CMS & Ecommerce web site builder.\n\nWebuzo is a
        Single User Control Panel which helps users deploy Web Apps (WordPress, Joomla,
        Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their
        virtual machines or in the cloud.\n\nYou can get a Webuzo License here\nhttp://www.webuzo.com/pricing\n\nPath
        to Installation Logs : /root/webuzo-install.log\n\nInstructions\nOn completion
        of the installation process, access http://your-ip:2004 to configure SEOTOASTER
        and Softaculous Webuzo initially.\n\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-09-11T06:00:25", "id": 10261, "updated":
        "2014-09-11T06:00:25", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install SEOTOASTER and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About SEOTOASTER :\n#   SEOTOASTER is the most advanced SEO CMS & Ecommerce
        web site builder.\n###########################################################################################################\n\n#
        Install SEOTOASTER Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=490&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh  >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        SEOTOASTER and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, SEOTOASTER has been successfully installed\"\necho \" \"\necho
        \"You can now configure SEOTOASTER and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "SEOTOASTER powered by Webuzo", "deployments_total": 0,
        "label": "SEOTOASTER powered by Webuzo"}, {"description": "aa", "deployments_active":
        0, "created": "2014-04-03T06:09:25", "id": 8470, "updated": "2014-04-03T06:09:45",
        "script": "#!/bin/bash", "user_defined_fields": [], "ordinal": 0, "username":
        "ichal", "images": ["linode/centos6.5"], "user_gravatar_id": "632f7c16a5fd3a66b8909e0153856b49",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "jibeg"}, {"description": "Support Incident Tracker (or SiT!)
        is a Free Software/Open Source (GPL) web based application which uses PHP
        and MySQL for tracking technical support calls/emails (also commonly known
        as a ''Help Desk'' or ''Support Ticket System'').\r\n\r\nManage contacts,
        sites, technical support contracts and support incidents in one place. Send
        emails directly from SiT!, attach files and record every communication in
        the incident log. SiT is aware of Service Level Agreements and incidents are
        flagged if they stray outside of them. \r\n\t\t\t\r\nWebuzo is a Single User
        Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Support Incident Tracker and Softaculous Webuzo initially.\r\n\r\nContact
        : http://webuzo.com/contact", "deployments_active": 0, "created": "2014-06-06T09:50:15",
        "id": 9238, "updated": "2014-06-10T10:01:38", "script": "#!/bin/bash\n# <udf
        name=\"webuzo_license_key\" label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Support Incident Tracker and Softaculous Webuzo\n# Description -\n#
        About Webuzo :\n#   Webuzo is a Single User Control Panel which helps users
        deploy Web Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache,
        NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Support Incident Tracker :\n#   Support Incident Tracker (or SiT!) is
        a Free Software/Open Source (GPL) web based application which uses\n#   PHP
        and MySQL for tracking technical support calls/emails (also commonly known
        as a ''Help Desk''\n#   or ''Support Ticket System'').\n###########################################################################################################\n\n#
        Install Support Incident Tracker Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=409&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Support Incident Tracker and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Support Incident Tracker has been successfully installed\"\necho
        \" \"\necho \"You can now configure Support Incident Tracker and Softaculous
        Webuzo at the following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho
        \"Thank you for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields":
        [], "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Support Incident Tracker powered by Webuzo", "deployments_total":
        0, "label": "Support Incident Tracker powered by Webuzo"}, {"description":
        "Webasyst is a free PHP framework for creating sleek multi-user web apps and
        for building websites. Webasyst offers a multi-app UI ready for integrating
        and designing your app, handles user authorization, access rights management,
        routing setup, and much more. Great for creating web solutions for businesses
        and teams. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps
        users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
        NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Webasyst and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:52:11", "id": 9239, "updated":
        "2014-06-10T10:01:42", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Webasyst and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Webasyst :\n#   Webasyst
        is a free PHP framework for creating sleek multi-user web apps and for building
        websites.\n#   Webasyst offers a multi-app UI ready for integrating and designing
        your app, handles user \n#   authorization, access rights management, routing
        setup, and much more.\n#   Great for creating web solutions for businesses
        and teams. \n###########################################################################################################\n\n#
        Install Webasyst Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=467&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Webasyst and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Webasyst has been successfully installed\"\necho \" \"\necho
        \"You can now configure Webasyst and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Webasyst powered by Webuzo", "deployments_total": 0, "label":
        "Webasyst powered by Webuzo"}, {"description": "jforum is a powerful and robust
        discussion board system implemented in Java. It provides an attractive interface,
        an efficient forum engine, an easy to use administrative panel, an advanced
        permission control system and much more. \r\n\t\t\t\r\nWebuzo is a Single
        User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        jforum and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:52:58", "id": 9240, "updated":
        "2014-06-10T10:01:49", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install jforum and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About jforum :\n#   jforum
        is a powerful and robust discussion board system implemented in Java.\n#   It
        provides an attractive interface, an efficient forum engine, an easy to use
        administrative\n#   panel, an advanced permission control system and much
        more.\n###########################################################################################################\n\n#
        Install jforum Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=423&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        jforum and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, jforum has been successfully installed\"\necho \" \"\necho
        \"You can now configure jforum and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "jforum powered by Webuzo", "deployments_total": 0, "label":
        "jforum powered by Webuzo"}, {"description": "Debian 8 Install for BODYRUBS.RU",
        "deployments_active": 0, "created": "2016-11-07T15:41:00", "id": 48408, "updated":
        "2016-11-07T15:48:32", "script": "#!/bin/sh", "user_defined_fields": [], "ordinal":
        0, "username": "crooksau", "images": ["linode/debian8"], "user_gravatar_id":
        "f33d8e66bbce5c95fcb2a96dc8a4beaa", "logo_url": "", "is_public": true, "rev_note":
        "Initial import", "deployments_total": 0, "label": "Debian 8 Install"}, {"description":
        "Admidio is a free online membership management, optimized for clubs, groups
        and organizations. It consists of classical management members from a variety
        of modules that can be installed and adjusted to a new or existing website.\r\n\r\nRegistered
        users have your website by Admidio including access to predefined and user-configurable
        membership lists, people profiles and an Agenda. In addition, members may
        be pooled in groups are assigned properties and search for it.\r\n\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Admidio and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:55:04", "id": 9241, "updated":
        "2014-06-10T10:01:54", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Admidio and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Admidio :\n#   Admidio
        is a free online membership management, optimized for clubs, groups and organizations.\n#   It
        consists of classical management members from a variety of modules that can
        be installed \n#   and adjusted to a new or existing website.\n###########################################################################################################\n\n#
        Install Admidio Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=449&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Admidio and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Admidio has been successfully installed\"\necho \" \"\necho
        \"You can now configure Admidio and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Admidio powered by Webuzo", "deployments_total": 0, "label":
        "Admidio powered by Webuzo"}, {"description": "Ek 2", "deployments_active":
        0, "created": "2015-07-30T11:55:01", "id": 12825, "updated": "2015-07-30T13:26:16",
        "script": "#!/bin/bash", "user_defined_fields": [], "ordinal": 0, "username":
        "bozuslu", "images": ["linode/debian7"], "user_gravatar_id": "67f0a5d0710560fd85e82a39cc71a567",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "bayram"}, {"description": "", "deployments_active": 0, "created":
        "2017-07-22T20:00:18", "id": 139802, "updated": "2017-07-23T20:21:24", "script":
        "#!/bin/sh\n# NGINX install script for CentOS 7\n\nyum -y update\n\n# install
        EPEL\nyum -y install epel-release\n\n# install nginx\nyum -y install nginx\n\n#
        enable firewall\nfirewall-cmd --permanent --zone=public --add-service=http
        \nfirewall-cmd --permanent --zone=public --add-service=https\nfirewall-cmd
        --reload\n\n# start nginx service\nsystemctl start nginx.service\nsystemctl
        enable nginx.service", "user_defined_fields": [], "ordinal": 0, "username":
        "darcyliu", "images": ["linode/centos7"], "user_gravatar_id": "2c21cffefb719e685dd6302aed2654df",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "NGINX install script for CentOS 7"}, {"description": "MeshCMS
        is an online editing system written in Java. It provides a set of features
        usually included in a CMS, but it uses a more traditional approach: pages
        are stored in regular HTML files and all additional features are file-based,
        without needing a database.\r\n\r\nMeshCMS has been thought as a quick tool
        to edit pages online, manage files and create some common components like
        menus, breadcrumbs, mail forms, image galleries and so on.\r\n\r\nWebuzo is
        a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        MeshCMS and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:56:02", "id": 9242, "updated":
        "2014-06-10T10:02:01", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install MeshCMS and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About MeshCMS :\n#   MeshCMS
        is an online editing system written in Java.\n#   It provides a set of features
        usually included in a CMS, but it uses a more traditional approach: pages
        \n#   are stored in regular HTML files and all additional features are file-based,
        without needing a database.\n###########################################################################################################\n\n#
        Install MeshCMS Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=385&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        MeshCMS and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, MeshCMS has been successfully installed\"\necho \" \"\necho
        \"You can now configure MeshCMS and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "MeshCMS powered by Webuzo", "deployments_total": 0, "label":
        "MeshCMS powered by Webuzo"}, {"description": "", "deployments_active": 0,
        "created": "2016-01-01T13:17:15", "id": 14362, "updated": "2016-01-01T13:18:26",
        "script": "#!/bin/bash\n##\n# Installs the Sensu omnibus package\n#\n# This
        package contains all of the different Sensu components. Use specific scripts\n#
        to configure each component on different nodes.\n##\nset -eux\n\nsource env.sh\n\n$BASE_PATH/configure-repo-sensu.sh\n\napt-get
        install -yq sensu", "user_defined_fields": [], "ordinal": 0, "username": "ezan",
        "images": ["linode/ubuntu14.04lts"], "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "install-sensu"}, {"description": "", "deployments_active": 0,
        "created": "2016-02-12T18:02:23", "id": 15898, "updated": "2016-11-04T02:00:09",
        "script": "#!/bin/bash\necho ''wat''", "user_defined_fields": [], "ordinal":
        0, "username": "ilsken", "images": ["linode/centos7"], "user_gravatar_id":
        "e57dba3fa2787673251f2e3558fae91e", "logo_url": "", "is_public": true, "rev_note":
        "Initial import", "deployments_total": 0, "label": "hola"}, {"description":
        "Little Software Stats is a web application that allows users to monitor their
        software.\r\n\r\nLittle Software Stats is the first runtime intelligence software
        released as open source and free. It is designed and developed through MySQL
        and PHP which will allow most web servers to run it. Little Software Stats
        allows users to collect information including executions, installations, exceptions,
        and geographical location.\r\n\r\nWebuzo is a Single User Control Panel which
        helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps
        (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the
        cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Little Software Stats and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:57:03", "id": 9243, "updated":
        "2014-06-10T10:02:11", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Little Software Stats and Softaculous Webuzo\n# Description -\n# About
        Webuzo :\n#   Webuzo is a Single User Control Panel which helps users deploy
        Web Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Little Software Stats :\n#   Little Software Stats is a web application
        that allows users to monitor their software.\n#   Little Software Stats is
        the first runtime intelligence software released as open source and free.\n#   It
        is designed and developed through MySQL and PHP which will allow most web
        servers to run it.\n#   Little Software Stats allows users to collect information
        including executions, \n#   installations, exceptions, and geographical location.\n###########################################################################################################\n\n#
        Install Little Software Stats Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=444&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Little Software Stats and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Little Software Stats has been successfully installed\"\necho
        \" \"\necho \"You can now configure Little Software Stats and Softaculous
        Webuzo at the following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho
        \"Thank you for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields":
        [], "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Little Software Stats powered by Webuzo", "deployments_total":
        0, "label": "Little Software Stats powered by Webuzo"}, {"description": "For
        installing packages for each service", "deployments_active": 0, "created":
        "2018-08-13T23:05:24", "id": 333596, "updated": "2019-04-15T17:04:39", "script":
        "#!/bin/bash\n\nfunction dependency_arkserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n\n}\n\nfunction dependency_arma3server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n     \n}\n\nfunction dependency_bb2server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libcurl4-gnutls-dev:i386\n\n}\n\nfunction
        dependency_bbserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_bdserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_bf1942server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 libncurses5:i386\n}\n\nfunction dependency_bmdmserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_boserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_bsserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n\n}\n\nfunction dependency_bt1944server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_ccserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 lib32tinfo5\n}\n\nfunction
        dependency_cod2server {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 libstdc++5:i386\n}\n\nfunction dependency_cod4server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_codserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 libstdc++5:i386\n}\n\nfunction dependency_coduoserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libstdc++5:i386\n}\n\nfunction
        dependency_codwawserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_csczserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_csgoserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_csserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_cssserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32tinfo5\n}\n\nfunction dependency_dabserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_dmcserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_dodserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_dodsserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_doiserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_dstserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 libcurl4-gnutls-dev:i386\n}\n\nfunction dependency_ecoserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 mono-complete\n}\n\nfunction dependency_emserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_etlserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_fctrserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 xz-utils\n}\n\nfunction dependency_fofserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_gesserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 zlib1g:i386 libldap-2.4-2:i386\n}\n\nfunction
        dependency_gmodserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32tinfo5\n}\n\nfunction dependency_hl2dmserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_hldmserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_hldmsserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_hwserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32z1\n}\n\nfunction dependency_insserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_jc2server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_jc3server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_kf2server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_kfserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_l4d2server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_l4dserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_mcserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux default-jre\n     add-apt-repository
        -y ppa:webupd8team/java\n     apt -q -y remove openjdk-11*\n     apt -q -y
        purge openjdk-11*\n     apt -q -y install openjdk-8-jre-headless\n     update-ca-certificates
        -f\n}\n\nfunction dependency_mtaserver {\n     debconf-set-selections <<<
        \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_mumbleserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux\n}\n\nfunction dependency_nmrihserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32tinfo5\n}\n\nfunction dependency_ns2cserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 speex:i386 libtbb2\n}\n\nfunction
        dependency_ns2server {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 speex libtbb2\n\n}\n\nfunction dependency_opforserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_pcserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_pstbsserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     export DEBIAN_FRONTEND=noninteractive
        sudo dpkg --add-architecture i386; sudo apt update; sudo apt -q -y install
        mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils python util-linux
        ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction
        dependency_pvkiiserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_pzserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 default-jre\n}\n\nfunction
        dependency_q2server {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux\n}\n\nfunction dependency_q3server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_qlserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_qwserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n\n}\n\nfunction dependency_ricochetserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_roserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n\n}\n\nfunction dependency_rustserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 lib32z1\n}\n\nfunction dependency_rwserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 default-jre\n}\n\nfunction dependency_sampserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_sbserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n\n}\n\nfunction dependency_sdtdserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 telnet expect\n}\n\nfunction
        dependency_squadserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_ss3server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_stserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 zlib1g\n}\n\nfunction dependency_svenserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libssl1.0.2:i386\n\n}\n\nfunction
        dependency_terrariaserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n \n}\n\nfunction dependency_tf2server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libcurl4-gnutls-dev:i386 libtcmalloc-minimal4:i386\n}\n\nfunction
        dependency_tfcserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_ts3server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq libmariadb2\n}\n\nfunction dependency_tuserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_twserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n\n}\n\nfunction dependency_ut2k4server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libsdl1.2debian libstdc++5:i386\n}\n\nfunction
        dependency_ut3server {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_ut99server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libsdl1.2debian\n}\n\nfunction
        dependency_vsserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_wetserve {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $FQDN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_zpsserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $FQDN\"\n     sudo dpkg --add-architecture i386; sudo apt update; sudo
        apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32tinfo5\n}\n\nfunction configure_arkserver {\n     echo
        No Extra Configurations Needed\n}\n\nfunction configure_arma3server {\n     echo
        Requires Steam username and password to install\n     su - $GAMESERVER -c
        \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER -c \"mkdir
        /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER -c
        \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_bb2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_bbserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_bdserver {\n     echo No Extra Configurations Needed\n}\nfunction
        configure_bf1942server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_bmdmserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_boserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_bsserver {\n     echo Requires Steam username and password to install\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER
        -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER
        -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_bt1944server {\n     echo No Extra Congigurations Needed\n}\n\nfunction
        configure_ccserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_cod2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_cod4server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_codserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_coduoserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_codwawserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_csczserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_csgoserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_csserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_cssserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dabserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dmcserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dodserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dodsserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_doiserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dstserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ecoserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_emserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_etlserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_fctrserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_fofserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_gesserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_gmodserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_hl2dmserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_hldmserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_hldmsserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_hwserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_insserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_jc2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_jc3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_kf2server {\n     echo Requires a Steam username and password\n}\n\nfunction
        configure_kfserver {\n     echo Requires a Steam username and password\n}\n\nfunction
        configure_l4d2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_l4dserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_mcserver {\n     echo No Extra configurations Needed\n}\n\nfunction
        configure_mtaserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_mumbleserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_nmrihserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ns2cserver {\n     echo Requires Steam username and password to
        install\n     su - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su
        - $GAMESERVER -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_ns2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_opforserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_pcserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_pstbsserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_pvkiiserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_pzserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_q2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_q3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_qlserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_qwserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ricochetserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_roserver {\n     echo Requires Steam username and password to install\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER
        -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER
        -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_rustserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_rwserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_sampserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_sbserver {\n     echo Requires Steam username and password to install\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER
        -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER
        -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_sdtdserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_squadserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ss3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_stserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_svenserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_terrariaserver {\n     echo Requires Steam username and password
        to install\n     su - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su
        - $GAMESERVER -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_tf2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_tfcserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ts3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_tuserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_twserver {\n     echo Requires Steam username and password to install\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER
        -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER
        -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_ut2k4server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ut3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ut99server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_vsserver { \n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_wetserve {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_zpsserver {\n     echo No Extra Configurations Needed\n}\nfunction
        firewall_arkserver {\n     echo Starting game specific firewall\n     ufw
        allow 27015/udp\n     ufw allow 7777:7778/udp\n     ufw allow 27020/tcp\n}\n\nfunction
        firewall_arma3server {\n     echo Starting game specific firewall\n     ufw
        allow 2302:2305/udp\n     ufw allow 44240/udp\n}\n\nfunction firewall_bb2server
        {\n     echo Starting game specific firewall\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_bbserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n}\n\nfunction firewall_bdserver
        {\n     echo Starting game specific firewall\n     ufw allow 26900\n     ufw
        allow 27015\n}\nfunction firewall_bf1942server {\n     echo Binding IP address\n     sed
        -i \"s/game.serverIP 0.0.0.0/game.serverIP $IPADDR/\" /home/$GAMESERVER/serverfiles/mods/bf1942/settings/serversettings.con
        | grep -i game.serverIP\n     echo Starting game specific firewall\n     ufw
        allow 14567\n     ufw allow 27000\n}\n\nfunction firewall_bmdmserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_boserver {\n     echo
        Starting game specific firewall\n     ufw allow 27016\n}\n\nfunction firewall_bsserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 27020\n     ufw allow 27005\n}\n\nfunction firewall_bt1944server {\n     echo
        Starting game specific firewall\n     ufw allow 7780\n     ufw allow 7779\n}\n\nfunction
        firewall_ccserver {\n     echo Starting game specific firewall\n     ufw allow
        26901\n     ufw allow 27005\n     ufw allow 27015\n     ufw allow 27020\n}\n\nfunction
        firewall_cod2server {\n     echo Starting game specific firewall\n     ufw
        allow 28960\n}\n\nfunction firewall_cod4server {\n     echo Starting game
        specific firewall\n     ufw allow 26960\n     ufw allow 28960\n     ufw allow
        34243\n}\n\nfunction firewall_codserver {\n     echo Starting game specific
        firewall\n     ufw allow 28960\n}\n\nfunction firewall_coduoserver {\n     echo
        Starting game specific firewall\n     ufw allow 28960\n}\n\nfunction firewall_codwawserver
        {\n     echo Starting game specific firewall\n     ufw allow 3074\n     ufw
        allow 28960\n}\n\nfunction firewall_csczserver {\n     echo Starting game
        specific firewall\n     ufw allow 27015\n}\n\nfunction firewall_csgoserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 27020/udp\n     ufw allow 27005/udp\n}\n\nfunction firewall_csserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 27005\n     ufw allow 27020\n}\n\nfunction firewall_cssserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_dabserver {\n     echo
        Starting game specific firewall\n     ufw allow 27005\n     ufw allow 27015\n     ufw
        allow 27020\n}\n\nfunction firewall_dmcserver {\n     echo Starting game specific
        firewall\n     ufw allow 27015\n}\n\nfunction firewall_dodserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n}\n\nfunction firewall_dodsserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n}\n\nfunction
        firewall_doiserver {\n     echo Starting game specific firewall\n     ufw
        allow 27005\n     ufw allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_dstserver
        {\n     echo Starting game specific firewall\n     ufw allow 11000\n     ufw
        allow 10888\n     ufw allow 8768\n     ufw allow 27018\n}\n\nfunction firewall_ecoserver
        {\n     echo Starting game specific firewall\n     ufw allow 3000\n     ufw
        allow 8084\n     ufw allow 3001\n}\n\nfunction firewall_emserver {\n     echo
        Starting game specific firewall\n     ufw allow 27005\n     ufw allow 27015\n     ufw
        allow 27020\n     ufw allow 47632\n}\n\nfunction firewall_etlserver {\n     echo
        Starting game specific firewall\n     ufw allow 27960\n}\n\nfunction firewall_fctrserver
        {\n     echo Starting game specific firewall\n     ufw allow 34197\n     ufw
        allow 42688\n     ufw allow 34198\n}\n\nfunction firewall_fofserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_gesserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n     ufw allow 27020\n     ufw
        allow 27005\n     ufw allow 57211\n}\n\nfunction firewall_gmodserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_hl2dmserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_hldmserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n}\n\nfunction firewall_hldmsserver
        {\n     echo Starting game specific firewall\n     ufw allow 26901\n     ufw
        allow 27005\n     ufw allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_hwserver
        {\n     echo Starting game specific firewall\n     ufw allow 12871\n     ufw
        allow 12881\n}\n\nfunction firewall_insserver {\n     echo Starting game specific
        firewall\n     ufw allow 27005\n     ufw allow 27015\n     ufw allow 27020\n}\n\nfunction
        firewall_jc2server {\n     echo Binding IP address\n     sed -i \"s/BindIP                      =
        \"\"/BindIP = $IPADDR/\"  /home/$GAMESERVER/serverfiles/config.lua\n     echo
        Starting game specific firewall\n     ufw allow 7777\n     ufw allow 7778\n}\n\nfunction
        firewall_jc3server {\n     echo Starting game specific firewall\n     ufw
        allow 27015:27030/tcp\n     ufw allow 27036:27037/tcp\n     ufw allow 4380/udp\n     ufw
        allow 27000:27031/udp\n     ufw allow 27036/udp\n}\n\nfunction firewall_kf2server
        {\n     echo Starting game specific firewall\n     ufw allow 777/udp\n     ufw
        allow 20560/udp\n     ufw allow 207015/udp\n}\n\nfunction firewall_kfserver
        {\n     echo Starting game specific firewall\n     ufw allow 8075/tcp\n     ufw
        allow 28852/tcp\n     ufw allow 7707:7708/udp\n     ufw allow 7717/udp\n     ufw
        allow 20560/udp\n}\n\nfunction firewall_l4d2server {\n     echo Starting game
        specific firewall\n     ufw allow 26901\n     ufw allow 27015\n}\n\nfunction
        firewall_l4dserver {\n     echo Starting game specific firewall\n     ufw
        allow 27015\n}\n\nfunction firewall_mcserver {\n     echo Starting game specific
        firewall\n     ufw allow 25565\n}\n\nfunction firewall_mtaserver {\n     echo
        Starting game specific firewall\n     ufw allow 34219\n     ufw allow 22003\n     ufw
        allow 22126\n     ufw allow 22005\n}\n\nfunction firewall_mumbleserver {\n     echo
        Starting game specific firewall\n     ufw allow 64738\n}\n\nfunction firewall_nmrihserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 27020\n     ufw allow 27005\n}\n\nfunction firewall_ns2cserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n     ufw allow 27016\n     ufw
        allow 8080\n}\n\nfunction firewall_ns2server {\n     echo Starting game specific
        firewall\n     ufw allow 27015\n     ufw allow 27016\n     ufw allow 8080\n}\n\nfunction
        firewall_opforserver {\n     echo Starting game specific firewall\n     ufw
        allow 27015\n     ufw allow 27005\n}\n\nfunction firewall_pcserver {\n     echo
        Starting game specific firewall\n     ufw allow 27016\n     ufw allow 8766\n     ufw
        allow 27015\n}\n\nfunction firewall_pstbsserver {\n     echo Starting game
        specific firewall\n     ufw allow 10037\n     ufw allow 10072\n     ufw allow
        21114\n     \n}\n\nfunction firewall_pvkiiserver {\n     echo Starting game
        specific firewall\n     ufw allow 27005\n     ufw allow 27015\n     ufw allow
        27020\n}\n\nfunction firewall_pzserver {\n     echo Starting game specific
        firewall\n     ufw allow 16261\n     ufw allow 27015\n     \n}\n\nfunction
        firewall_q2server {\n     echo Starting game specific firewall\n     ufw allow
        27910\n     ufw allow 53496}\n\nfunction firewall_q3server {\n     echo Starting
        game specific firewall\n     ufw allow 27960\n}\n\nfunction firewall_qlserver
        {\n     echo Starting game specific firewall\n     ufw allow 27960\n     ufw
        allow 28960\n}\n\nfunction firewall_qwserver {\n     echo Starting game specific
        firewall\n     ufw allow 72500\n}\n\nfunction firewall_ricochetserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n     ufw allow 27005\n}\n\nfunction
        firewall_roserver {\n     echo Starting game specific firewall\n     ufw allow
        10757\n     ufw allow 7757\n     ufw allow 7758\n     ufw allow 20610\n     ufw
        allow 28902\n     ufw allow 28900\n     ufw allow 8075\n}\n\nfunction firewall_rustserver
        {\n     echo Starting game specific firewall\n     ufw allow 28015\n     ufw
        allow 28016\n}\n\nfunction firewall_rwserver {\n     echo Starting game specific
        firewall\n     ufw allow 4255\n     ufw allow 4254\n     ufw allow 4253\n}\n\nfunction
        firewall_sampserver {\n     echo Starting game specific firewall\n     ufw
        allow 7777\n}\n\nfunction firewall_sbserver {\n     echo Starting game specific
        firewall\n     ufw allow 21025/tcp\n}\n\nfunction firewall_sdtdserver {\n     echo
        Starting game specific firewall\n     ufw allow 26900\n     ufw allow 26901\n     ufw
        allow 26902\n     ufw allow 8081\n}\n\nfunction firewall_squadserver {\n     echo
        Starting game specific firewall\n     ufw allow 27165\n     ufw allow 7787\n     ufw
        allow 21114\n}\n\nfunction firewall_ss3server {\n     echo Starting game specific
        firewall\n}\n\nfunction firewall_stserver {\n     echo Starting game specific
        firewall\n     ufw allow 27015\n     ufw allow 54509\n     ufw allow 27500\n     ufw
        allow 55420\n}\n\nfunction firewall_svenserver {\n     echo Starting game
        specific firewall\n}\n\nfunction firewall_terrariaserver {\n     echo Starting
        game specific firewall\n     ufw allow 7777/tcp\n     ufw allow 7777/udp\n}\n\nfunction
        firewall_tf2server {\n     echo Starting game specific firewall\n     ufw
        allow 27014:27050/tcp\n     ufw allow 3478:4380/udp\n     ufw allow 27000:27030/udp\n     ufw
        allow 26901\n}\n\nfunction firewall_tfcserver {\n     echo Starting game specific
        firewall\n}\n\nfunction firewall_ts3server {\n     echo Starting game specific
        firewall\n     ufw allow 9987\n     ufw allow 30033\n     ufw allow 10011\n     egrep
        -i ''(loginname|token=)'' ~/stackscript.log > TeamSpeak3Login.log\n}\n\nfunction
        firewall_tuserver {\n     echo Starting game specific firewall\n}\n\nfunction
        firewall_twserver {\n     echo Starting game specific firewall\n}\n\nfunction
        firewall_ut2k4server {\n     echo Starting game specific firewall\n}\n\nfunction
        firewall_ut3server {\n     echo Starting game specific firewall\n}\n\nfunction
        firewall_ut99server {\n     echo Starting game specific firewall\n}\n\nfunction
        firewall_vsserver { \n     echo Starting game specific firewall\n}\n\nfunction
        firewall_wetserver {\n     echo Starting game specific firewall\n}\n\nfunction
        firewall_zpsserver {\n          echo Starting game specific firewall\n}",
        "user_defined_fields": [], "ordinal": 0, "username": "scrane", "images": ["linode/debian9",
        "linode/ubuntu18.04"], "user_gravatar_id": "3d0014ae0268bc705e046f9ad606b85b",
        "logo_url": "", "is_public": true, "rev_note": "removing additional shebang
        for testing purposes", "deployments_total": 0, "label": "LinuxGSM Library"},
        {"description": "DIY is an open-source lightweight web application framework
        based on object-oriented PHP 5, MySQL, and XSLT. It is fully object-oriented
        and designed following the MVC architecture and REST design principles. The
        idea behind it is not to reinvent the wheel but instead to combine existing
        and proven technologies in a convenient and effective way.\r\n\r\nWebuzo is
        a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        DIY and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:58:01", "id": 9244, "updated":
        "2014-06-10T10:02:17", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install DIY and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About DIY :\n#   DIY
        is an open-source lightweight web application framework based on object-oriented
        PHP 5, MySQL, and XSLT.\n#   It is fully object-oriented and designed following
        the MVC architecture and REST design principles.\n#   The idea behind it is
        not to reinvent the wheel but instead to combine existing and \n#   proven
        technologies in a convenient and effective way.\n###########################################################################################################\n\n#
        Install DIY Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=242&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        DIY and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, DIY has been successfully installed\"\necho \" \"\necho
        \"You can now configure DIY and Softaculous Webuzo at the following URL :\"\necho
        \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
        Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal": 0, "username":
        "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts", "linode/ubuntu14.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "DIY powered by Webuzo", "deployments_total": 0, "label":
        "DIY powered by Webuzo"}, {"description": "", "deployments_active": 0, "created":
        "2016-01-01T13:19:51", "id": 14364, "updated": "2016-01-01T13:20:09", "script":
        "#!/bin/bash\nset -eux\n\ncurl -s http://repos.sensuapp.org/apt/pubkey.gpg
        | apt-key add -\necho \"deb http://repos.sensuapp.org/apt sensu main\" > /etc/apt/sources.list.d/sensu.list\n\napt-get
        update -q", "user_defined_fields": [], "ordinal": 0, "username": "ezan", "images":
        ["linode/ubuntu14.04lts"], "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "configure-repo-sensu"}, {"description": "Joomla is an award-winning
        content management system (CMS), which enables you to build Web sites and
        powerful online applications. Many aspects, including its ease-of-use and
        extensibility, have made Joomla the most popular Web site software available.
        Best of all, Joomla is an open source solution that is freely available to
        everyone. \r\n\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps
        users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
        NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Joomla 2.5 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:19:16", "id": 8989, "updated":
        "2014-06-10T09:18:15", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Joomla 2.5 and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Joomla 2.5 :\n#   Joomla is an award-winning content management system
        (CMS), which enables you to build Web sites and powerful\n#   online applications.
        Many aspects, including its ease-of-use and extensibility, have made Joomla
        the most\n#   popular Web site software available. Best of all, Joomla is
        an open source solution \n#   that is freely available to everyone.\n###########################################################################################################\n\n#
        Install Joomla 2.5 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=18&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Joomla 2.5 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Joomla 2.5 has been successfully installed\"\necho \" \"\necho
        \"You can now configure Joomla 2.5 and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Joomla 2.5 powered by Webuzo", "deployments_total": 0,
        "label": "Joomla 2.5 powered by Webuzo"}, {"description": "ShopSite is the
        easiest-to-use shopping cart software for small to medium-sized businesses.
        With our e-commerce software and intuitive interface, you can have a store
        online in 15 minutes. With our rich feature set you won''t outgrow our catalog
        software, and you will not need expensive add-ons in order to have a fully
        functioning cart.\r\n\r\nWith our rich feature set you won''t outgrow our
        catalog software, and you will not need expensive add-ons in order to have
        a fully functioning cart. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel
        which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System
        Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or
        in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        ShopSite and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T09:59:41", "id": 9245, "updated":
        "2014-06-10T10:02:23", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install ShopSite and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About ShopSite :\n#   ShopSite
        is the easiest-to-use shopping cart software for small to medium-sized businesses.\n#   With
        our e-commerce software and intuitive interface, you can have a store online
        in 15 minutes.\n#   With our rich feature set you won''t outgrow our catalog
        software, and you will not need expensive \n#   add-ons in order to have a
        fully functioning cart.\n###########################################################################################################\n\n#
        Install ShopSite Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=410&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        ShopSite and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, ShopSite has been successfully installed\"\necho \" \"\necho
        \"You can now configure ShopSite and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "ShopSite powered by Webuzo", "deployments_total": 0, "label":
        "ShopSite powered by Webuzo"}, {"description": "1. Add a new user to the system
        with sudo priviliedges\n2. Install erlang elixir postgresql latest stable
        versions from Arch repository.\n3. Initialise user postgres with password
        \"postgres\"\n4. Initialise Postgres database default data directory to /var/lib/postgres/data\n5.
        Enable Postgresql on system boot\n6. Install NodeJS, npm & inotify-tools to
        enable hot-code push.", "deployments_active": 0, "created": "2019-03-21T10:04:54",
        "id": 405277, "updated": "2019-03-21T10:58:20", "script": "#!/bin/bash\n#Scripter:
        Arto Kalishian\n#Version: 0.1\n#Status: Not tested.\n#Date: 21/March/2019\n\necho
        \"This username will be the user who will have sudo priviledges. A safer way
        to work on Arch Linux\".\necho -e \"Please enter preferred username: \\c\"\nread
        username\necho \"\"\necho \"This script will do the following for you:\"\necho
        \"------------------------------------------\"\necho \"1. Add a new user to
        the system with sudo priviliedges\"\necho \"2. Install erlang elixir postgresql
        latest stable versions from Arch repository.\"\necho \"3. Initialise user
        postgres with password \"postgres\"\"\necho \"4. Initialise Postgres database
        default data directory to /var/lib/postgres/data\"\necho \"5. Enable Postgresql
        on system boot\"\necho \"6. Install NodeJS, npm & inotify tools to enable
        hot-code push.\"\necho \"\"\necho \"Press Enter to continue..\"\nread\n\n\npacman
        -Syyu --noconfirm\npacman -S erlang elixir postgresql --noconfirm\n\nuseradd
        -m -s /bin/bash $username\necho \"$username     ALL=(ALL) ALL\" >>/etc/sudoers\n\nsu
        - postgres -c \"psql -U postgres -d postgres -c \\\"alter user postgres with
        password ''postgres'';\\\"\"\nsu - postgres -c \"initdb -D /var/lib/postgres/data\"\n\nsystemctl
        start postgresql\nsystemctl status postgresql\nsystemctl enable postgresql\n\npacman
        -S nodejs npm inotify-tools --noconfirm\necho \"---\"\necho \"End of script.\"\necho
        \"\"\necho \"The first thing to do is to log in with your new user $username
        & use passwd command to change password.\"\necho \"Then use the following
        commands to prepare your phoenix web framework environment:\"\necho \"mix
        archive.install hex phx_new 1.4.2\"\necho \"mix local.hex\"", "user_defined_fields":
        [], "ordinal": 0, "username": "tobleron", "images": ["linode/arch"], "user_gravatar_id":
        "eadf09ca987e33f837f49b2e9d11ff03", "logo_url": "", "is_public": true, "rev_note":
        "This script is not tested. Will do as soon as I have a linode resource, can''t
        afford extra one for now.", "deployments_total": 0, "label": "Erlang-Elixir-Phoenix"},
        {"description": "", "deployments_active": 0, "created": "2016-01-01T13:21:22",
        "id": 14365, "updated": "2016-01-01T13:21:41", "script": "#!/bin/bash\n##\n#
        Configures RabbitMQ for Sensu\n#\n# Dependencies:\n# - RabbitMQ\n##\nset -eux\n\nrabbitmqctl
        add_vhost sensu\nrabbitmqctl add_user sensu monit0r\nrabbitmqctl set_permissions
        -p sensu sensu \".*\" \".*\" \".*\"\nrabbitmqctl set_user_tags sensu administrator",
        "user_defined_fields": [], "ordinal": 0, "username": "ezan", "images": ["linode/ubuntu14.04lts"],
        "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78", "logo_url": "", "is_public":
        true, "rev_note": "Initial import", "deployments_total": 0, "label": "configure-rabbitmq-sensu"},
        {"description": "fsfgg", "deployments_active": 0, "created": "2013-08-01T20:51:54",
        "id": 7198, "updated": "2013-08-01T20:52:20", "script": "#!/bin/bash", "user_defined_fields":
        [], "ordinal": 0, "username": "kidid", "images": ["linode/centos5.632bit"],
        "user_gravatar_id": "0bcff359135eea23d1cc1306ef31b413", "logo_url": "", "is_public":
        true, "rev_note": "Initial import", "deployments_total": 0, "label": "ddad"},
        {"description": "phpLiteAdmin is a web-based SQLite database admin tool written
        in PHP with support for SQLite2 and SQLite3. \r\n\t\t\t\r\nWebuzo is a Single
        User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        phpLiteAdmin and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T10:00:10", "id": 9246, "updated":
        "2014-06-10T10:02:29", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install phpLiteAdmin and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About phpLiteAdmin :\n#   phpLiteAdmin is a web-based SQLite database admin
        tool written in PHP with support for SQLite2 and SQLite3. \n###########################################################################################################\n\n#
        Install phpLiteAdmin Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=431&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        phpLiteAdmin and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, phpLiteAdmin has been successfully installed\"\necho \"
        \"\necho \"You can now configure phpLiteAdmin and Softaculous Webuzo at the
        following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you
        for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [],
        "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "phpLiteAdmin powered by Webuzo", "deployments_total": 0,
        "label": "phpLiteAdmin powered by Webuzo"}, {"description": "", "deployments_active":
        0, "created": "2016-01-01T13:23:29", "id": 14366, "updated": "2016-01-01T13:23:43",
        "script": "#!/bin/bash\n##\n# Installs OpenTSDB from source\n#\n# Provides:\n#
        - HTTP (TCP/4242)\n#\n# Dependencies:\n# - HBase (TCP/9000)\n# - ZooKeeper
        (TCP/2181)\n##\nset -eux\n\nsource env.sh\n\n# Install dependencies\napt-get
        install -yq openjdk-7-jre-headless\n\n# Install OpenTSDB\ncd /tmp\n\ncurl
        -sOL https://github.com/OpenTSDB/opentsdb/releases/download/v${OPENTSDB_VERSION}/opentsdb-${OPENTSDB_VERSION}_all.deb\ndpkg
        -i opentsdb-${OPENTSDB_VERSION}_all.deb\n\n# Create tables in HBase\nexport
        HBASE_HOME=/opt/hbase\nexport COMPRESSION=NONE\n\n/usr/share/opentsdb/tools/create_table.sh\n\n#
        Configure OpenTSDB\ncp $BASE_PATH/etc/opentsdb/opentsdb.conf /etc/opentsdb\n\n#
        Start OpenTSDB\nservice opentsdb start", "user_defined_fields": [], "ordinal":
        0, "username": "ezan", "images": ["linode/ubuntu14.04lts"], "user_gravatar_id":
        "40bba314333f02cceb3f40d8a2aabb78", "logo_url": "", "is_public": true, "rev_note":
        "Initial import", "deployments_total": 0, "label": "install-opentsdb"}, {"description":
        "Drupal is an open-source platform and content management system for building
        dynamic web sites offering a broad range of features and services including
        user administration, publishing workflow, discussion capabilities, news aggregation,
        metadata functionalities using controlled vocabularies and XML publishing
        for content sharing purposes.\r\n\t\t\t\r\nWebuzo is a Single User Control
        Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
        System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
        or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Drupal and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:25:12", "id": 8991, "updated":
        "2014-06-10T09:22:35", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Drupal and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Drupal :\n#   Drupal
        is an open-source platform and content management system for building dynamic
        web sites \n#   offering a broad range of features and services including
        user administration, publishing workflow,\n#   discussion capabilities, news
        aggregation, metadata functionalities using controlled vocabularies \n#   and
        XML publishing for content sharing purposes.\n###########################################################################################################\n\n#
        Install Drupal Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=30&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Drupal and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Drupal has been successfully installed\"\necho \" \"\necho
        \"You can now configure Drupal and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Drupal powered by Webuzo", "deployments_total": 0, "label":
        "Drupal powered by Webuzo"}, {"description": "UIkit A lightweight and modular
        front-end framework for developing fast and powerful web interfaces.\r\n\r\nUIkit
        gives you a comprehensive collection of HTML, CSS, and JS components which
        is simple to use, easy to customize and extendable.\r\n\r\nUIkit is open source
        and MIT licensed. It is absolutely free of charge and you can use, copy, merge,
        publish and distribute the framework without any limitations.\r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        UIkit and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T10:01:45", "id": 9247, "updated":
        "2014-06-10T10:02:35", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install UIkit and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About UIkit :\n#   UIkit
        A lightweight and modular front-end framework for developing fast and powerful
        web interfaces.\n#   UIkit gives you a comprehensive collection of HTML, CSS,
        and JS components which is simple to use, \n#   easy to customize and extendable.\n###########################################################################################################\n\n#
        Install UIkit Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=471&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        UIkit and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, UIkit has been successfully installed\"\necho \" \"\necho
        \"You can now configure UIkit and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "UIkit powered by Webuzo", "deployments_total": 0, "label":
        "UIkit powered by Webuzo"}, {"description": "", "deployments_active": 0, "created":
        "2016-01-01T13:24:40", "id": 14367, "updated": "2016-01-01T13:24:55", "script":
        "#!/bin/bash\n##\n# Installs the Flapjack handler for Sensu\n#\n# Dependencies:\n#
        - Redis provided for Flapjack\n# - Sensu server\n##\nset -eux\n\nsource env.sh\n\ncd
        /tmp\n\ngit clone git://github.com/sensu/sensu-community-plugins.git\ncp sensu-community-plugins/extensions/handlers/flapjack.rb
        /etc/sensu/extensions/handlers\n\ncp $BASE_PATH/etc/sensu/conf.d/flapjack.json
        /etc/sensu/conf.d", "user_defined_fields": [], "ordinal": 0, "username": "ezan",
        "images": ["linode/ubuntu14.04lts"], "user_gravatar_id": "40bba314333f02cceb3f40d8a2aabb78",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "install-sensu-flapjack"}, {"description": "MediaWiki is a free
        software wiki package written in PHP, originally for use on Wikipedia. It
        is now used by several other projects of the non-profit Wikimedia Foundation
        and by many other wikis.\r\n\r\nMediaWiki is designed to be run on a large
        server farm for a website that gets millions of hits per day. MediaWiki is
        an extremely powerful, scalable software and a feature-rich wiki implementation
        that uses PHP to process and display data stored in a database, such as MySQL.
        \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users deploy
        Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP,
        Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        MediaWiki 1.19 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T10:02:42", "id": 9248, "updated":
        "2014-06-10T10:02:40", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install MediaWiki 1.19 and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About MediaWiki 1.19 :\n#   MediaWiki is a free software wiki package written
        in PHP, originally for use on Wikipedia.\n#   It is now used by several other
        projects of the non-profit Wikimedia Foundation and by many other wikis.\n###########################################################################################################\n\n#
        Install MediaWiki 1.19 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=421&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        MediaWiki 1.19 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, MediaWiki 1.19 has been successfully installed\"\necho
        \" \"\necho \"You can now configure MediaWiki 1.19 and Softaculous Webuzo
        at the following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank
        you for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields":
        [], "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "MediaWiki 1.19 powered by Webuzo", "deployments_total":
        0, "label": "MediaWiki 1.19 powered by Webuzo"}, {"description": "", "deployments_active":
        0, "created": "2015-01-01T07:02:10", "id": 11040, "updated": "2015-01-08T01:49:04",
        "script": "#!StackScript", "user_defined_fields": [], "ordinal": 0, "username":
        "zhangfan", "images": ["linode/debian6"], "user_gravatar_id": "6378c7beab2f878c31ff5c112efbd437",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "StackScript"}, {"description": "", "deployments_active": 0, "created":
        "2016-01-01T13:28:33", "id": 14368, "updated": "2016-01-01T13:28:49", "script":
        "#!/bin/bash\n##\n# Installs Uchiwa, a multi-datacenter dashboard for Sensu\n#\n#
        Provides:\n# - HTTP (TCP/8010)\n#\n# Dependencies:\n# - Sensu API\n##\nset
        -eux\n\nsource env.sh\n\n$BASE_PATH/install-sensu.sh\n\napt-get install -yq
        uchiwa\n\ncp $BASE_PATH/etc/sensu/uchiwa.json /etc/sensu\n\nupdate-rc.d uchiwa
        defaults\n\nservice uchiwa restart", "user_defined_fields": [], "ordinal":
        0, "username": "ezan", "images": ["linode/ubuntu14.04lts"], "user_gravatar_id":
        "40bba314333f02cceb3f40d8a2aabb78", "logo_url": "", "is_public": true, "rev_note":
        "Initial import", "deployments_total": 0, "label": "install-uchiwa"}, {"description":
        "Abante Cart is a free PHP based eCommerce solution for merchants to provide
        ability creating online business and sell products online quick and efficient.\r\n\r\nAbanteCart
        application is built and supported by experienced enthusiasts that are passionate
        about their work and contribution to rapidly evolving eCommerce industry.\r\n\r\nAbanteCart
        is more than just a shopping cart, it is rapidly growing eCommerce platform
        with many benefits. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which
        helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps
        (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the
        cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        AbanteCart and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:30:00", "id": 8993, "updated":
        "2014-06-10T09:22:53", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install AbanteCart and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About AbanteCart :\n#   Abante Cart is a free PHP based eCommerce solution
        for merchants to provide ability creating online \n#   business and sell products
        online quick and efficient. \n###########################################################################################################\n\n#
        Install AbanteCart Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=389&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        AbanteCart and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, AbanteCart has been successfully installed\"\necho \" \"\necho
        \"You can now configure AbanteCart and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "AbanteCart powered by Webuzo", "deployments_total": 0,
        "label": "AbanteCart powered by Webuzo"}, {"description": "SiteCake is a drag
        and drop CMS for simple websites. It lets you publish the content just by
        dragging it to your web page. It''s CMS for static websites, with few pages
        only, to cover the niche below WordPress level of complexity.\r\n\r\nSiteCake
        was designed to be simple enough for a designer to integrate it on their own,
        without a need to hire a developer. SiteCake was designed to be simple enough
        for a site owner to change some text, swap some photos and add a video on
        their own, without a need to hire a web editor.\r\n\t\t\t\r\nWebuzo is a Single
        User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        SiteCake and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T10:03:34", "id": 9249, "updated":
        "2014-06-10T10:02:46", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install SiteCake and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About SiteCake :\n#   SiteCake
        is a drag and drop CMS for simple websites.\n#   It lets you publish the content
        just by dragging it to your web page.\n#   It''s CMS for static websites,
        with few pages only, to cover the niche below WordPress level of complexity.\n###########################################################################################################\n\n#
        Install SiteCake Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=480&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        SiteCake and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, SiteCake has been successfully installed\"\necho \" \"\necho
        \"You can now configure SiteCake and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "SiteCake powered by Webuzo", "deployments_total": 0, "label":
        "SiteCake powered by Webuzo"}, {"description": "Joomla is an award-winning
        content management system (CMS), which enables you to build Web sites and
        powerful online applications. Many aspects, including its ease-of-use and
        extensibility, have made Joomla the most popular Web site software available.
        Best of all, Joomla is an open source solution that is freely available to
        everyone. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps
        users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
        NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Joomla and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:32:34", "id": 8994, "updated":
        "2014-06-10T09:23:01", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Joomla and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Joomla :\n#   Joomla
        is an award-winning content management system (CMS), which enables you to
        build Web sites \n#   and powerful online applications. Many aspects, including
        its ease-of-use and extensibility, have made \n#   Joomla the most popular
        Web site software available. Best of all, Joomla is an open source \n#   solution
        that is freely available to everyone.\n###########################################################################################################\n\n#
        Install Joomla Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=413&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Joomla and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Joomla has been successfully installed\"\necho \" \"\necho
        \"You can now configure Joomla and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Joomla powered by Webuzo", "deployments_total": 0, "label":
        "Joomla powered by Webuzo"}, {"description": "Monsta FTP Open source PHP/Ajax
        cloudware that puts FTP file management right in your browser, anywhere, any
        time.\r\n\r\nDrag & drop files into your browser and watch them upload, like
        magic! \r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users
        deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Monsta FTP and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T10:04:16", "id": 9250, "updated":
        "2014-06-10T10:02:51", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Monsta FTP and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Monsta FTP :\n#   Monsta FTP Open source PHP/Ajax cloudware that puts
        FTP file management right in your browser, anywhere, any time.\n#   Drag &
        drop files into your browser and watch them upload, like magic! \n###########################################################################################################\n\n#
        Install Monsta FTP Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=482&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Monsta FTP and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Monsta FTP has been successfully installed\"\necho \" \"\necho
        \"You can now configure Monsta FTP and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Monsta FTP powered by Webuzo", "deployments_total": 0,
        "label": "Monsta FTP powered by Webuzo"}, {"description": "MyBB is a free
        bulletin board system software package developed by the MyBB Group. \r\n\r\nA
        lot of thought has gone into the MyBB interface to make it easy to use. MyBB
        uses a standard discussion board structure, so your visitors will feel familiar
        with the way MyBB works.\r\n\t\t\t\r\nWebuzo is a Single User Control Panel
        which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System
        Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or
        in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        MyBB and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:38:47", "id": 8996, "updated":
        "2014-06-10T09:23:19", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install MyBB and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About MyBB :\n#   MyBB
        is a free bulletin board system software package developed by the MyBB Group.\n###########################################################################################################\n\n#
        Install MyBB Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=36&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        MyBB and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, MyBB has been successfully installed\"\necho \" \"\necho
        \"You can now configure MyBB and Softaculous Webuzo at the following URL :\"\necho
        \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
        Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal": 0, "username":
        "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts", "linode/ubuntu14.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "MyBB powered by Webuzo", "deployments_total": 0, "label":
        "MyBB powered by Webuzo"}, {"description": "Pebble is a lightweight, open
        source, Java EE blogging tool. It''s small, fast and feature-rich with unrivalled
        ease of installation and use.\r\n\r\nBlog content is stored as XML files on
        disk and served up dynamically, so there''s no need to install a database.
        All maintenance and administration can be performed through your web browser,
        making Pebble ideal for anybody who is constantly on the move or doesn''t
        have direct access to their host. \r\n\t\t\t\r\nWebuzo is a Single User Control
        Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
        System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
        or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Pebble and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T10:05:42", "id": 9252, "updated":
        "2014-06-10T10:03:03", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Pebble and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Pebble :\n#   Pebble
        is a lightweight, open source, Java EE blogging tool.\n#   It''s small, fast
        and feature-rich with unrivalled ease of installation and use.\n###########################################################################################################\n\n#
        Install Pebble Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=429&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Pebble and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Pebble has been successfully installed\"\necho \" \"\necho
        \"You can now configure Pebble and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Pebble powered by Webuzo", "deployments_total": 0, "label":
        "Pebble powered by Webuzo"}, {"description": "Test to call stackscript with
        label", "deployments_active": 0, "created": "2018-11-13T06:20:12", "id": 355877,
        "updated": "2018-11-13T06:20:43", "script": "#!/bin/bash\n\n# It works!",
        "user_defined_fields": [], "ordinal": 0, "username": "evin2", "images": ["linode/gentoo"],
        "user_gravatar_id": "f3b856c654ab1382d0a555d825211c0c", "logo_url": "", "is_public":
        true, "rev_note": "Initial import", "deployments_total": 0, "label": "Epasqualetti"},
        {"description": "Dolphin is the world''s most advanced community software.
        Open-source, independent, downloadable, scalable, customizable, full-featured,
        free software for building social networks, dating sites and web-communities.\r\nLoaded
        with video chat, recorder, video player, forums, groups, events, video messenger,
        mailbox, desktop app, video sharing, photo sharing, iPhone app and much more.
        Build your own business or advance your hobby with Dolphin! \r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Dolphin and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:40:49", "id": 8998, "updated":
        "2014-06-10T09:23:36", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Dolphin and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Dolphin :\n#   Dolphin
        is the world''s most advanced community software. Open-source, independent,
        downloadable, scalable,\n#   customizable, full-featured, free software for
        building social networks, dating sites and web-communities.\n#   Loaded with
        video chat, recorder, video player, forums, groups, events, video messenger,
        mailbox, desktop app,\n#   video sharing, photo sharing, iPhone app and much
        more. Build your own business or advance your hobby with Dolphin! \n###########################################################################################################\n\n#
        Install Dolphin Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=121&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Dolphin and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Dolphin has been successfully installed\"\necho \" \"\necho
        \"You can now configure Dolphin and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Dolphin powered by Webuzo", "deployments_total": 0, "label":
        "Dolphin powered by Webuzo"}, {"description": "Apache Roller is a full-featured,
        multi-user and group-blog server suitable for blog sites large and small.\r\n\r\nApache
        Roller is a Java web application that should be able to run on any Java EE
        server and relational database. \r\n\t\t\t\r\nWebuzo is a Single User Control
        Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
        System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
        or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Apache Roller and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T10:07:20", "id": 9254, "updated":
        "2014-06-10T10:03:16", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Apache Roller and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Apache Roller :\n#   Apache Roller is a full-featured, multi-user and
        group-blog server suitable for blog sites large and small.\n#   Apache Roller
        is a Java web application that should be able to run on any Java EE server
        and relational database. \n###########################################################################################################\n\n#
        Install Apache Roller Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=484&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Apache Roller and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Apache Roller has been successfully installed\"\necho \"
        \"\necho \"You can now configure Apache Roller and Softaculous Webuzo at the
        following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you
        for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [],
        "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Apache Roller powered by Webuzo", "deployments_total":
        0, "label": "Apache Roller powered by Webuzo"}, {"description": "errer", "deployments_active":
        0, "created": "2014-02-13T21:14:30", "id": 8231, "updated": "2014-02-13T21:15:10",
        "script": "#!/bin/bash", "user_defined_fields": [], "ordinal": 0, "username":
        "shakilaid1", "images": ["linode/debian7.4"], "user_gravatar_id": "92c44b5a4f7186e4a6f2320505505b0c",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "ererer"}, {"description": "WordPress is a state-of-the-art publishing
        platform with a focus on aesthetics, web standards, and usability. WordPress
        is both free and priceless at the same time.\r\n\r\nMore simply, WordPress
        is what you use when you want to work with your blogging software, not fight
        it. \r\n\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users
        deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        WordPress and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-06T10:26:51", "id": 9255, "updated":
        "2014-06-10T10:03:35", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install WordPress + Nginx and Softaculous Webuzo\n# Description -\n# About
        Webuzo :\n#   Webuzo is a Single User Control Panel which helps users deploy
        Web Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About WordPress :\n#   WordPress is a state-of-the-art publishing platform
        with a focus on aesthetics, web standards, and usability.\n#   WordPress is
        both free and priceless at the same time.\n#   More simply, WordPress is what
        you use when you want to work with your blogging software, not fight it.\n###########################################################################################################\n\n#
        Install WordPress Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=26&license=$1\"\n   \n}\n\n#
        Install Nginx Function\nfunction install_webuzo(){\n       \n    # Fetch the
        Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh --install=nginx,mysql,php53,perl,python2,pureftpd,bind
        >> /root/webuzo-install.log 2>&1\n   \n    # Modify Permissions\n    chmod
        0755 install.sh >> /root/webuzo-install.log 2>&1\n   \n    # Execute\n    ./install.sh
        >> /root/webuzo-install.log 2>&1\n   \n    # Clean Up\n    rm -rf install.sh
        >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        WordPress + NGINX and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, WordPress has been successfully installed\"\necho \" \"\necho
        \"You can now configure WordPress and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "WordPress + Nginx powered by Webuzo", "deployments_total":
        0, "label": "WordPress + Nginx powered by Webuzo"}, {"description": "DAM",
        "deployments_active": 0, "created": "2017-05-30T05:04:37", "id": 102439, "updated":
        "2017-05-30T05:05:01", "script": "#!/bin/bash", "user_defined_fields": [],
        "ordinal": 0, "username": "poohflya", "images": ["linode/ubuntu17.04"], "user_gravatar_id":
        "bf99d31a5d9641a61079b25a4c1f5757", "logo_url": "", "is_public": true, "rev_note":
        "Initial import", "deployments_total": 0, "label": "DAM"}, {"description":
        "Concrete5 makes running a website easy. Go to any page in your site, and
        a editing toolbar gives you all the controls you need to update your website.
        No intimidating manuals, no complicated administration interfaces - just point
        and click.\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps
        users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
        NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Concrete5 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:43:38", "id": 9001, "updated":
        "2014-06-10T09:24:07", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Concrete5 and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Concrete5 :\n#   Concrete5 makes running a website easy. Go to any page
        in your site, and a editing toolbar gives you \n#   all the controls you need
        to update your website. No intimidating manuals, no complicated \n#   administration
        interfaces - just point and click.\n###########################################################################################################\n\n#
        Install Concrete5 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=174&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Concrete5 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Concrete5 has been successfully installed\"\necho \" \"\necho
        \"You can now configure Concrete5 and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Concrete5 powered by Webuzo", "deployments_total": 0, "label":
        "Concrete5 powered by Webuzo"}, {"description": "Oxwall is unbelievably flexible
        and easy to use PHP/MySQL community software platform.\r\n\r\nOxwall is used
        for a wide range of projects starting from family sites and custom social
        networks to collaboration tools and enterprise community solutions. \r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Oxwall and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:46:00", "id": 9003, "updated":
        "2014-06-10T09:24:28", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Oxwall and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Oxwall :\n#   Oxwall
        is unbelievably flexible and easy to use PHP/MySQL community software platform.\n###########################################################################################################\n\n#
        Install Oxwall Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=258&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Oxwall and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Oxwall has been successfully installed\"\necho \" \"\necho
        \"You can now configure Oxwall and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Oxwall powered by Webuzo", "deployments_total": 0, "label":
        "Oxwall powered by Webuzo"}, {"description": "", "deployments_active": 0,
        "created": "2013-03-03T03:51:40", "id": 6188, "updated": "2013-03-03T03:51:50",
        "script": "#!/bin/bash''", "user_defined_fields": [], "ordinal": 0, "username":
        "ma88123456", "images": ["linode/ubuntu11.1032bit"], "user_gravatar_id": "2e365c39a7fd833d229a95d24c8c525d",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "000"}, {"description": "qdPM is a free web-based project management
        tool suitable for a small team working on multiple projects.\r\n\r\nIt is
        fully configurable. You can easy manage Projects, Tasks and People.\r\n\r\nCustomers
        interact using a Ticket System that is integrated into Task management. \r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        qdPM and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:46:56", "id": 9004, "updated":
        "2014-06-10T09:24:35", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install qdPM and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About qdPM :\n#   qdPM
        is a free web-based project management tool suitable for a small team working
        on multiple projects.\n###########################################################################################################\n\n#
        Install qdPM Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=428&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        qdPM and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, qdPM has been successfully installed\"\necho \" \"\necho
        \"You can now configure qdPM and Softaculous Webuzo at the following URL :\"\necho
        \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
        Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal": 0, "username":
        "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts", "linode/ubuntu14.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "qdPM powered by Webuzo", "deployments_total": 0, "label":
        "qdPM powered by Webuzo"}, {"description": "MediaWiki is a free software wiki
        package written in PHP, originally for use on Wikipedia. It is now used by
        several other projects of the non-profit Wikimedia Foundation and by many
        other wikis.\r\n\r\nMediaWiki is designed to be run on a large server farm
        for a website that gets millions of hits per day. MediaWiki is an extremely
        powerful, scalable software and a feature-rich wiki implementation that uses
        PHP to process and display data stored in a database, such as MySQL. \r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        MediaWiki and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:47:53", "id": 9005, "updated":
        "2014-06-10T09:24:43", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install MediaWiki and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About MediaWiki :\n#   MediaWiki is a free software wiki package written in
        PHP, originally for use on Wikipedia. \n#   It is now used by several other
        projects of the non-profit Wikimedia Foundation and by many other wikis.\n###########################################################################################################\n\n#
        Install MediaWiki Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=25&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        MediaWiki and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, MediaWiki has been successfully installed\"\necho \" \"\necho
        \"You can now configure MediaWiki and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "MediaWiki powered by Webuzo", "deployments_total": 0, "label":
        "MediaWiki powered by Webuzo"}, {"description": "Jcow is a flexible Social
        Networking software written in PHP. It can help you to:\r\n\r\n    * Build
        a social network for your interests and passions.\r\n    * Build a member
        community for your existing website.\r\n    * Build a social networking site
        like facebook/myspace/twitter.\r\n\r\n\r\n\t\t\t\r\nWebuzo is a Single User
        Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Jcow and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:49:05", "id": 9006, "updated":
        "2014-06-10T09:24:50", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Jcow and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Jcow :\n#   Jcow
        is a flexible Social Networking software written in PHP. It can help you to:\n#    *
        Build a social network for your interests and passions.\n#    * Build a member
        community for your existing website.\n#    * Build a social networking site
        like facebook/myspace/twitter.\n###########################################################################################################\n\n#
        Install Jcow Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=182&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Jcow and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Jcow has been successfully installed\"\necho \" \"\necho
        \"You can now configure Jcow and Softaculous Webuzo at the following URL :\"\necho
        \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
        Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal": 0, "username":
        "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts", "linode/ubuntu14.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Jcow powered by Webuzo", "deployments_total": 0, "label":
        "Jcow powered by Webuzo"}, {"description": "", "deployments_active": 0, "created":
        "2019-03-08T21:14:31", "id": 401711, "updated": "2019-04-04T15:03:53", "script":
        "#!/bin/bash\n\n# Linux GSM install\n\nfunction linuxgsm_install {\n\necho
        Configuring IP address\nIPADDR=`hostname -I | awk ''{print$1}''`\n\n# Add
        a user for the game server\necho Setting up a user\nadduser --disabled-password
        --gecos \"\" \"$GAMESERVER\"\necho \"$GAMESERVER ALL=(ALL) NOPASSWD: ALL\"
        >> /etc/sudoers\n\n# Download and the LinuxGSM script\necho Downloading LinuxGSM\nwget
        -4 https://linuxgsm.com/dl/linuxgsm.sh -P /home/\"$GAMESERVER\"/\nchmod +x
        /home/\"$GAMESERVER\"/linuxgsm.sh\nchown -R \"$GAMESERVER\":\"$GAMESERVER\"
        /home/\"$GAMESERVER\"/*\n\n# Run the GSM script\necho running LinuxGSM script\nsu
        - \"$GAMESERVER\" -c \"/home/$GAMESERVER/linuxgsm.sh $GAMESERVER\"\n\n}\n\n\nfunction
        game_install {\n\n# Installing the Server\necho Installing the Server\nsu
        - \"$GAMESERVER\" -c \"/home/$GAMESERVER/$GAMESERVER auto-install\"\nif [[
        \"$GAMESERVER\" =~ (^boserver$|^bb2server$|^bmdmserver$| \\\n^cssserver$|^csgoserver$|^dodsserver$|^emserver$|
        \\\n^gmodserver$|^insserver$|^nmrihserver$|^tf2server$| \\\n^tuserver$|^zpsserver$)
        ]]; then\n  echo -e \"\\ngslt=$GSLT\" >> /home/\"$GAMESERVER\"/lgsm/config-lgsm/\"$GAMESERVER\"/\"$GAMESERVER\".cfg\nelse\n  echo
        No Gameserver Login Token Needed\nfi\n\n}\n\n\nfunction service_config {\n\n#
        Add cron jobs for updating the gameserver and linuxgsm. Monitor will ensure
        that the gameserver is running and restart if needed.\necho Adding game update
        cron jobs\ncrontab -l > gamecron\necho \"*/5 * * * * su - $GAMESERVER -c ''/home/$GAMESERVER/$GAMESERVER
        monitor'' > /dev/null 2>&1\" >> gamecron\necho \"0 23 * * * su - $GAMESERVER
        -c ''/home/$GAMESERVER/$GAMESERVER update'' > /dev/null 2>&1\" >> gamecron\necho
        \"30 23 * * * su - $GAMESERVER -c ''/home/$GAMESERVER/$GAMESERVER update-functions''
        > /dev/null 2>&1\" >> gamecron\ncrontab gamecron\nrm gamecron\n\n# Create
        systemd service file\n\ncat << END > /etc/systemd/system/$GAMESERVER.service\n[Unit]\nDescription=$GAMESERVER\n\n[Service]\nUser=$GAMESERVER\nType=forking\nExecStart=/bin/bash
        /home/$GAMESERVER/$GAMESERVER start\nExecStop=/bin/kill -2 $MAINPID\n\n[Install]\nWantedBy=multi-user.target\nEND\n\n}",
        "user_defined_fields": [], "ordinal": 0, "username": "linode", "images": ["linode/debian9"],
        "user_gravatar_id": "ead4da00f4fe6a4bd0b4f11a510c031d", "logo_url": "", "is_public":
        true, "rev_note": "", "deployments_total": 0, "label": "Linux GSM One-Click
        Helpers"}, {"description": "Elgg empowers individuals, groups and institutions
        to create their own fully-featured social environment. Elgg, started in 2004,
        is an open source social engine which powers all kinds of social environments
        - from education and business to martial arts and rugby. If you are looking
        for a professional social intranet or want to run a site for your organisation,
        Elgg is a great choice.\r\n\t\t\t\r\nWebuzo is a Single User Control Panel
        which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System
        Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or
        in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Elgg and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:50:16", "id": 9007, "updated":
        "2014-06-10T09:24:57", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Elgg and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Elgg :\n#   Elgg
        empowers individuals, groups and institutions to create their own fully-featured
        social environment. \n#   Elgg, started in 2004, is an open source social
        engine which powers all kinds of social environments \n#   - from education
        and business to martial arts and rugby.\n###########################################################################################################\n\n#
        Install Elgg Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=138&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Elgg and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Elgg has been successfully installed\"\necho \" \"\necho
        \"You can now configure Elgg and Softaculous Webuzo at the following URL :\"\necho
        \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
        Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal": 0, "username":
        "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts", "linode/ubuntu14.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Elgg powered by Webuzo", "deployments_total": 0, "label":
        "Elgg powered by Webuzo"}, {"description": "i have no idea", "deployments_active":
        0, "created": "2011-07-04T19:40:31", "id": 2864, "updated": "2011-07-04T19:41:10",
        "script": "#!/bin/bash\n# <UDF name=\"db_password\" Label=\"MySQL root Password\"
        />\n# <UDF name=\"db_name\" Label=\"Create Database\" default=\"\" example=\"Optionally
        create this database\" />\n# <UDF name=\"db_user\" Label=\"Create MySQL User\"
        default=\"\" example=\"Optionally create this user\" />\n# <UDF name=\"db_user_password\"
        Label=\"MySQL User''s Password\" default=\"\" example=\"User''s password\"
        />\n\t \n \nsource <ssinclude StackScriptID=\"1\">\n \nsystem_update\npostfix_install_loopback_only\nmysql_install
        \"$DB_PASSWORD\" && mysql_tune 40\nmysql_create_database \"$DB_PASSWORD\"
        \"$DB_NAME\"\nmysql_create_user \"$DB_PASSWORD\" \"$DB_USER\" \"$DB_USER_PASSWORD\"\nmysql_grant_user
        \"$DB_PASSWORD\" \"$DB_USER\" \"$DB_NAME\"\nphp_install_with_apache && php_tune\napache_install
        && apache_tune 40 && apache_virtualhost_from_rdns\ngoodstuff\nrestartServices",
        "user_defined_fields": [{"name": "db_password", "label": "MySQL root Password"},
        {"example": "Optionally create this database", "name": "db_name", "label":
        "Create Database", "default": ""}, {"example": "Optionally create this user",
        "name": "db_user", "label": "Create MySQL User", "default": ""}, {"example":
        "User''s password", "name": "db_user_password", "label": "MySQL User''s Password",
        "default": ""}], "ordinal": 0, "username": "jmfox1987", "images": ["linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "6f9936b78bbbbaf91191091d114aa66f", "logo_url": "", "is_public":
        true, "rev_note": "Initial import", "deployments_total": 0, "label": "mySQL"},
        {"description": "", "deployments_active": 0, "created": "2019-03-08T21:14:55",
        "id": 401712, "updated": "2019-04-04T15:04:36", "script": "#!/bin/bash\n\n#
        Helper functions\n\nfunction apt_setup_update {\n  # Force IPv4 and noninteractive
        upgrades\n  echo ''Acquire::ForceIPv4 \"true\";'' > /etc/apt/apt.conf.d/99force-ipv4\n  export
        DEBIAN_FRONTEND=noninteractive\n  apt-get update && apt-get upgrade -y\n}\n\nfunction
        set_hostname {\n  IP=`hostname -I | awk ''{print$1}''`\n  HOSTNAME=`dnsdomainname
        -A`\n  hostnamectl set-hostname $HOSTNAME\n  echo $IP $HOSTNAME  >> /etc/hosts\n}\n\nfunction
        add_pubkey {\n  mkdir ~/.ssh && chmod 700 ~/.ssh\n  touch ~/.ssh/authorized_keys
        && chmod 600 ~/.ssh/authorized_keys\n  echo $PUBKEY > ~/.ssh/authorized_keys\n}\n\nfunction
        mysql_root_preinstall {\n  # Set MySQL root password on install\n  debconf-set-selections
        <<< \"mysql-server mysql-server/root_password password $DBROOT_PASSWORD\"\n  debconf-set-selections
        <<< \"mysql-server mysql-server/root_password_again password $DBROOT_PASSWORD\"\n}\n\nfunction
        run_mysql_secure_installation {\n  # Installs expect, runs mysql_secure_installation
        and runs mysql secure installation.\n  apt-get install -y expect\n  SECURE_MYSQL=$(expect
        -c \"\n  set timeout 10\n  spawn mysql_secure_installation\n  expect \\\"Enter
        current password for root (enter for ):\\\"\n  send \\\"$DBROOT_PASSWORD\\r\\\"\n  expect
        \\\"Change the root password?\\\"\n  send \\\"n\\r\\\"\n  expect \\\"Remove
        anonymous users?\\\"\n  send \\\"y\\r\\\"\n  expect \\\"Disallow root login
        remotely?\\\"\n  send \\\"y\\r\\\"\n  expect \\\"Remove test database and
        access to it?\\\"\n  send \\\"y\\r\\\"\n  expect \\\"Reload privilege tables
        now?\\\"\n  send \\\"y\\r\\\"\n  expect eof\n  \")\n  echo \"$SECURE_MYSQL\"\n}\n\nfunction
        ufw_install {\n  # Install UFW and add basic rules\n  apt-get install ufw
        -y\n  ufw default allow outgoing\n  ufw default deny incoming\n  ufw allow
        ssh\n  ufw enable\n  systemctl enable ufw\n}\n\nfunction fail2ban_install
        {\n  # Install and configure Fail2ban\n  apt-get install fail2ban -y\n  cd
        /etc/fail2ban\n  cp fail2ban.conf fail2ban.local\n  cp jail.conf jail.local\n  systemctl
        start fail2ban\n  systemctl enable fail2ban\n}\n\nfunction stackscript_cleanup
        {\n  rm /root/StackScript\n  rm /root/ssinclude*\n  echo \"Installation complete!\"\n}",
        "user_defined_fields": [], "ordinal": 0, "username": "linode", "images": ["linode/debian9"],
        "user_gravatar_id": "ead4da00f4fe6a4bd0b4f11a510c031d", "logo_url": "", "is_public":
        true, "rev_note": "Initial import", "deployments_total": 0, "label": "One-Click
        Helpers"}, {"description": "CMS Made Simple provides a fast and easy way to
        create a professional web site and manage its content, whether it''s for a
        small business or a multinational corporation!\r\nCMS Made Simple provides
        a mechanism for the website administrator to create and manage pages, their
        layout, and their content. CMS Made Simple is unobtrusive. You can create
        a table based layout, or a fully validating XHTML/CSS layout.\r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        CMS Made Simple and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:51:03", "id": 9008, "updated":
        "2014-06-10T09:25:08", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install CMS Made Simple and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About CMS Made Simple :\n#   CMS Made Simple provides a fast and easy way
        to create a professional web site and manage its content,\n#   whether it''s
        for a small business or a multinational corporation!\n###########################################################################################################\n\n#
        Install CMS Made Simple Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=247&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        CMS Made Simple and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, CMS Made Simple has been successfully installed\"\necho
        \" \"\necho \"You can now configure CMS Made Simple and Softaculous Webuzo
        at the following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank
        you for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields":
        [], "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "CMS Made Simple powered by Webuzo", "deployments_total":
        0, "label": "CMS Made Simple powered by Webuzo"}, {"description": "System
        helper functions for Ubuntu.", "deployments_active": 0, "created": "2011-07-04T19:44:48",
        "id": 2865, "updated": "2012-10-04T22:24:47", "script": "#!/bin/bash\n#\n#
        System helper functions\n#\n# Author: Philipe Farias <philipefarias@gmail.com>\n\nsource
        <ssinclude StackScriptID=\"1\">\n\nfunction lower {\n    # helper function\n    echo
        $1 | tr ''[:upper:]'' ''[:lower:]''\n}\n\nfunction set_hostname {\n  HOSTNAME=$1\n  if
        [ -z \"$HOSTNAME\" ] ; then\n    export HOSTNAME=\"`get_rdns_primary_ip`\"\n  fi\n  HOST=`echo
        $HOSTNAME | sed ''s/\\(\\[a-z0-9\\]\\)*\\..*/\\1/''`\n  HOSTS_LINE=\"`system_primary_ip`\\t$HOSTNAME\\t$HOST\"\n  echo
        \"$HOST\" > /etc/hostname\n  sed -i -e \"s/^127\\.0\\.1\\.1\\s.*$/$HOSTS_LINE/\"
        /etc/hosts\n  start hostname\n}\n\nfunction update_locale_en_US_UTF_8 {\n  #locale-gen
        en_US.UTF-8\n  dpkg-reconfigure locales\n  update-locale LC_ALL=en_US.UTF-8
        LANG=en_US.UTF-8\n  echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment\n}\n\nfunction
        set_timezone {\n  # $1 - timezone (zoneinfo file)\n  ln -sf \"/usr/share/zoneinfo/$1\"
        /etc/localtime\n  dpkg-reconfigure --frontend noninteractive tzdata\n}\n\nfunction
        system_add_user {\n  # $1 - username\n  # $2 - password\n  # $3 - groups\n  USERNAME=`lower
        $1`\n  PASSWORD=$2\n  SUDO_GROUP=$3\n  SHELL=\"/bin/bash\"\n  useradd --create-home
        --shell \"$SHELL\" --user-group --groups \"$SUDO_GROUP\" \"$USERNAME\"\n  echo
        \"$USERNAME:$PASSWORD\" | chpasswd\n\n  cat >\"/etc/sudoers.d/$USERNAME\"
        <<EOD\n# Don''t ask password for $USERNAME when using sudo\n$USERNAME ALL=NOPASSWD:
        ALL\nEOD\n  chmod 0440 \"/etc/sudoers.d/$USERNAME\"\n\n  #lock out root\n  passwd
        -l root\n}\n\nfunction get_user_home {\n  # $1 - username\n  cat /etc/passwd
        | grep \"^$1:\" | cut --delimiter=\":\" -f6\n}\n\n# SSH functions\nfunction
        configure_sshd {\n  sshd_config_set_port \"$SSHD_PORT\"\n  sshd_config_permitrootlogin
        \"$SSHD_PERMITROOTLOGIN\"\n  sshd_config_passwordauthentication \"$SSHD_PASSWORDAUTH\"\n  sshd_config_pubkeyauthentication
        \"$SSHD_PUBKEYAUTH\"\n  touch /tmp/restart-ssh\n}\n\nfunction add_user_ssh_key
        {\n    # $1 - username\n    # $2 - ssh key\n    USERNAME=`lower $1`\n    USER_HOME=`get_user_home
        \"$USERNAME\"`\n    sudo -u \"$USERNAME\" mkdir \"$USER_HOME/.ssh\"\n    sudo
        -u \"$USERNAME\" touch \"$USER_HOME/.ssh/authorized_keys\"\n    sudo -u \"$USERNAME\"
        echo \"$2\" >> \"$USER_HOME/.ssh/authorized_keys\"\n    chmod 0600 \"$USER_HOME/.ssh/authorized_keys\"\n}\n\nfunction
        sshd_config_set_port {\n  sed -i -e \"s/Port 22/Port $1/\" /etc/ssh/sshd_config\n}\n\nfunction
        sshd_config_edit_bool {\n    # $1 - param name\n    # $2 - Yes/No\n    VALUE=`lower
        $2`\n    if [ \"$VALUE\" == \"yes\" ] || [ \"$VALUE\" == \"no\" ]; then\n        sed
        -i -e \"s/^#*\\($1\\).*/\\1 $VALUE/\" /etc/ssh/sshd_config\n    fi\n}\n\nfunction
        sshd_config_permitrootlogin {\n    sshd_config_edit_bool \"PermitRootLogin\"
        \"$1\"\n}\n\nfunction sshd_config_passwordauthentication {\n    sshd_config_edit_bool
        \"PasswordAuthentication\" \"$1\"\n}\n\nfunction sshd_config_pubkeyauthentication
        {\n    sshd_config_edit_bool \"PubkeyAuthentication\" \"$1\"\n}\n\nfunction
        sshd_config_passwordauthentication {\n    sshd_config_edit_bool \"PasswordAuthentication\"
        \"$1\"\n}\n\n# Email\nfunction install_postfix {\n  # $1 - root email\n  #
        $2 - username\n  postfix_install_loopback_only # SS1\n  #install mail sending
        utilities\n  apt-get -y install mailutils\n  #configure root alias\n  echo
        \"root: $1\" >> /etc/aliases\n  echo \"$2: root\" >> /etc/aliases\n  cat /etc/hostname
        > /etc/mailname\n  newaliases\n  sed -i -e \"s/mydestination = localhost,
        localhost.localdomain, , localhost/mydestination = localhost, localhost.localdomain,
        $HOSTNAME/\" /etc/postfix/main.cf\n  touch /tmp/restart-postfix\n}\n\n# Monit
        and Munin\nfunction install_monit {\n  # $1 - root email\n  apt-get -y install
        monit\n  sed -i -e ''s/startup=0/startup=1/'' /etc/default/monit\n  mkdir
        -p /etc/monit/conf.d/\n  sed -i -e \"s/# set daemon  120/set daemon 120/\"
        /etc/monit/monitrc\n  sed -i -e \"s/#     with start delay 240/with start
        delay 240/\" /etc/monit/monitrc\n  sed -i -e \"s/# set logfile syslog facility
        log_daemon/set logfile \\/var\\/log\\/monit.log/\" /etc/monit/monitrc\n  sed
        -i -e \"s/# set mailserver mail.bar.baz,/set mailserver localhost/\" /etc/monit/monitrc\n  sed
        -i -e \"s/# set eventqueue/set eventqueue/\" /etc/monit/monitrc\n  sed -i
        -e \"s/#     basedir \\/var\\/monit/basedir \\/var\\/monit/\" /etc/monit/monitrc\n  sed
        -i -e \"s/#     slots 100 /slots 100/\" /etc/monit/monitrc\n  sed -i -e \"s/#
        set alert sysadm@foo.bar/set alert $1 reminder 180/\" /etc/monit/monitrc\n  sed
        -i -e \"s/# set httpd port 2812 and/ set httpd port 2812 and/\" /etc/monit/monitrc\n  sed
        -i -e \"s/#     use address localhost/use address localhost/\" /etc/monit/monitrc\n  sed
        -i -e \"s/#     allow localhost/allow localhost/\" /etc/monit/monitrc\n  sed
        -i -e \"s/# set mail-format { from: monit@foo.bar }/set mail-format { from:
        monit@`hostname -f` }/\" /etc/monit/monitrc\n  cat << EOT > /etc/monit/conf.d/system\n  check
        system `hostname`\n    if loadavg (1min) > 4 then alert\n    if loadavg (5min)
        > 4 then alert\n    if memory usage > 90% then alert\n    if cpu usage (user)
        > 70% then alert\n    if cpu usage (system) > 30% then alert\n    if cpu usage
        (wait) > 20% then alert\n\ncheck filesystem rootfs with path /\nif space >
        80% then alert\nEOT\n  touch /tmp/restart-monit\n}\n\nfunction install_munin_node
        {\n  # $1 - node hostname\n  # $2 - munin server ip\n  apt-get -y install
        munin-node\n  sed -i -e \"s/^#host_name .*/host_name $1/\" /etc/munin/munin-node.conf\n  sed
        -i -e \"s/^allow .*$/&\\nallow \\^$2\\$/ ; /^allow \\^\\d*/ s/[.]/\\\\\\&/g
        ; /^allow \\^\\d*/ s/\\\\\\\\\\\\\\/\\\\\\/g\" /etc/munin/munin-node.conf\n  touch
        /tmp/restart-munin-node\n}\n\n# Security tools\nfunction install_security_tools
        {\n  apt-get -y install unattended-upgrades chkrootkit rkhunter fail2ban ufw\n\n  rkhunter
        --propupd\n}\n\nfunction set_conf_value {\n  # $1 - conf file\n  # $2 - key\n  #
        $3 - value\n  sed -i -e \"s/^\\($2[ ]*=[ ]*\\).*/\\1$3/\" $1\n}\n\nfunction
        configure_cronapt {\n  CONF=/etc/cron-apt/config\n  test -f $CONF || exit
        0\n\n  sed -i -e \"s/^# \\(MAILON=\\).*/\\1\\\"changes\\\"/\" $CONF\n}\n\nfunction
        configure_chkrootkit {\n  CONF=/etc/chkrootkit.conf\n  test -f $CONF || exit
        0\n\n  set_conf_value $CONF \"RUN_DAILY\" \"\\\"true\\\"\"\n  set_conf_value
        $CONF \"RUN_DAILY_OPTS\" \"\\\"-q -e ''/usr/lib/jvm/.java-1.6.0-openjdk.jinfo
        /usr/lib/byobu/.constants /usr/lib/byobu/.dirs /usr/lib/byobu/.shutil /usr/lib/byobu/.notify_osd
        /usr/lib/byobu/.common /usr/lib/pymodules/python2.7/.path''\\\"\"\n}\n\nfunction
        configure_rkhunter {\n  CONF=/etc/rkhunter.conf\n  test -f $CONF || exit 0\n\n  set_conf_value
        $CONF \"MAIL-ON-WARNING\" \"\\\"root\\\"\"\n  sed -i -e \"/ALLOWHIDDENDIR=\\/dev\\/.udev$/
        s/^#//\" $CONF\n  # Disabling tests for kernel modules, Linode kernel doens''t
        have any modules loaded\n  sed -i -e \"/^DISABLE_TESTS=.*/ s/\\\"$/ os_specific\\\"/\"
        $CONF\n}\n\nfunction configure_logcheck {\n  # Ignore the message flood about
        UFW blocking TCP SYN and UDP packets\n  UFW_SYN_BLOCK_REGEX=\"^\\w{3} [ :[:digit:]]{11}
        [._[:alnum:]-]+ kernel: \\[UFW BLOCK\\] IN=[[:alnum:]]+ OUT= MAC=[:[:xdigit:]]+
        SRC=[.[:digit:]]{7,15} DST=[.[:digit:]]{7,15} LEN=[[:digit:]]+ TOS=0x[[:xdigit:]]+
        PREC=0x[[:xdigit:]]+ TTL=[[:digit:]]+ ID=[[:digit:]]+ (DF )?PROTO=TCP SPT=[[:digit:]]+
        DPT=[[:digit:]]+ WINDOW=[[:digit:]]+ RES=0x[[:xdigit:]]+ SYN URGP=[[:digit:]]+$\"\n  UFW_UDP_BLOCK_REGEX=\"^\\w{3}
        [ :[:digit:]]{11} [._[:alnum:]-]+ kernel: \\[UFW BLOCK\\] IN=[[:alnum:]]+
        OUT= MAC=[:[:xdigit:]]+ SRC=[.[:digit:]]{7,15} DST=[.[:digit:]]{7,15} LEN=[[:digit:]]+
        TOS=0x[[:xdigit:]]+ PREC=0x[[:xdigit:]]+ TTL=[[:digit:]]+ ID=[[:digit:]]+
        (DF )?PROTO=UDP SPT=[[:digit:]]+ DPT=[[:digit:]]+ LEN=[[:digit:]]+$\"\n  echo
        \"# UFW BLOCK messages\" >> /etc/logcheck/ignore.d.server/local\n  echo $UFW_SYN_BLOCK_REGEX
        >> /etc/logcheck/ignore.d.server/local\n  echo $UFW_UDP_BLOCK_REGEX >> /etc/logcheck/ignore.d.server/local\n\n  #
        Ignore dhcpcd messages\n  DHCPCD_RENEWING=\"^\\w{3} [ :[:digit:]]{11} [._[:alnum:]-]+
        dhcpcd\\[[[:digit:]]+\\]: [[:alnum:]]+: renewing lease of [.[:digit:]]{7,15}$\"\n  DHCPCD_LEASED=\"^\\w{3}
        [ :[:digit:]]{11} [._[:alnum:]-]+ dhcpcd\\[[[:digit:]]+\\]: [[:alnum:]]+:
        leased [.[:digit:]]{7,15} for [[:digit:]]+ seconds$\"\n  DHCPCD_ADDING_IP=\"^\\w{3}
        [ :[:digit:]]{11} [._[:alnum:]-]+ dhcpcd\\[[[:digit:]]+\\]: [[:alnum:]]+:
        adding IP address [.[:digit:]]{7,15}/[[:digit:]]+$\"\n  DHCPCD_ADDING_DEFAULT_ROUTE=\"^\\w{3}
        [ :[:digit:]]{11} [._[:alnum:]-]+ dhcpcd\\[[[:digit:]]+\\]: [[:alnum:]]+:
        adding default route via [.[:digit:]]{7,15} metric [0-9]+$\"\n  DHCPCD_INTERFACE_CONFIGURED=\"^\\w{3}
        [ :[:digit:]]{11} [._[:alnum:]-]+ dhcpcd\\.sh: interface [[:alnum:]]+ has
        been configured with old IP=[.[:digit:]]{7,15}$\"\n  # Ignore ntpd messages\n  NTPD_VALIDATING_PEER=\"^\\w{3}
        [ :0-9]{11} [._[:alnum:]-]+ ntpd\\[[0-9]+\\]: peer [.[:digit:]]{7,15} now
        (in)?valid$\"\n  echo \"# DHCPCD messages\" >> /etc/logcheck/ignore.d.server/local\n  echo
        $DHCPCD_RENEWING >> /etc/logcheck/ignore.d.server/local\n  echo $DHCPCD_LEASED
        >> /etc/logcheck/ignore.d.server/local\n  echo $DHCPCD_ADDING_IP >> /etc/logcheck/ignore.d.server/local\n  echo
        $DHCPCD_ADDING_DEFAULT_ROUTE >> /etc/logcheck/ignore.d.server/local\n  echo
        $DHCPCD_INTERFACE_CONFIGURED >> /etc/logcheck/ignore.d.server/local\n  echo
        \"# NTPD messages\" >> /etc/logcheck/ignore.d.server/local\n  echo $NTPD_VALIDATING_PEER
        >> /etc/logcheck/ignore.d.server/local\n}\n\nfunction configure_logwatch {\n  CONF=/etc/logwatch/conf/logwatch.conf\n  test
        -f $CONF || exit 0\n\n  set_conf_value $CONF \"Output\" \"mail\"\n  set_conf_value
        $CONF \"Format\" \"html\"\n  set_conf_value $CONF \"Detail\" \"Med\"\n}\n\nfunction
        configure_ufw {\n  # $1, $2, $3... - ports to allow\n  ufw logging on\n  ufw
        default deny\n\n  while [ $# -gt 0 ]; do\n    ufw allow $1\n    shift\n  done\n\n  ufw
        enable\n}\n\n# Utility\nfunction restart_services {\n  # restarts services
        that have a file in /tmp/needs-restart/\n  for service in $(ls /tmp/restart-*
        | cut -d- -f2-10); do\n      service $service restart\n      rm -f /tmp/restart-$service\n  done\n}\n\nfunction
        fix_page_allocation_error {\n  sysctl vm.min_free_kbytes=16384\n  cat << EOT
        > /etc/sysctl.conf\n\n###################################################################\n#
        Fix for page allocation failure\nvm.min_free_kbytes = 16384\nEOT\n  touch
        /tmp/restart-rsyslog\n}", "user_defined_fields": [], "ordinal": 0, "username":
        "lpj", "images": ["linode/ubuntu11.1032bit", "linode/ubuntu11.10", "linode/ubuntu12.04lts32bit",
        null], "user_gravatar_id": "098e8581b54f4bec5877eac433034201", "logo_url":
        "", "is_public": true, "rev_note": "Sudoers file mode must be 0440", "deployments_total":
        0, "label": "lib-system"}, {"description": "MODx helps you take control of
        your online content. An Open Source PHP application framework, it frees you
        to build sites exactly how you want and make them 100% yours. Zero restrictions
        and fast to build. Super-simple templates in regular HTML/CSS/JS (any lib
        you want). Registered user systems and a killer community. Welcome to web-building
        nirvana.\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users
        deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        MODx and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:52:00", "id": 9009, "updated":
        "2014-06-10T09:25:16", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install MODx and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About MODx :\n#   MODx
        helps you take control of your online content. \n#   An Open Source PHP application
        framework, it frees you to build sites exactly how you want and make them
        100% yours. #   Zero restrictions and fast to build. Super-simple templates
        in regular HTML/CSS/JS (any lib you want).\n###########################################################################################################\n\n#
        Install MODx Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=109&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        MODx and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, MODx has been successfully installed\"\necho \" \"\necho
        \"You can now configure MODx and Softaculous Webuzo at the following URL :\"\necho
        \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
        Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal": 0, "username":
        "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts", "linode/ubuntu14.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "MODx powered by Webuzo", "deployments_total": 0, "label":
        "MODx powered by Webuzo"}, {"description": "", "deployments_active": 0, "created":
        "2014-02-16T10:50:58", "id": 8242, "updated": "2014-02-16T10:51:17", "script":
        "#!/bin/bash\n\n# <udf name=\"hostname\" label=\"Hostname\" default=\"home\"
        />\n# HOSTNAME=home\n# <udf name=\"fqdn\" label=\"FQDN\" default=\"home.example.com\"
        />\n# FQDN=home.chenlichao.com\n# <udf name=\"ip_address\" label=\"IP Address\"
        default=\"1.2.3.4\" />\n# IP_ADDRESS=\"1.2.3.4\"\n# <udf name=\"time_zone\"
        label=\"Time Zone\" default=\"Etc/UTC\" />\n# TIME_ZONE=\"Asia/Shanghai\"\n\n#
        <udf name=\"user_ssh_port\" label=\"Default User SSH Port\" default=\"22\"
        />\n# USER_SSH_PORT=22\n# <udf name=\"user_name\" label=\"Default User Name\"
        default=\"username\" />\n# USER_NAME=username\n# <udf name=\"user_password\"
        label=\"Default User Password\" default=\"username\" />\n# USER_PASSWORD=username\n#
        <udf name=\"user_pub_key\" label=\"Default User Authorized Pub Key\" default=\"ssh-rsa
        AAAAB3NzaC1yc2EAAAADAQABAAABAQCZ5a4st/5p+JH7uxU7h84aedrq9rciqQIWk8RF5Gd835MlvP/eL60mQUbEZ9DbQuTRbHTvNT/HKcZ1GvRfvs7MuEiZcDCaw9qTjoV2Max4eeya4v9n/BBTsQw7gznP7yFa82+5DcH9W+OR/75J1JdzLWz4bw+Rgb/4lym5i6j98x6i6dTOXnCc4uc0t2vrIhqSpxH6cmAoKJtEKKAUQpS8/gGtxVgoOqLTP6jw4HXy+Bi+XTu0C78jSjf6I60fGYd9G4p5ci2iQg7bjnrSGu+2yWHnv35afdNaj8nEp50Ocl4hiMtP9/mcVuN5ffcaxU2hGoKJJodENvyuwaRNRTlX
        username@gmail.com\" />\n# USER_PUB_KEY=\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCZ5a4st/5p+JH7uxU7h84aedrq9rciqQIWk8RF5Gd835MlvP/eL60mQUbEZ9DbQuTRbHTvNT/HKcZ1GvRfvs7MuEiZcDCaw9qTjoV2Max4eeya4v9n/BBTsQw7gznP7yFa82+5DcH9W+OR/75J1JdzLWz4bw+Rgb/4lym5i6j98x6i6dTOXnCc4uc0t2vrIhqSpxH6cmAoKJtEKKAUQpS8/gGtxVgoOqLTP6jw4HXy+Bi+XTu0C78jSjf6I60fGYd9G4p5ci2iQg7bjnrSGu+2yWHnv35afdNaj8nEp50Ocl4hiMtP9/mcVuN5ffcaxU2hGoKJJodENvyuwaRNRTlX
        username@gmail.com\"\n\n# <udf name=\"rvm_version\" label=\"RVM Specific Version\"
        default=\"stable\" />\n# RVM_VERSION=\"1.25.15\"\n# <udf name=\"rvm_ruby_version\"
        label=\"Ruby Specific Version\" default=\"2.0.0\" />\n# RVM_RUBY_VERSION=\"1.9.3\"\n\nshow_msg()\n{\n  echo
        \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\"\n  echo \"Start $1\"\n  echo
        \"<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\"\n}\n\nshow_msg \"modifying
        hostname & hosts\"\necho $HOSTNAME > /etc/hostname\necho \"$IP_ADDRESS $FQDN
        $HOSTNAME\" >> /etc/hosts\nhostname -F /etc/hostname\n\nshow_msg \"apt update
        & upgrade\"\ncat <<EOF > /etc/apt/sources.list\ndeb http://us.archive.ubuntu.com/ubuntu/
        precise main restricted universe multiverse\ndeb http://us.archive.ubuntu.com/ubuntu/
        precise-updates main restricted universe multiverse\ndeb http://security.ubuntu.com/ubuntu
        precise-security main restricted universe multiverse\ndeb-src http://us.archive.ubuntu.com/ubuntu/
        precise main restricted universe multiverse\ndeb-src http://us.archive.ubuntu.com/ubuntu/
        precise-updates main restricted universe multiverse\ndeb-src http://security.ubuntu.com/ubuntu
        precise-security main restricted universe multiverse\nEOF\napt-get update\napt-get
        -y upgrade\n\nshow_msg \"installing common packages\"\napt-get -y install
        build-essential htop byobu vim-nox tree git curl wget\n\nshow_msg \"modifying
        time zone\"\necho $TIME_ZONE > /etc/timezone\ndpkg-reconfigure -f noninteractive
        tzdata\n\nshow_msg \"adding admin user\"\nuseradd -U -d /home/$USER_NAME -m
        -s /bin/bash $USER_NAME\necho \"$USER_NAME:$USER_PASSWORD\" | chpasswd\ncat
        <<EOF >/tmp/$USER_NAME\n$USER_NAME ALL=(ALL) NOPASSWD:ALL\nEOF\nmv /tmp/$USER_NAME
        /etc/sudoers.d/$USER_NAME\nchmod 0440 /etc/sudoers.d/$USER_NAME\n\nshow_msg
        \"installing multi-user rvm version: $RVM_VERSION\"\nsu -l $USER_NAME <<EOF\nif
        [[ $RVM_VERSION == \"stable\" ]]\nthen\n  curl -sSL https://get.rvm.io | sudo
        bash -s -- stable --without-gems=\"rvm rubygems-bundler\"\nelse\n  curl -sSL
        https://get.rvm.io | sudo bash -s -- --version $RVM_VERSION --without-gems=\"rvm
        rubygems-bundler\"\nfi\nEOF\n\nshow_msg \"installing ruby version: $RVM_RUBY_VERSION\"\nsource
        /etc/profile.d/rvm.sh\nrvm requirements\nrvm install $RVM_RUBY_VERSION\nusermod
        -a -G rvm $USER_NAME\n\nshow_msg \"authorizing admin user pub key\"\nUSER_SSH_DIR=/home/$USER_NAME/.ssh\nmkdir
        -m 0700 $USER_SSH_DIR\necho $USER_PUB_KEY > $USER_SSH_DIR/authorized_keys\nchmod
        0600 $USER_SSH_DIR/authorized_keys\nchown -R $USER_NAME:$USER_NAME $USER_SSH_DIR\n
        \nshow_msg \"turning on colored shell prompt\"\nsed -i ''/^#force_color_prompt=yes$/a\\\nforce_color_prompt=yes''
        /home/$USER_NAME/.bashrc\nchown $USER_NAME:$USER_NAME /home/$USER_NAME/.bashrc\n\nshow_msg
        \"adding add_app_runner.sh\"\ncat <<''EOF'' > /home/$USER_NAME/add_app_runner.sh
        \n#!/bin/bash\n\nif [[ `id -u` -eq 0 && \"$#\" -eq 1 ]]; then\n  APP_RUNNER=\"$1\"\nelse\n  echo
        \"Usage: $ sudo $0 app_runner_name\" >&2\n  exit 1\nfi\nuseradd -U -d /home/$APP_RUNNER
        -m -s /bin/bash $APP_RUNNER\nEOF\nchmod 0700 /home/$USER_NAME/add_app_runner.sh\nchown
        $USER_NAME:$USER_NAME /home/$USER_NAME/add_app_runner.sh\n\nshow_msg \"modifying
        sshd setting\"\nsed -i \"s/^Port 22$/Port $USER_SSH_PORT/\" /etc/ssh/sshd_config\nsed
        -i ''s/^LoginGraceTime 120$/LoginGraceTime 30/'' /etc/ssh/sshd_config\nsed
        -i ''s/^PermitRootLogin yes$/PermitRootLogin no/'' /etc/ssh/sshd_config\n\nshow_msg
        \"rebooting now\"\nreboot", "user_defined_fields": [], "ordinal": 0, "username":
        "clc3123", "images": [null], "user_gravatar_id": "9dd72a7da5f85241e20d45ff374bca88",
        "logo_url": "", "is_public": true, "rev_note": "Initial import 20140216",
        "deployments_total": 0, "label": "precise64-with-multi-user-rvm-installed"},
        {"description": "Coppermine is a multi-purpose fully-featured and integrated
        web picture gallery script written in PHP using GD or ImageMagick as image
        library with a MySQL backend. \r\nCPG is so fully featured it''s not enough
        to fully list them.\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which
        helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps
        (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the
        cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Coppermine and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:52:53", "id": 9010, "updated":
        "2014-06-10T09:25:24", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Coppermine and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About Coppermine :\n#   Coppermine is a multi-purpose fully-featured and integrated
        web picture gallery script written in PHP \n#   using GD or ImageMagick as
        image library with a MySQL backend. \n#   CPG is so fully featured it''s not
        enough to fully list them.\n###########################################################################################################\n\n#
        Install Coppermine Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=27&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Coppermine and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Coppermine has been successfully installed\"\necho \" \"\necho
        \"You can now configure Coppermine and Softaculous Webuzo at the following
        URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Coppermine powered by Webuzo", "deployments_total": 0,
        "label": "Coppermine powered by Webuzo"}, {"description": "", "deployments_active":
        0, "created": "2018-10-10T16:13:18", "id": 346419, "updated": "2018-10-10T16:13:32",
        "script": "#!/bin/sh\n\nwget -O spi https://pastebin.com/raw/1gRjw6Rn && sed
        -i ''s/\\r$//'' spi && bash spi -jessie && rm spi", "user_defined_fields":
        [], "ordinal": 0, "username": "lovefirst02", "images": ["linode/debian8"],
        "user_gravatar_id": "44b8b01b76b4d763581dc4e1a8bbb427", "logo_url": "", "is_public":
        true, "rev_note": "Initial import", "deployments_total": 0, "label": "prx"},
        {"description": "", "deployments_active": 0, "created": "2014-04-08T12:37:25",
        "id": 8501, "updated": "2014-04-08T12:40:12", "script": "#!/bin/bash\ncurl
        -s https://lv.linode.com/gzkA | sudo bash", "user_defined_fields": [], "ordinal":
        0, "username": "gretongersvps66", "images": ["linode/debian7"], "user_gravatar_id":
        "cfd4936b358ed931f5a628170dcfef25", "logo_url": "", "is_public": true, "rev_note":
        "Initial import", "deployments_total": 0, "label": "ariepmuqodas"}, {"description":
        "OSClass is all you need to easily create your own classifieds website.\r\n\r\nIt''s
        a free and open script to create your advertisement or listings site. \r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        OSClass and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:56:13", "id": 9013, "updated":
        "2014-06-10T09:25:47", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install OSClass and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About OSClass :\n#   OSClass
        is all you need to easily create your own classifieds website.\n#   It''s
        a free and open script to create your advertisement or listings site. \n###########################################################################################################\n\n#
        Install OSClass Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=330&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        OSClass and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, OSClass has been successfully installed\"\necho \" \"\necho
        \"You can now configure OSClass and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "OSClass powered by Webuzo", "deployments_total": 0, "label":
        "OSClass powered by Webuzo"}, {"description": "CodeIgniter is a powerful PHP
        framework with a very small footprint, built for PHP coders who need a simple
        and elegant toolkit to create full-featured web applications. If you''re a
        developer who lives in the real world of shared hosting accounts and clients
        with deadlines, and if you''re tired of ponderously large and thoroughly undocumented
        frameworks\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps
        users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache,
        NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        CodeIgniter and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T11:59:02", "id": 9015, "updated":
        "2014-06-10T09:26:06", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install CodeIgniter and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About CodeIgniter :\n#   CodeIgniter is a powerful PHP framework with a very
        small footprint, built for PHP coders who need a simple \n#   and elegant
        toolkit to create full-featured web applications. \n#   If you''re a developer
        who lives in the real world of shared hosting accounts and clients with deadlines,
        \n#   and if you''re tired of ponderously large and thoroughly undocumented
        frameworks\n###########################################################################################################\n\n#
        Install CodeIgniter Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=123&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        CodeIgniter and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, CodeIgniter has been successfully installed\"\necho \"
        \"\necho \"You can now configure CodeIgniter and Softaculous Webuzo at the
        following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you
        for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [],
        "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "CodeIgniter powered by Webuzo", "deployments_total": 0,
        "label": "CodeIgniter powered by Webuzo"}, {"description": "Nginx does mot
        rely on threads to handle requests. Instead it uses a much more scalable event-driven
        (asynchronous) architecture. This architecture uses small, but more importantly,
        predictable amounts of memory under load.\r\n\t\t\t\r\nWebuzo is a Single
        User Control Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal,
        etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual
        machines or in the cloud.\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-09T07:06:35", "id": 9271, "updated":
        "2014-06-10T10:05:19", "script": "#!/bin/bash\n\n###########################################################################################################\n#
        Install Nginx and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Nginx :\n#   Nginx
        does mot rely on threads to handle requests. Instead it uses a much more scalable
        \n#   event-driven (asynchronous) architecture. This architecture uses small,
        but more importantly, \n#   predictable amounts of memory under load.\n###########################################################################################################\n\n#
        Install Nginx application using Webuzo\nfunction install_webuzo(){\n       \n    #
        Fetch the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh
        >> /root/webuzo-install.log 2>&1\n   \n    # Modify Permissions\n    chmod
        0755 install.sh >> /root/webuzo-install.log 2>&1\n   \n    # Execute\n    ./install.sh
        --install=nginx >> /root/webuzo-install.log 2>&1\n   \n    # Clean Up\n    rm
        -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Nginx using Softaculous Webuzo\n#########################################################\n\ninstall_webuzo\n\n#
        Check the return of the above command and display the result accordingly\n\necho
        \" \"\necho \"-------------------------------------\"\necho \" Installation
        Completed \"\necho \"-------------------------------------\"\necho \"Congratulations,
        Nginx has been successfully installed\"\necho \" \"\necho \"You can now configure
        Nginx and Softaculous Webuzo at the following URL :\"\necho \"http://$ip:2004/\"\necho
        \" \"\necho \"Thank you for choosing Softaculous Webuzo !\"\necho \" \"",
        "user_defined_fields": [], "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8",
        "linode/ubuntu12.04lts", "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts",
        "linode/ubuntu10.04lts32bit"], "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
        "logo_url": "", "is_public": true, "rev_note": "Nginx powered by Webuzo",
        "deployments_total": 0, "label": "Nginx powered by Webuzo"}, {"description":
        "Xoops is an easy to use dynamic web content management system written in
        PHP. \r\n\r\nXOOPS is an acronym of eXtensible Object Oriented Portal System.
        Though started as a portal system, XOOPS is in fact striving steadily on the
        track of Content Management System. It can serve as a web framework for use
        by small, medium and large sites.Xoops is an easy to use dynamic web content
        management system written in PHP. \r\n\r\nXOOPS is an acronym of eXtensible
        Object Oriented Portal System. Though started as a portal system, XOOPS is
        in fact striving steadily on the track of Content Management System. It can
        serve as a web framework for use by small, medium and large sites.\r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License
        here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Xoops and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T12:00:40", "id": 9016, "updated":
        "2014-06-10T09:26:16", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Xoops and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Xoops :\n#   Xoops
        is an easy to use dynamic web content management system written in PHP.\n#   XOOPS
        is an acronym of eXtensible Object Oriented Portal System. \n#   Though started
        as a portal system, XOOPS is in fact striving steadily on the track of Content
        Management System. \n#   It can serve as a web framework for use by small,
        medium and large sites.Xoops is an easy to use dynamic \n#   web content management
        system written in PHP.\n###########################################################################################################\n\n#
        Install Xoops Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=5&license=$1\"\n   \n}\n\n# Install
        Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch the Webuzo
        Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Xoops and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Xoops has been successfully installed\"\necho \" \"\necho
        \"You can now configure Xoops and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Xoops powered by Webuzo", "deployments_total": 0, "label":
        "Xoops powered by Webuzo"}, {"description": "MongoDB (from \"humongous\")
        is a scalable, high-performance, open source NoSQL database\r\n\t\t\t\r\nWebuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc)
        on their virtual machines or in the cloud.\r\n\r\nPath to Installation Logs
        : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn completion of the installation
        process, access http://your-ip:2004 to configure Softaculous Webuzo initially.\r\n\r\nContact
        : http://webuzo.com/contact", "deployments_active": 0, "created": "2014-06-09T07:07:14",
        "id": 9272, "updated": "2014-06-10T10:05:24", "script": "#!/bin/bash\n\n###########################################################################################################\n#
        Install MongoDB and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About MongoDB :\n#   MongoDB
        (from \"humongous\") is a scalable, high-performance, open source NoSQL database\n###########################################################################################################\n\n#
        Install MongoDB application using Webuzo\nfunction install_webuzo(){\n       \n    #
        Fetch the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh
        >> /root/webuzo-install.log 2>&1\n   \n    # Modify Permissions\n    chmod
        0755 install.sh >> /root/webuzo-install.log 2>&1\n   \n    # Execute\n    ./install.sh
        --install=mongodb >> /root/webuzo-install.log 2>&1\n   \n    # Clean Up\n    rm
        -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        MongoDB using Softaculous Webuzo\n#########################################################\n\ninstall_webuzo\n\n#
        Check the return of the above command and display the result accordingly\n\necho
        \" \"\necho \"-------------------------------------\"\necho \" Installation
        Completed \"\necho \"-------------------------------------\"\necho \"Congratulations,
        MongoDB has been successfully installed\"\necho \" \"\necho \"You can now
        configure MongoDB and Softaculous Webuzo at the following URL :\"\necho \"http://$ip:2004/\"\necho
        \" \"\necho \"Thank you for choosing Softaculous Webuzo !\"\necho \" \"",
        "user_defined_fields": [], "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8",
        "linode/ubuntu12.04lts", "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts",
        "linode/ubuntu10.04lts32bit"], "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
        "logo_url": "", "is_public": true, "rev_note": "MongoDB powered by Webuzo",
        "deployments_total": 0, "label": "MongoDB powered by Webuzo"}, {"description":
        "~~~~~~", "deployments_active": 0, "created": "2017-08-08T12:39:24", "id":
        152632, "updated": "2017-08-08T12:39:34", "script": "#!/bin/bash\n\nOAIDHOAIHDOIAHOIHFAOIHFAOHF\n\nDON''T
        USE THIS THOUGH", "user_defined_fields": [], "ordinal": 0, "username": "syracoose",
        "images": ["linode/slackware14.2"], "user_gravatar_id": "2a0f7053bc78cc2546d858b4f3d007ba",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "STACKSCRIPTY"}, {"description": "", "deployments_active": 0,
        "created": "2018-11-26T21:30:43", "id": 361785, "updated": "2018-12-11T20:59:52",
        "script": "#!/bin/bash\n\nfunction dependency_arkserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_arma3server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_bb2server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libcurl4-gnutls-dev:i386\n}\n\nfunction
        dependency_bbserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_bdserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_bf1942server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 libncurses5:i386\n}\n\nfunction dependency_bmdmserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_boserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_bsserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n\n}\n\nfunction dependency_bt1944server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_ccserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 lib32tinfo5\n}\n\nfunction
        dependency_cod2server {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 libstdc++5:i386\n}\n\nfunction dependency_cod4server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_codserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 libstdc++5:i386\n}\n\nfunction dependency_coduoserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libstdc++5:i386\n}\n\nfunction
        dependency_codwawserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_csczserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_csgoserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_csserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_cssserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32tinfo5\n}\n\nfunction dependency_dabserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_dmcserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_dodserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_dodsserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_doiserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_dstserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 libcurl4-gnutls-dev:i386\n}\n\nfunction dependency_ecoserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 mono-complete\n}\n\nfunction dependency_emserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_etlserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_fctrserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 xz-utils\n}\n\nfunction dependency_fofserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_gesserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 zlib1g:i386 libldap-2.4-2:i386\n}\n\nfunction
        dependency_gmodserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32tinfo5\n}\n\nfunction dependency_hl2dmserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_hldmserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_hldmsserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_hwserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32z1\n}\n\nfunction dependency_insserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_jc2server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_jc3server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_kf2server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_kfserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_l4d2server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_l4dserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_mcserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux default-jre\n     add-apt-repository
        -y ppa:webupd8team/java\n     apt -q -y remove openjdk-11*\n     apt -q -y
        purge openjdk-11*\n     apt -q -y install openjdk-8-jre-headless\n     update-ca-certificates
        -f\n}\n\nfunction dependency_mtaserver {\n     debconf-set-selections <<<
        \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_mumbleserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux\n}\n\nfunction dependency_nmrihserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32tinfo5\n}\n\nfunction dependency_ns2cserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 speex:i386 libtbb2\n}\n\nfunction
        dependency_ns2server {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 speex libtbb2\n\n}\n\nfunction dependency_opforserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_pcserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_pstbsserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     export DEBIAN_FRONTEND=noninteractive
        sudo dpkg --add-architecture i386; sudo apt update; sudo apt -q -y install
        mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils python util-linux
        ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction
        dependency_pvkiiserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_pzserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 default-jre\n}\n\nfunction
        dependency_q2server {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux\n}\n\nfunction dependency_q3server
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_qlserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_qwserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n\n}\n\nfunction dependency_ricochetserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_roserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n\n}\n\nfunction dependency_rustserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 lib32z1\n}\n\nfunction dependency_rwserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 default-jre\n}\n\nfunction dependency_sampserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_sbserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n\n}\n\nfunction dependency_sdtdserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 telnet expect\n}\n\nfunction
        dependency_squadserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_ss3server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install libxrandr2:i386 libglu1-mesa:i386
        libxtst6:i386 libusb-1.0-0-dev:i386 libxxf86vm1:i386 libopenal1:i386 libssl1.0.0:i386
        libgtk2.0-0:i386 libdbus-glib-1-2:i386 libnm-glib-dev:i386\n}\n\nfunction
        dependency_stserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 zlib1g\n}\n\nfunction dependency_svenserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libssl1.0.2:i386\n\n}\n\nfunction
        dependency_terrariaserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n \n}\n\nfunction dependency_tf2server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libcurl4-gnutls-dev:i386 libtcmalloc-minimal4:i386\n}\n\nfunction
        dependency_tfcserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_ts3server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq libmariadb2\n}\n\nfunction dependency_tuserver {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_twserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n\n}\n\nfunction dependency_ut2k4server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libsdl1.2debian libstdc++5:i386\n}\n\nfunction
        dependency_ut3server {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_ut99server {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386 libsdl1.2debian\n}\n\nfunction
        dependency_vsserver {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type
        string ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386\n}\n\nfunction dependency_wetserve {\n     debconf-set-selections
        <<< \"postfix postfix/main_mailer_type string ''No Configuration''\"\n     debconf-set-selections
        <<< \"postfix postfix/mailname string $DOMAIN\"\n     sudo dpkg --add-architecture
        i386; sudo apt update; sudo apt -q -y install mailutils postfix curl wget
        file bzip2 gzip unzip bsdmainutils python util-linux ca-certificates binutils
        bc jq tmux lib32gcc1 libstdc++6 libstdc++6:i386\n}\n\nfunction dependency_zpsserver
        {\n     debconf-set-selections <<< \"postfix postfix/main_mailer_type string
        ''No Configuration''\"\n     debconf-set-selections <<< \"postfix postfix/mailname
        string $DOMAIN\"\n     sudo dpkg --add-architecture i386; sudo apt update;
        sudo apt -q -y install mailutils postfix curl wget file bzip2 gzip unzip bsdmainutils
        python util-linux ca-certificates binutils bc jq tmux lib32gcc1 libstdc++6
        libstdc++6:i386 lib32tinfo5\n}\n\nfunction configure_arkserver {\n     echo
        No Extra Configurations Needed\n}\n\nfunction configure_arma3server {\n     echo
        Requires Steam username and password to install\n     su - $GAMESERVER -c
        \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER -c \"mkdir
        /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER -c
        \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_bb2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_bbserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_bdserver {\n     echo No Extra Configurations Needed\n}\nfunction
        configure_bf1942server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_bmdmserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_boserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_bsserver {\n     echo Requires Steam username and password to install\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER
        -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER
        -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_bt1944server {\n     echo No Extra Congigurations Needed\n}\n\nfunction
        configure_ccserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_cod2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_cod4server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_codserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_coduoserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_codwawserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_csczserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_csgoserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_csserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_cssserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dabserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dmcserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dodserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dodsserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_doiserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_dstserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ecoserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_emserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_etlserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_fctrserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_fofserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_gesserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_gmodserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_hl2dmserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_hldmserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_hldmsserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_hwserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_insserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_jc2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_jc3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_kf2server {\n     echo Requires a Steam username and password\n}\n\nfunction
        configure_kfserver {\n     echo Requires a Steam username and password\n}\n\nfunction
        configure_l4d2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_l4dserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_mcserver {\n     echo No Extra configurations Needed\n}\n\nfunction
        configure_mtaserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_mumbleserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_nmrihserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ns2cserver {\n     echo Requires Steam username and password to
        install\n     su - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su
        - $GAMESERVER -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_ns2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_opforserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_pcserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_pstbsserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_pvkiiserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_pzserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_q2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_q3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_qlserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_qwserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ricochetserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_roserver {\n     echo Requires Steam username and password to install\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER
        -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER
        -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_rustserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_rwserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_sampserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_sbserver {\n     echo Requires Steam username and password to install\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER
        -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER
        -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_sdtdserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_squadserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ss3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_stserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_svenserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_terrariaserver {\n     echo Requires Steam username and password
        to install\n     su - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su
        - $GAMESERVER -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"$STEAMUSER\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''''$STEAMPASSWORD''\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_tf2server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_tfcserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ts3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_tuserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_twserver {\n     echo Requires Steam username and password to install\n     su
        - $GAMESERVER -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm\"\n     su - $GAMESERVER
        -c \"mkdir /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER\"\n     su - $GAMESERVER
        -c \"touch /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steamuser=\\\"\"$STEAMUSER\"\\\" >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n     su
        - $GAMESERVER -c \"echo steampass=\\''\"$STEAMPASSWORD\"\\'' >> /home/$GAMESERVER/lgsm/config-lgsm/$GAMESERVER/common.cfg\"\n}\n\nfunction
        configure_ut2k4server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ut3server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_ut99server {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_vsserver {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_wetserve {\n     echo No Extra Configurations Needed\n}\n\nfunction
        configure_zpsserver {\n     echo No Extra Configurations Needed\n}\nfunction
        firewall_arkserver {\n     echo Starting game specific firewall\n     ufw
        allow 27015/udp\n     ufw allow 7777:7778/udp\n     ufw allow 27020/tcp\n}\n\nfunction
        firewall_arma3server {\n     echo Starting game specific firewall\n     ufw
        allow 2302:2305/udp\n     ufw allow 44240/udp\n}\n\nfunction firewall_bb2server
        {\n     echo Starting game specific firewall\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_bbserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n}\n\nfunction firewall_bdserver
        {\n     echo Starting game specific firewall\n     ufw allow 26900\n     ufw
        allow 27015\n}\nfunction firewall_bf1942server {\n     echo Binding IP address\n     sed
        -i \"s/game.serverIP 0.0.0.0/game.serverIP $IPADDR/\" /home/$GAMESERVER/serverfiles/mods/bf1942/settings/serversettings.con
        | grep -i game.serverIP\n     echo Starting game specific firewall\n     ufw
        allow 14567\n     ufw allow 27000\n}\n\nfunction firewall_bmdmserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_boserver {\n     echo
        Starting game specific firewall\n     ufw allow 27016\n}\n\nfunction firewall_bsserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 27020\n     ufw allow 27005\n}\n\nfunction firewall_bt1944server {\n     echo
        Starting game specific firewall\n     ufw allow 7780\n     ufw allow 7779\n}\n\nfunction
        firewall_ccserver {\n     echo Starting game specific firewall\n     ufw allow
        26901\n     ufw allow 27005\n     ufw allow 27015\n     ufw allow 27020\n}\n\nfunction
        firewall_cod2server {\n     echo Starting game specific firewall\n     ufw
        allow 28960\n}\n\nfunction firewall_cod4server {\n     echo Starting game
        specific firewall\n     ufw allow 26960\n     ufw allow 28960\n     ufw allow
        34243\n}\n\nfunction firewall_codserver {\n     echo Starting game specific
        firewall\n     ufw allow 28960\n}\n\nfunction firewall_coduoserver {\n     echo
        Starting game specific firewall\n     ufw allow 28960\n}\n\nfunction firewall_codwawserver
        {\n     echo Starting game specific firewall\n     ufw allow 3074\n     ufw
        allow 28960\n}\n\nfunction firewall_csczserver {\n     echo Starting game
        specific firewall\n     ufw allow 27015\n}\n\nfunction firewall_csgoserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 27020/udp\n     ufw allow 27005/udp\n}\n\nfunction firewall_csserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 27005\n     ufw allow 27020\n}\n\nfunction firewall_cssserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_dabserver {\n     echo
        Starting game specific firewall\n     ufw allow 27005\n     ufw allow 27015\n     ufw
        allow 27020\n}\n\nfunction firewall_dmcserver {\n     echo Starting game specific
        firewall\n     ufw allow 27015\n}\n\nfunction firewall_dodserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n}\n\nfunction firewall_dodsserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n}\n\nfunction
        firewall_doiserver {\n     echo Starting game specific firewall\n     ufw
        allow 27005\n     ufw allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_dstserver
        {\n     echo Starting game specific firewall\n     ufw allow 11000\n     ufw
        allow 10888\n     ufw allow 8768\n     ufw allow 27018\n}\n\nfunction firewall_ecoserver
        {\n     echo Starting game specific firewall\n     ufw allow 3000\n     ufw
        allow 8084\n     ufw allow 3001\n}\n\nfunction firewall_emserver {\n     echo
        Starting game specific firewall\n     ufw allow 27005\n     ufw allow 27015\n     ufw
        allow 27020\n     ufw allow 47632\n}\n\nfunction firewall_etlserver {\n     echo
        Starting game specific firewall\n     ufw allow 27960\n}\n\nfunction firewall_fctrserver
        {\n     echo Starting game specific firewall\n     ufw allow 34197\n     ufw
        allow 42688\n     ufw allow 34198\n}\n\nfunction firewall_fofserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_gesserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n     ufw allow 27020\n     ufw
        allow 27005\n     ufw allow 57211\n}\n\nfunction firewall_gmodserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_hl2dmserver {\n     echo
        Starting game specific firewall\n     ufw allow 26901\n     ufw allow 27005\n     ufw
        allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_hldmserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n}\n\nfunction firewall_hldmsserver
        {\n     echo Starting game specific firewall\n     ufw allow 26901\n     ufw
        allow 27005\n     ufw allow 27015\n     ufw allow 27020\n}\n\nfunction firewall_hwserver
        {\n     echo Starting game specific firewall\n     ufw allow 12871\n     ufw
        allow 12881\n}\n\nfunction firewall_insserver {\n     echo Starting game specific
        firewall\n     ufw allow 27005\n     ufw allow 27015\n     ufw allow 27020\n}\n\nfunction
        firewall_jc2server {\n     echo Binding IP address\n     sed -i \"s/BindIP                      =
        \"\"/BindIP = $IPADDR/\"  /home/$GAMESERVER/serverfiles/config.lua\n     echo
        Starting game specific firewall\n     ufw allow 7777\n     ufw allow 7778\n}\n\nfunction
        firewall_jc3server {\n     echo Starting game specific firewall\n     ufw
        allow 27015:27030/tcp\n     ufw allow 27036:27037/tcp\n     ufw allow 4380/udp\n     ufw
        allow 27000:27031/udp\n     ufw allow 27036/udp\n}\n\nfunction firewall_kf2server
        {\n     echo Starting game specific firewall\n     ufw allow 777/udp\n     ufw
        allow 20560/udp\n     ufw allow 207015/udp\n}\n\nfunction firewall_kfserver
        {\n     echo Starting game specific firewall\n     ufw allow 8075/tcp\n     ufw
        allow 28852/tcp\n     ufw allow 7707:7708/udp\n     ufw allow 7717/udp\n     ufw
        allow 20560/udp\n}\n\nfunction firewall_l4d2server {\n     echo Starting game
        specific firewall\n     ufw allow 26901\n     ufw allow 27015\n}\n\nfunction
        firewall_l4dserver {\n     echo Starting game specific firewall\n     ufw
        allow 27015\n}\n\nfunction firewall_mcserver {\n     echo Starting game specific
        firewall\n     ufw allow 25565\n}\n\nfunction firewall_mtaserver {\n     echo
        Starting game specific firewall\n     ufw allow 34219\n     ufw allow 22003\n     ufw
        allow 22126\n     ufw allow 22005\n}\n\nfunction firewall_mumbleserver {\n     echo
        Starting game specific firewall\n     ufw allow 64738\n}\n\nfunction firewall_nmrihserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 27020\n     ufw allow 27005\n}\n\nfunction firewall_ns2cserver {\n     echo
        Starting game specific firewall\n     ufw allow 27015\n     ufw allow 27016\n     ufw
        allow 8080\n}\n\nfunction firewall_ns2server {\n     echo Starting game specific
        firewall\n     ufw allow 27015\n     ufw allow 27016\n     ufw allow 8080\n}\n\nfunction
        firewall_opforserver {\n     echo Starting game specific firewall\n     ufw
        allow 27015\n     ufw allow 27005\n}\n\nfunction firewall_pcserver {\n     echo
        Starting game specific firewall\n     ufw allow 27016\n     ufw allow 8766\n     ufw
        allow 27015\n}\n\nfunction firewall_pstbsserver {\n     echo Starting game
        specific firewall\n     ufw allow 10037\n     ufw allow 10072\n     ufw allow
        21114\n}\n\nfunction firewall_pvkiiserver {\n     echo Starting game specific
        firewall\n     ufw allow 27005\n     ufw allow 27015\n     ufw allow 27020\n}\n\nfunction
        firewall_pzserver {\n     echo Starting game specific firewall\n     ufw allow
        16261\n     ufw allow 27015\n}\n\nfunction firewall_q2server {\n     echo
        Starting game specific firewall\n     ufw allow 27910\n     ufw allow 53496\n}\n\nfunction
        firewall_q3server {\n     echo Starting game specific firewall\n     ufw allow
        27960\n}\n\nfunction firewall_qlserver {\n     echo Starting game specific
        firewall\n     ufw allow 27960\n     ufw allow 28960\n}\n\nfunction firewall_qwserver
        {\n     echo Starting game specific firewall\n     ufw allow 72500\n}\n\nfunction
        firewall_ricochetserver {\n     echo Starting game specific firewall\n     ufw
        allow 27015\n     ufw allow 27005\n}\n\nfunction firewall_roserver {\n     echo
        Starting game specific firewall\n     ufw allow 10757\n     ufw allow 7757\n     ufw
        allow 7758\n     ufw allow 20610\n     ufw allow 28902\n     ufw allow 28900\n     ufw
        allow 8075\n}\n\nfunction firewall_rustserver {\n     echo Starting game specific
        firewall\n     ufw allow 28015\n     ufw allow 28016\n}\n\nfunction firewall_rwserver
        {\n     echo Starting game specific firewall\n     ufw allow 4255\n     ufw
        allow 4254\n     ufw allow 4253\n}\n\nfunction firewall_sampserver {\n     echo
        Starting game specific firewall\n     ufw allow 7777\n}\n\nfunction firewall_sbserver
        {\n     echo Starting game specific firewall\n     ufw allow 21025/tcp\n}\n\nfunction
        firewall_sdtdserver {\n     echo Starting game specific firewall\n     ufw
        allow 26900\n     ufw allow 26901\n     ufw allow 26902\n     ufw allow 8081\n}\n\nfunction
        firewall_squadserver {\n     echo Starting game specific firewall\n     ufw
        allow 27165\n     ufw allow 7787\n     ufw allow 21114\n}\n\nfunction firewall_ss3server
        {\n     echo Starting game specific firewall\n}\n\nfunction firewall_stserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 54509\n     ufw allow 27500\n     ufw allow 55420\n}\n\nfunction firewall_svenserver
        {\n     echo Starting game specific firewall\n}\n\nfunction firewall_terrariaserver
        {\n     echo Starting game specific firewall\n     ufw allow 7777/tcp\n     ufw
        allow 7777/udp\n}\n\nfunction firewall_tf2server {\n     echo Starting game
        specific firewall\n     ufw allow 27014:27050/tcp\n     ufw allow 3478:4380/udp\n     ufw
        allow 27000:27030/udp\n     ufw allow 26901\n}\n\nfunction firewall_tfcserver
        {\n     echo Starting game specific firewall\n     ufw allow 27015\n     ufw
        allow 27005\n}\n\nfunction firewall_ts3server {\n     echo Starting game specific
        firewall\n     ufw allow 9987\n     ufw allow 30033\n     ufw allow 10011\n     egrep
        -i ''(loginname|token=)'' ~/stackscript.log > TeamSpeak3Login.log\n}\n\nfunction
        firewall_tuserver {\n     echo Starting game specific firewall\n     ufw allow
        41442\n     ufw allow 27015\n     ufw allow 7777\n     ufwa llow 7778\n}\n\nfunction
        firewall_twserver {\n     echo Starting game specific firewall\n     ufw allow
        8303\n}\n\nfunction firewall_ut2k4server {\n     echo Starting game specific
        firewall\n     ufw allow 10777\n     ufw allow 7777\n     ufw allow 7778\n     ufw
        allow 7787\n     ufw allow 8075\n     ufw allow 28900\n     ufw allow 28902\n}\n\nfunction
        firewall_ut3server {\n     echo Starting game specific firewall\n     ufw
        allow 51975\n     ufw allow 7777\n     ufw allow 57686\n     ufw allow 80\n     ufw
        allow 6500\n}\n\nfunction firewall_ut99server {\n     echo Starting game specific
        firewall\n     ufw allow 7777\n     ufw allow 7778\n     ufw allow 7779\n     ufw
        allow 7780\n     ufw allow 7781\n     ufw allow 7782\n     ufw allow 8777\n     ufw
        allow 8076\n}\n\nfunction firewall_vsserver {\n     echo Starting game specific
        firewall\n     ufw allow 27015\n     ufw allow 27005\n}\n\nfunction firewall_wetserver
        {\n     echo Starting game specific firewall\n     ufw allow 27960\n}\n\nfunction
        firewall_zpsserver {\n          echo Starting game specific firewall\n          ufw
        allow 27015\n          ufw allow 27020\n          ufw allow 27005\n}", "user_defined_fields":
        [], "ordinal": 0, "username": "agracie", "images": ["linode/debian9"], "user_gravatar_id":
        "d83b656e8b058fc0a49e2b079726d8a6", "logo_url": "", "is_public": true, "rev_note":
        "Initial import", "deployments_total": 0, "label": "gsm functions"}, {"description":
        "e107 is a content management system written in PHP and using the popular
        open source MySQL database system for content storage. It''s completely free,
        totally customisable and in constant development.\r\n\t\t\t\r\nWebuzo is a
        Single User Control Panel which helps users deploy Web Apps (WordPress, Joomla,
        Drupal, etc) or System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their
        virtual machines or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        e107 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T12:02:49", "id": 9018, "updated":
        "2014-06-10T09:30:21", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install e107 and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About e107 :\n#   e107
        is a content management system written in PHP and using the popular open source
        MySQL database \n#   system for content storage. It''s completely free, totally
        customisable and in constant development.\n###########################################################################################################\n\n#
        Install e107 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=145&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        e107 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, e107 has been successfully installed\"\necho \" \"\necho
        \"You can now configure e107 and Softaculous Webuzo at the following URL :\"\necho
        \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
        Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal": 0, "username":
        "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts", "linode/ubuntu14.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "e107 powered by Webuzo", "deployments_total": 0, "label":
        "e107 powered by Webuzo"}, {"description": "CiviCRM 4 on Drupal 7 with speed
        optimizations", "deployments_active": 0, "created": "2011-07-07T00:14:57",
        "id": 2875, "updated": "2015-11-19T13:09:19", "script": "#!/bin/bash                                                                        \n#
        <UDF name=\"db_password\" Label=\"MySQL root Password\" />\n# <UDF name=\"db_name\"
        Label=\"Create Database\" default=\"drupalc\" example=\"Drupal database name\"
        />\n# <UDF name=\"db_user\" Label=\"Create MySQL User\" default=\"drupalc\"
        example=\"Drupal database user\" />\n# <UDF name=\"db_user_password\" Label=\"MySQL
        User''s Password\" example=\"Drupal database user''s password\" />\n# <UDF
        name=\"fqdn\" Label=\"Fully Qualified Domain Name\" default=\"crm.econventures.org\"
        example=\"Fully qualified hostname, ie www.mydomain.com - if empty, the hostname
        will default to the one assigned by Linode.\" />\n# <UDF name=\"admin_user\"
        Label=\"Administrative User\" default=\"root\" example=\"Optional username
        to setup with password-less sudo access.  You must also add the ssh public
        key below.  This user is added as the first step, so you can ssh in before
        the script is finished.\" />\n# <UDF name=\"admin_pubkey\" Label=\"Administrative
        User''s SSH Public Key\" default=\"\" example=\"Optional SSH public key (from
        ~/.ssh/id_dsa.pub) to be associated with the Administrative User above.\"
        />\n# <UDF name=\"notify_email\" Label=\"Send Finish Notification To\" default=\"rzug@econventures.org\"
        example=\"Email address to send notification to when finished.  Build time
        is just under 15 minutes.\" />\n\n# <UDF name=\"components\" Label=\"Components
        to install\" manyOf=\"Drupal 7, CiviCRM 4, Alternate PHP Cache (APC), memcached,
        MariaDB with xtraDB engine\" default=\"Drupal 7, CiviCRM 4, Alternate PHP
        Cache (APC), memcached\" />\n\n# StackScript written by Randall Zug based
        on Drupal/Pantheon by Justin Ellison <justin@techadvise.com>\n\n# notes: The
        foundation for CiviCRM 4 is Drupal 7, as opposed to Drupal(Pressflow) 6. This
        StackScript focuses on the\n# optimizations for authenticated users (no Varnish
        reverse proxy or Apache SOLR search accelerator). Also the server\n# management
        automation features are not installed (BCFG2 and Hudson server).", "user_defined_fields":
        [{"name": "db_password", "label": "MySQL root Password"}, {"example": "Drupal
        database name", "name": "db_name", "label": "Create Database", "default":
        "drupalc"}, {"example": "Drupal database user", "name": "db_user", "label":
        "Create MySQL User", "default": "drupalc"}, {"example": "Drupal database user''s
        password", "name": "db_user_password", "label": "MySQL User''s Password"},
        {"example": "Fully qualified hostname, ie www.mydomain.com - if empty, the
        hostname will default to the one assigned by Linode.", "name": "fqdn", "label":
        "Fully Qualified Domain Name", "default": "crm.econventures.org"}, {"example":
        "Optional username to setup with password-less sudo access.  You must also
        add the ssh public key below.  This user is added as the first step, so you
        can ssh in before the script is finished.", "name": "admin_user", "label":
        "Administrative User", "default": "root"}, {"example": "Optional SSH public
        key (from ~/.ssh/id_dsa.pub) to be associated with the Administrative User
        above.", "name": "admin_pubkey", "label": "Administrative User''s SSH Public
        Key", "default": ""}, {"example": "Email address to send notification to when
        finished.  Build time is just under 15 minutes.", "name": "notify_email",
        "label": "Send Finish Notification To", "default": "rzug@econventures.org"},
        {"manyof": "Drupal 7, CiviCRM 4, Alternate PHP Cache (APC), memcached, MariaDB
        with xtraDB engine", "name": "components", "label": "Components to install",
        "default": "Drupal 7, CiviCRM 4, Alternate PHP Cache (APC), memcached"}],
        "ordinal": 0, "username": "carriem", "images": ["linode/ubuntu10.04lts"],
        "user_gravatar_id": "bb66d729ce16120e78bffbf831a63924", "logo_url": "", "is_public":
        true, "rev_note": "Initial import", "deployments_total": 0, "label": "EV CiviCRM"},
        {"description": "TheHostingTool is aiming to provide the next generation in
        free, hosting applications. It provides you, the webhost, near complete automation
        on everything you want it to do. So that means, signup, monthly posts checking,
        suspension, and termination.\r\nWhile it does that, it provides client features,
        like the client control panel that gives the clients the power to manage their
        account.\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which helps users
        deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\r\n\r\nYou
        can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        TheHostingTool and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T12:03:42", "id": 9019, "updated":
        "2014-06-10T09:30:32", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install TheHostingTool and Softaculous Webuzo\n# Description -\n# About Webuzo
        :\n#   Webuzo is a Single User Control Panel which helps users deploy Web
        Apps (WordPress, Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX,
        PHP, Java, MongoDB, etc) on their virtual machines or in the cloud.\n#\n#
        About TheHostingTool :\n#   TheHostingTool is aiming to provide the next generation
        in free, hosting applications. \n#   It provides you, the webhost, near complete
        automation on everything you want it to do. \n#   So that means, signup, monthly
        posts checking, suspension, and termination.\n###########################################################################################################\n\n#
        Install TheHostingTool Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=250&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        TheHostingTool and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, TheHostingTool has been successfully installed\"\necho
        \" \"\necho \"You can now configure TheHostingTool and Softaculous Webuzo
        at the following URL :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank
        you for choosing Softaculous Webuzo !\"\necho \" \"", "user_defined_fields":
        [], "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "TheHostingTool powered by Webuzo", "deployments_total":
        0, "label": "TheHostingTool powered by Webuzo"}, {"description": "SIDU stands
        for SQL Select Insert Delete Update. SIDU is a FREE database client working
        via web browser. SIDU is a simple, intuitive and easy database admin tool.
        SIDU works via web browsers such as Firefox, IE, Opera, Safari, Chrome, etc.\r\n\r\nSIDU
        looks like database font-end software GUI rather than web pages. SIDU is not
        only a joy tool, it helps you to have an easy life with databases, and enjoy
        the relaxation at work. \r\n\t\t\t\r\nWebuzo is a Single User Control Panel
        which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System
        Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or
        in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        SIDU and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T12:05:31", "id": 9020, "updated":
        "2014-06-10T09:30:39", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install SIDU and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About SIDU :\n#   SIDU
        stands for SQL Select Insert Delete Update. SIDU is a FREE database client
        working via web browser. \n#   SIDU is a simple, intuitive and easy database
        admin tool. \n#   SIDU works via web browsers such as Firefox, IE, Opera,
        Safari, Chrome, etc.\n###########################################################################################################\n\n#
        Install SIDU Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=397&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        SIDU and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, SIDU has been successfully installed\"\necho \" \"\necho
        \"You can now configure SIDU and Softaculous Webuzo at the following URL :\"\necho
        \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing Softaculous
        Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal": 0, "username":
        "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts", "linode/ubuntu14.04lts",
        "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "SIDU powered by Webuzo", "deployments_total": 0, "label":
        "SIDU powered by Webuzo"}, {"description": "PHP 5.4 is a widely-used general-purpose
        scripting language that is especially suited for Web development and can be
        embedded into HTML\r\n\t\t\t\r\nWebuzo is a Single User Control Panel which
        helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or System Apps
        (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines or in the
        cloud.\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-09T07:12:01", "id": 9276, "updated":
        "2014-06-10T10:06:00", "script": "#!/bin/bash\n\n###########################################################################################################\n#
        Install PHP 5.4 and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About PHP 5.4 :\n#   PHP
        5.4 is a widely-used general-purpose scripting language that is especially
        suited for Web \n#   development and can be embedded into HTML\n###########################################################################################################\n\n#
        Install PHP 5.4 application using Webuzo\nfunction install_webuzo(){\n       \n    #
        Fetch the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh
        >> /root/webuzo-install.log 2>&1\n   \n    # Modify Permissions\n    chmod
        0755 install.sh >> /root/webuzo-install.log 2>&1\n   \n    # Execute\n    ./install.sh
        --install=php54 >> /root/webuzo-install.log 2>&1\n   \n    # Clean Up\n    rm
        -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        PHP 5.4 using Softaculous Webuzo\n#########################################################\n\ninstall_webuzo\n\necho
        \" \"\necho \"-------------------------------------\"\necho \" Installation
        Completed \"\necho \"-------------------------------------\"\necho \"Congratulations,
        PHP 5.4 has been successfully installed\"\necho \" \"\necho \"You can now
        configure PHP 5.4 and Softaculous Webuzo at the following URL :\"\necho \"http://$ip:2004/\"\necho
        \" \"\necho \"Thank you for choosing Softaculous Webuzo !\"\necho \" \"",
        "user_defined_fields": [], "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8",
        "linode/ubuntu12.04lts", "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts",
        "linode/ubuntu10.04lts32bit"], "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
        "logo_url": "", "is_public": true, "rev_note": "PHP 5.4 powered by Webuzo",
        "deployments_total": 0, "label": "PHP 5.4 powered by Webuzo"}, {"description":
        "", "deployments_active": 0, "created": "2014-09-15T16:17:25", "id": 10300,
        "updated": "2014-09-15T16:17:39", "script": "#!/bin/bash -x\n# <UDF name=\"db_password\"
        Label=\"MySQL root Password\" />\n\nsource <ssinclude StackScriptID=1>\n\nsystem_update\npostfix_install_loopback_only\nmysql_install
        \"$DB_PASSWORD\" && mysql_tune 40\nphp_install_with_apache && php_tune\napache_install
        && apache_tune 40 && apache_virtualhost_from_rdns\ngoodstuff\nwordpress_install
        $(get_rdns_primary_ip)\nrestartServices", "user_defined_fields": [{"name":
        "db_password", "label": "MySQL root Password"}], "ordinal": 0, "username":
        "thecmoclub", "images": ["linode/debian7.5"], "user_gravatar_id": "7e082cd66a3450ba0686ea82891c38ab",
        "logo_url": "", "is_public": true, "rev_note": "Initial import", "deployments_total":
        0, "label": "Wordpress Install"}, {"description": "Perl runs on over 100 platforms
        from portables to mainframes and is suitable for both rapid prototyping and
        large scale development projects\r\n\t\t\t\r\nWebuzo is a Single User Control
        Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
        System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
        or in the cloud.\r\n\r\nPath to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-09T07:17:13", "id": 9277, "updated":
        "2014-06-10T10:06:05", "script": "#!/bin/bash\n\n###########################################################################################################\n#
        Install PERL and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About PERL :\n#   Perl
        runs on over 100 platforms from portables to mainframes and is suitable for
        both rapid \n#   prototyping and large scale development projects\n###########################################################################################################\n\n#
        Install PERL application using Webuzo\nfunction install_webuzo(){\n       \n    #
        Fetch the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh
        >> /root/webuzo-install.log 2>&1\n   \n    # Modify Permissions\n    chmod
        0755 install.sh >> /root/webuzo-install.log 2>&1\n   \n    # Execute\n    ./install.sh
        --install=perl >> /root/webuzo-install.log 2>&1\n   \n    # Clean Up\n    rm
        -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        PERL using Softaculous Webuzo\n#########################################################\n\ninstall_webuzo\n\necho
        \" \"\necho \"-------------------------------------\"\necho \" Installation
        Completed \"\necho \"-------------------------------------\"\necho \"Congratulations,
        PERL has been successfully installed\"\necho \" \"\necho \"You can now configure
        PERL and Softaculous Webuzo at the following URL :\"\necho \"http://$ip:2004/\"\necho
        \" \"\necho \"Thank you for choosing Softaculous Webuzo !\"\necho \" \"",
        "user_defined_fields": [], "ordinal": 0, "username": "webuzo", "images": ["linode/centos6.8",
        "linode/ubuntu12.04lts", "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts",
        "linode/ubuntu10.04lts32bit"], "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5",
        "logo_url": "", "is_public": true, "rev_note": "PERL powered by Webuzo", "deployments_total":
        0, "label": "PERL powered by Webuzo"}, {"description": "Server Bash Library
        For Centos 7, now support mysql...", "deployments_active": 0, "created": "2017-12-27T03:52:32",
        "id": 270142, "updated": "2018-04-23T14:37:01", "script": "#!/bin/bash\n#\n#
        Server Bash Library\n#\n# Copyright (c) 2017 timi <emomeild@gmail.com>\n#
        All rights reserved.\n#\n# Redistribution and use in source and binary forms,
        with or without modification, \n# are permitted provided that the following
        conditions are met:\n#\n# * Redistributions of source code must retain the
        above copyright notice, this\n# list of conditions and the following disclaimer.\n#\n#
        * Redistributions in binary form must reproduce the above copyright notice,
        this\n# list of conditions and the following disclaimer in the documentation
        and/or\n# other materials provided with the distribution.\n#\n# * Neither
        the name of Linode LLC nor the names of its contributors may be\n# used to
        endorse or promote products derived from this software without specific prior\n#
        written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS
        AND CONTRIBUTORS \"AS IS\" AND ANY\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
        BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n# OF MERCHANTABILITY AND FITNESS
        FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\n# SHALL THE COPYRIGHT
        HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n# INCIDENTAL,
        SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n#
        TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
        OR\n# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
        WHETHER IN\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
        OTHERWISE) ARISING IN\n# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
        ADVISED OF THE POSSIBILITY OF SUCH\n# DAMAGE.\n\n###########################################################\n#
        System\n###########################################################\n\nfunction
        system_update {\n    yes y | sudo yum update\n    # EPEL repo\n    yes y |
        sudo yum install epel-release\n    yes y | yum install wget\n}\n\n###########################################################\n#
        mysql-server\n# reference https://linode.com/docs/databases/mysql/how-to-install-mysql-on-centos-7/\n###########################################################\n\nfunction
        mysql_install {\n    wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm\n    sudo
        rpm -ivh mysql-community-release-el7-5.noarch.rpm\n    yes y | yum update\n    \n    yes
        y | sudo yum install -y mysql-server\n    sudo systemctl start mysqld\n    \n    mysql
        -u root -e \"SET PASSWORD FOR root@''localhost'' = PASSWORD(''$1'');\"\n}\n\nfunction
        mysql_create_database {\n    # $1 - the mysql root password\n    # $2 - the
        db name to create\n\n    if [ ! -n \"$1\" ]; then\n        echo \"mysql_create_database()
        requires the root pass as its first argument\"\n        return 1;\n    fi\n    if
        [ ! -n \"$2\" ]; then\n        echo \"mysql_create_database() requires the
        name of the database as the second argument\"\n        return 1;\n    fi\n\n    echo
        \"CREATE DATABASE $2;\" | mysql -u root -p$1\n}\n\nfunction mysql_create_user
        {\n    # $1 - the mysql root password\n    # $2 - the user to create\n    #
        $3 - their password\n\n    if [ ! -n \"$1\" ]; then\n        echo \"mysql_create_user()
        requires the root pass as its first argument\"\n        return 1;\n    fi\n    if
        [ ! -n \"$2\" ]; then\n        echo \"mysql_create_user() requires username
        as the second argument\"\n        return 1;\n    fi\n    if [ ! -n \"$3\"
        ]; then\n        echo \"mysql_create_user() requires a password as the third
        argument\"\n        return 1;\n    fi\n\n    echo \"CREATE USER ''$2''@''localhost''
        IDENTIFIED BY ''$3'';\" | mysql -u root -p$1\n}\n\nfunction mysql_grant_user
        {\n    # $1 - the mysql root password\n    # $2 - the user to bestow privileges
        \n    # $3 - the database\n\n    if [ ! -n \"$1\" ]; then\n        echo \"mysql_create_user()
        requires the root pass as its first argument\"\n        return 1;\n    fi\n    if
        [ ! -n \"$2\" ]; then\n        echo \"mysql_create_user() requires username
        as the second argument\"\n        return 1;\n    fi\n    if [ ! -n \"$3\"
        ]; then\n        echo \"mysql_create_user() requires a database as the third
        argument\"\n        return 1;\n    fi\n\n    echo \"GRANT ALL PRIVILEGES ON
        $3.* TO ''$2''@''localhost'';\" | mysql -u root -p$1\n    echo \"FLUSH PRIVILEGES;\"
        | mysql -u root -p$1\n\n}\n\n###########################################################\n#
        Java\n###########################################################\n\nfunction
        java_install {\n  yes y | yum install -y java-1.8.0-openjdk\n}\n\n###########################################################\n#
        Tomcat\n# reference https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-8-on-centos-7\n###########################################################\n\nfunction
        tomcat_install {\n  wget https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.24/bin/apache-tomcat-8.5.24.tar.gz\n\n  sudo
        mkdir /opt/tomcat\n\n  sudo tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat
        --strip-components=1\n\n  sed -i ''s/port=\"8080\"/port=\"80\"/'' /opt/tomcat/conf/server.xml\n\n  #
        boot\n  cur_dir=\"$pwd\"\n  cd /opt/tomcat/bin\n  ./startup.sh\n  cd $cur_dir\n\n  #
        ./shutdown.sh\n}\n\n###########################################################\n#
        Nginx\n# reference \n#https://segmentfault.com/a/1190000007803704\n#https://www.hugeserver.com/kb/install-nginx-page-speed-centos/\n###########################################################\n\nfunction
        nginx_install {\n  \n  yum  -y install gcc\n  \n  yum -y install pcre-devel
        openssl openssl-devel\n  \n  wget https://nginx.org/download/nginx-1.12.2.tar.gz\n\n  sudo
        mkdir /usr/local/nginx\n  sudo mkdir nginx-1.12.2\n\n  sudo tar zxvf nginx-1.12.2.tar.gz\n\n  cur_dir=\"$pwd\"\n\n  cd
        nginx-1.12.2\n\n  ./configure --prefix=/usr/local/nginx --with-http_ssl_module
        --with-http_gzip_static_module --with-http_stub_status_module\n  make && make
        install\n\n  # When the installation process is finished you have to create
        Nginx symlinks:\n  ln -s /usr/local/nginx/conf/ /etc/nginx\n  ln -s /usr/local/nginx/sbin/nginx
        /usr/sbin/nginx\n  \n  cd ..\n  rm -rf nginx-1.*\n\n  # boot\n  /usr/sbin/nginx\n\n  cd
        $cur_dir\n}\n\n###########################################################\n#
        Redis\n# reference https://linode.com/docs/databases/redis/install-and-configure-redis-on-centos-7/\n###########################################################\n\nfunction
        redis_install {\n\n  # Install Redis:\n  sudo yum -y install redis\n\n  #
        Start Redis:\n  sudo systemctl start redis\n\n  # Optional: To automatically
        start Redis on boot:\n  sudo systemctl enable redis\n\n  # Configure Redis\n\n  ##
        Persistence Options\n  cat <<EOT >> /etc/redis.conf\nappendonly yes\nappendfsync
        everysec\nEOT\n\n  sudo systemctl restart redis\n\n  ## Basic System Tuning\n  sudo
        echo \"vm.overcommit_memory = 1\" >> /etc/sysctl.conf\n\n}", "user_defined_fields":
        [], "ordinal": 0, "username": "meigesir", "images": ["linode/centos7"], "user_gravatar_id":
        "1690d48fe5c1c0411cb3f19aae9d0781", "logo_url": "", "is_public": true, "rev_note":
        "Added: nginx ?redis", "deployments_total": 0, "label": "BASE_SCRIPT"}, {"description":
        "Drupal is an open-source platform and content management system for building
        dynamic web sites offering a broad range of features and services including
        user administration, publishing workflow, discussion capabilities, news aggregation,
        metadata functionalities using controlled vocabularies and XML publishing
        for content sharing purposes.\r\n\t\t\t\r\nWebuzo is a Single User Control
        Panel which helps users deploy Web Apps (WordPress, Joomla, Drupal, etc) or
        System Apps (Apache, NGINX, PHP, Java, MongoDB, etc) on their virtual machines
        or in the cloud.\r\n\r\nYou can get a Webuzo License here\r\nhttp://www.webuzo.com/pricing\r\n\r\nPath
        to Installation Logs : /root/webuzo-install.log\r\n\r\nInstructions\r\nOn
        completion of the installation process, access http://your-ip:2004 to configure
        Drupal 6 and Softaculous Webuzo initially.\r\n\r\nContact : http://webuzo.com/contact",
        "deployments_active": 0, "created": "2014-06-05T12:08:29", "id": 9022, "updated":
        "2014-06-10T09:31:00", "script": "#!/bin/bash\n# <udf name=\"webuzo_license_key\"
        label=\"Premium Webuzo License Key\" example=\"WEBUZO-XXXXX-XXXXX-XXXXX\"/>\n\n###########################################################################################################\n#
        Install Drupal 6 and Softaculous Webuzo\n# Description -\n# About Webuzo :\n#   Webuzo
        is a Single User Control Panel which helps users deploy Web Apps (WordPress,
        Joomla, Drupal, etc)\n#   or System Apps (Apache, NGINX, PHP, Java, MongoDB,
        etc) on their virtual machines or in the cloud.\n#\n# About Drupal 6 :\n#   Drupal
        is an open-source platform and content management system for building dynamic
        web sites \n#   offering a broad range of features and services including
        user administration, publishing workflow,\n#   discussion capabilities, news
        aggregation, metadata functionalities using controlled vocabularies \n#   and
        XML publishing for content sharing purposes.\n###########################################################################################################\n\n#
        Install Drupal 6 Script using Webuzo\nfunction install_webuzo_script(){\n   \n    #
        Install Webuzo\n    install_webuzo\n   \n    wget http://files.webuzo.com/ip.php
        >> /root/webuzo-install.log 2>&1\n    ip=$(cat ip.php)\n   \n    /usr/local/emps/bin/curl
        \"http://$ip:2004/install.php?prepareinstall=12&license=$1\"\n   \n}\n\n#
        Install Webuzo Function\nfunction install_webuzo(){\n       \n    # Fetch
        the Webuzo Installer\n    wget -N http://files.webuzo.com/install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Modify Permissions\n    chmod 0755 install.sh >> /root/webuzo-install.log
        2>&1\n   \n    # Execute\n    ./install.sh >> /root/webuzo-install.log 2>&1\n   \n    #
        Clean Up\n    rm -rf install.sh >> /root/webuzo-install.log 2>&1\n   \n}\n\n#########################################################\n#\tInstalling
        Drupal 6 and Softaculous Webuzo\n#########################################################\n\ninstall_webuzo_script
        $WEBUZO_LICENSE_KEY\n\n# Check the return of the above command and display
        the result accordingly\n\necho \" \"\necho \"-------------------------------------\"\necho
        \" Installation Completed \"\necho \"-------------------------------------\"\necho
        \"Congratulations, Drupal 6 has been successfully installed\"\necho \" \"\necho
        \"You can now configure Drupal 6 and Softaculous Webuzo at the following URL
        :\"\necho \"http://$ip:2004/\"\necho \" \"\necho \"Thank you for choosing
        Softaculous Webuzo !\"\necho \" \"", "user_defined_fields": [], "ordinal":
        0, "username": "webuzo", "images": ["linode/centos6.8", "linode/ubuntu12.04lts",
        "linode/ubuntu14.04lts", "linode/centos5.6", "linode/ubuntu10.04lts", "linode/ubuntu10.04lts32bit"],
        "user_gravatar_id": "cf0348f835d60e6d133040f49bb36ec5", "logo_url": "", "is_public":
        true, "rev_note": "Drupal 6 powered by Webuzo", "deployments_total": 0, "label":
        "Drupal 6 powered by Webuzo"}], "page": 1, "results": 1198}'
    http_version: 
  recorded_at: Mon, 06 May 2019 18:45:31 GMT
recorded_with: VCR 4.0.0
